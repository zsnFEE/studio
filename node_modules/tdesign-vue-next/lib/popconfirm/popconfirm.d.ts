declare const _default: import("vue").DefineComponent<{
    cancelBtn: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["cancelBtn"]>;
        default: import("./type").TdPopconfirmProps["cancelBtn"];
    };
    confirmBtn: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["confirmBtn"]>;
        default: import("./type").TdPopconfirmProps["confirmBtn"];
    };
    content: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["content"]>;
    };
    default: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["default"]>;
    };
    destroyOnClose: {
        type: BooleanConstructor;
        default: boolean;
    };
    icon: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["icon"]>;
    };
    placement: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["placement"]>;
        default: import("./type").TdPopconfirmProps["placement"];
        validator(val: import("./type").TdPopconfirmProps["placement"]): boolean;
    };
    popupProps: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["popupProps"]>;
    };
    showArrow: {
        type: BooleanConstructor;
        default: boolean;
    };
    theme: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["theme"]>;
        default: import("./type").TdPopconfirmProps["theme"];
        validator(val: import("./type").TdPopconfirmProps["theme"]): boolean;
    };
    triggerElement: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["triggerElement"]>;
    };
    visible: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultVisible: BooleanConstructor;
    onCancel: import("vue").PropType<import("./type").TdPopconfirmProps["onCancel"]>;
    onConfirm: import("vue").PropType<import("./type").TdPopconfirmProps["onConfirm"]>;
    onVisibleChange: import("vue").PropType<import("./type").TdPopconfirmProps["onVisibleChange"]>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    cancelBtn: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["cancelBtn"]>;
        default: import("./type").TdPopconfirmProps["cancelBtn"];
    };
    confirmBtn: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["confirmBtn"]>;
        default: import("./type").TdPopconfirmProps["confirmBtn"];
    };
    content: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["content"]>;
    };
    default: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["default"]>;
    };
    destroyOnClose: {
        type: BooleanConstructor;
        default: boolean;
    };
    icon: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["icon"]>;
    };
    placement: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["placement"]>;
        default: import("./type").TdPopconfirmProps["placement"];
        validator(val: import("./type").TdPopconfirmProps["placement"]): boolean;
    };
    popupProps: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["popupProps"]>;
    };
    showArrow: {
        type: BooleanConstructor;
        default: boolean;
    };
    theme: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["theme"]>;
        default: import("./type").TdPopconfirmProps["theme"];
        validator(val: import("./type").TdPopconfirmProps["theme"]): boolean;
    };
    triggerElement: {
        type: import("vue").PropType<import("./type").TdPopconfirmProps["triggerElement"]>;
    };
    visible: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultVisible: BooleanConstructor;
    onCancel: import("vue").PropType<import("./type").TdPopconfirmProps["onCancel"]>;
    onConfirm: import("vue").PropType<import("./type").TdPopconfirmProps["onConfirm"]>;
    onVisibleChange: import("vue").PropType<import("./type").TdPopconfirmProps["onVisibleChange"]>;
}>>, {
    visible: boolean;
    theme: "default" | "warning" | "danger";
    modelValue: boolean;
    placement: "left" | "right" | "top" | "bottom" | "top-left" | "top-right" | "bottom-left" | "bottom-right" | "left-top" | "left-bottom" | "right-top" | "right-bottom";
    destroyOnClose: boolean;
    showArrow: boolean;
    defaultVisible: boolean;
    cancelBtn: import("..").SlotReturnValue | import("..").TdButtonProps;
    confirmBtn: import("..").SlotReturnValue | import("..").TdButtonProps;
}, {}>;
export default _default;
