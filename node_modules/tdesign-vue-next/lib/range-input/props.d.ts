import { TdRangeInputProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    activeIndex: {
        type: NumberConstructor;
    };
    borderless: BooleanConstructor;
    clearable: BooleanConstructor;
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    format: {
        type: PropType<TdRangeInputProps["format"]>;
    };
    inputProps: {
        type: PropType<TdRangeInputProps["inputProps"]>;
    };
    label: {
        type: PropType<TdRangeInputProps["label"]>;
    };
    placeholder: {
        type: PropType<TdRangeInputProps["placeholder"]>;
    };
    prefixIcon: {
        type: PropType<TdRangeInputProps["prefixIcon"]>;
    };
    readonly: {
        type: BooleanConstructor;
        default: any;
    };
    separator: {
        type: PropType<TdRangeInputProps["separator"]>;
        default: TdRangeInputProps["separator"];
    };
    showClearIconOnEmpty: BooleanConstructor;
    size: {
        type: PropType<TdRangeInputProps["size"]>;
        default: TdRangeInputProps["size"];
        validator(val: TdRangeInputProps["size"]): boolean;
    };
    status: {
        type: PropType<TdRangeInputProps["status"]>;
        default: TdRangeInputProps["status"];
        validator(val: TdRangeInputProps["status"]): boolean;
    };
    suffix: {
        type: PropType<TdRangeInputProps["suffix"]>;
    };
    suffixIcon: {
        type: PropType<TdRangeInputProps["suffixIcon"]>;
    };
    tips: {
        type: PropType<TdRangeInputProps["tips"]>;
    };
    value: {
        type: PropType<TdRangeInputProps["value"]>;
        default: TdRangeInputProps["value"];
    };
    modelValue: {
        type: PropType<TdRangeInputProps["value"]>;
        default: TdRangeInputProps["value"];
    };
    defaultValue: {
        type: PropType<TdRangeInputProps["defaultValue"]>;
        default: () => TdRangeInputProps["defaultValue"];
    };
    onBlur: PropType<TdRangeInputProps["onBlur"]>;
    onChange: PropType<TdRangeInputProps["onChange"]>;
    onClear: PropType<TdRangeInputProps["onClear"]>;
    onClick: PropType<TdRangeInputProps["onClick"]>;
    onEnter: PropType<TdRangeInputProps["onEnter"]>;
    onFocus: PropType<TdRangeInputProps["onFocus"]>;
    onMouseenter: PropType<TdRangeInputProps["onMouseenter"]>;
    onMouseleave: PropType<TdRangeInputProps["onMouseleave"]>;
};
export default _default;
