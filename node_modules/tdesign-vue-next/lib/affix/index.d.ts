import { TdAffixProps } from './type';
import './style';
export * from './type';
export declare const Affix: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        container: {
            type: import("vue").PropType<TdAffixProps["container"]>;
            default: () => TdAffixProps["container"];
        };
        content: {
            type: import("vue").PropType<TdAffixProps["content"]>;
        };
        default: {
            type: import("vue").PropType<TdAffixProps["default"]>;
        };
        offsetBottom: {
            type: NumberConstructor;
            default: number;
        };
        offsetTop: {
            type: NumberConstructor;
            default: number;
        };
        zIndex: {
            type: NumberConstructor;
        };
        onFixedChange: import("vue").PropType<TdAffixProps["onFixedChange"]>;
    }>> & {
        onFixedChange?: (...args: any[]) => any;
    }, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "fixedChange"[], import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        container: {
            type: import("vue").PropType<TdAffixProps["container"]>;
            default: () => TdAffixProps["container"];
        };
        content: {
            type: import("vue").PropType<TdAffixProps["content"]>;
        };
        default: {
            type: import("vue").PropType<TdAffixProps["default"]>;
        };
        offsetBottom: {
            type: NumberConstructor;
            default: number;
        };
        offsetTop: {
            type: NumberConstructor;
            default: number;
        };
        zIndex: {
            type: NumberConstructor;
        };
        onFixedChange: import("vue").PropType<TdAffixProps["onFixedChange"]>;
    }>> & {
        onFixedChange?: (...args: any[]) => any;
    }, {
        offsetTop: number;
        container: import("..").ScrollContainer;
        offsetBottom: number;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        container: {
            type: import("vue").PropType<TdAffixProps["container"]>;
            default: () => TdAffixProps["container"];
        };
        content: {
            type: import("vue").PropType<TdAffixProps["content"]>;
        };
        default: {
            type: import("vue").PropType<TdAffixProps["default"]>;
        };
        offsetBottom: {
            type: NumberConstructor;
            default: number;
        };
        offsetTop: {
            type: NumberConstructor;
            default: number;
        };
        zIndex: {
            type: NumberConstructor;
        };
        onFixedChange: import("vue").PropType<TdAffixProps["onFixedChange"]>;
    }>> & {
        onFixedChange?: (...args: any[]) => any;
    }, () => JSX.Element, {}, {}, {}, {
        offsetTop: number;
        container: import("..").ScrollContainer;
        offsetBottom: number;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    container: {
        type: import("vue").PropType<TdAffixProps["container"]>;
        default: () => TdAffixProps["container"];
    };
    content: {
        type: import("vue").PropType<TdAffixProps["content"]>;
    };
    default: {
        type: import("vue").PropType<TdAffixProps["default"]>;
    };
    offsetBottom: {
        type: NumberConstructor;
        default: number;
    };
    offsetTop: {
        type: NumberConstructor;
        default: number;
    };
    zIndex: {
        type: NumberConstructor;
    };
    onFixedChange: import("vue").PropType<TdAffixProps["onFixedChange"]>;
}>> & {
    onFixedChange?: (...args: any[]) => any;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "fixedChange"[], "fixedChange", {
    offsetTop: number;
    container: import("..").ScrollContainer;
    offsetBottom: number;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & import("vue").Plugin;
export type AffixProps = TdAffixProps;
export default Affix;
