import { TdSwiperProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    animation: {
        type: PropType<TdSwiperProps["animation"]>;
        default: TdSwiperProps["animation"];
        validator(val: TdSwiperProps["animation"]): boolean;
    };
    autoplay: {
        type: BooleanConstructor;
        default: boolean;
    };
    current: {
        type: NumberConstructor;
        default: number;
    };
    defaultCurrent: {
        type: NumberConstructor;
        default: number;
    };
    direction: {
        type: PropType<TdSwiperProps["direction"]>;
        default: TdSwiperProps["direction"];
        validator(val: TdSwiperProps["direction"]): boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    height: {
        type: NumberConstructor;
    };
    interval: {
        type: NumberConstructor;
        default: number;
    };
    loop: {
        type: BooleanConstructor;
        default: boolean;
    };
    navigation: {
        type: PropType<TdSwiperProps["navigation"]>;
    };
    stopOnHover: {
        type: BooleanConstructor;
        default: boolean;
    };
    theme: {
        type: PropType<TdSwiperProps["theme"]>;
        default: TdSwiperProps["theme"];
        validator(val: TdSwiperProps["theme"]): boolean;
    };
    trigger: {
        type: PropType<TdSwiperProps["trigger"]>;
        default: TdSwiperProps["trigger"];
        validator(val: TdSwiperProps["trigger"]): boolean;
    };
    type: {
        type: PropType<TdSwiperProps["type"]>;
        default: TdSwiperProps["type"];
        validator(val: TdSwiperProps["type"]): boolean;
    };
    cardScale: {
        type: NumberConstructor;
        default: number;
    };
    onChange: PropType<TdSwiperProps["onChange"]>;
};
export default _default;
