export * from './type';
export declare const Watermark: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        alpha: {
            type: NumberConstructor;
            default: number;
        };
        content: {
            type: import("vue").PropType<import("./type").TdWatermarkProps["content"]>;
        };
        default: {
            type: import("vue").PropType<import("./type").TdWatermarkProps["default"]>;
        };
        height: {
            type: NumberConstructor;
        };
        isRepeat: {
            type: BooleanConstructor;
            default: boolean;
        };
        lineSpace: {
            type: NumberConstructor;
            default: number;
        };
        movable: BooleanConstructor;
        moveInterval: {
            type: NumberConstructor;
            default: number;
        };
        offset: {
            type: import("vue").PropType<import("./type").TdWatermarkProps["offset"]>;
        };
        removable: {
            type: BooleanConstructor;
            default: boolean;
        };
        rotate: {
            type: NumberConstructor;
            default: number;
        };
        watermarkContent: {
            type: import("vue").PropType<import("./type").TdWatermarkProps["watermarkContent"]>;
        };
        width: {
            type: NumberConstructor;
        };
        x: {
            type: NumberConstructor;
        };
        y: {
            type: NumberConstructor;
        };
        zIndex: {
            type: NumberConstructor;
        };
    }>>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        alpha: {
            type: NumberConstructor;
            default: number;
        };
        content: {
            type: import("vue").PropType<import("./type").TdWatermarkProps["content"]>;
        };
        default: {
            type: import("vue").PropType<import("./type").TdWatermarkProps["default"]>;
        };
        height: {
            type: NumberConstructor;
        };
        isRepeat: {
            type: BooleanConstructor;
            default: boolean;
        };
        lineSpace: {
            type: NumberConstructor;
            default: number;
        };
        movable: BooleanConstructor;
        moveInterval: {
            type: NumberConstructor;
            default: number;
        };
        offset: {
            type: import("vue").PropType<import("./type").TdWatermarkProps["offset"]>;
        };
        removable: {
            type: BooleanConstructor;
            default: boolean;
        };
        rotate: {
            type: NumberConstructor;
            default: number;
        };
        watermarkContent: {
            type: import("vue").PropType<import("./type").TdWatermarkProps["watermarkContent"]>;
        };
        width: {
            type: NumberConstructor;
        };
        x: {
            type: NumberConstructor;
        };
        y: {
            type: NumberConstructor;
        };
        zIndex: {
            type: NumberConstructor;
        };
    }>>, {
        alpha: number;
        rotate: number;
        lineSpace: number;
        removable: boolean;
        isRepeat: boolean;
        movable: boolean;
        moveInterval: number;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        alpha: {
            type: NumberConstructor;
            default: number;
        };
        content: {
            type: import("vue").PropType<import("./type").TdWatermarkProps["content"]>;
        };
        default: {
            type: import("vue").PropType<import("./type").TdWatermarkProps["default"]>;
        };
        height: {
            type: NumberConstructor;
        };
        isRepeat: {
            type: BooleanConstructor;
            default: boolean;
        };
        lineSpace: {
            type: NumberConstructor;
            default: number;
        };
        movable: BooleanConstructor;
        moveInterval: {
            type: NumberConstructor;
            default: number;
        };
        offset: {
            type: import("vue").PropType<import("./type").TdWatermarkProps["offset"]>;
        };
        removable: {
            type: BooleanConstructor;
            default: boolean;
        };
        rotate: {
            type: NumberConstructor;
            default: number;
        };
        watermarkContent: {
            type: import("vue").PropType<import("./type").TdWatermarkProps["watermarkContent"]>;
        };
        width: {
            type: NumberConstructor;
        };
        x: {
            type: NumberConstructor;
        };
        y: {
            type: NumberConstructor;
        };
        zIndex: {
            type: NumberConstructor;
        };
    }>>, () => JSX.Element, {}, {}, {}, {
        alpha: number;
        rotate: number;
        lineSpace: number;
        removable: boolean;
        isRepeat: boolean;
        movable: boolean;
        moveInterval: number;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    alpha: {
        type: NumberConstructor;
        default: number;
    };
    content: {
        type: import("vue").PropType<import("./type").TdWatermarkProps["content"]>;
    };
    default: {
        type: import("vue").PropType<import("./type").TdWatermarkProps["default"]>;
    };
    height: {
        type: NumberConstructor;
    };
    isRepeat: {
        type: BooleanConstructor;
        default: boolean;
    };
    lineSpace: {
        type: NumberConstructor;
        default: number;
    };
    movable: BooleanConstructor;
    moveInterval: {
        type: NumberConstructor;
        default: number;
    };
    offset: {
        type: import("vue").PropType<import("./type").TdWatermarkProps["offset"]>;
    };
    removable: {
        type: BooleanConstructor;
        default: boolean;
    };
    rotate: {
        type: NumberConstructor;
        default: number;
    };
    watermarkContent: {
        type: import("vue").PropType<import("./type").TdWatermarkProps["watermarkContent"]>;
    };
    width: {
        type: NumberConstructor;
    };
    x: {
        type: NumberConstructor;
    };
    y: {
        type: NumberConstructor;
    };
    zIndex: {
        type: NumberConstructor;
    };
}>>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {
    alpha: number;
    rotate: number;
    lineSpace: number;
    removable: boolean;
    isRepeat: boolean;
    movable: boolean;
    moveInterval: number;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & import("vue").Plugin;
export default Watermark;
