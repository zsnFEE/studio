{"version":3,"file":"index.js","sources":["../../../../components/select/consts/index.ts"],"sourcesContent":["import { InjectionKey, ComputedRef } from 'vue';\nimport { TdSelectProps, TdOptionProps, SelectValue } from '../type';\n\nexport const selectInjectKey: InjectionKey<\n  ComputedRef<{\n    hoverIndex: number;\n    selectValue: TdSelectProps['value'];\n    size: TdSelectProps['size'];\n    max: TdSelectProps['max'];\n    reserveKeyword: TdSelectProps['reserveKeyword'];\n    multiple: TdSelectProps['multiple'];\n    handleValueChange: TdSelectProps['onChange'];\n    handleCreate: TdSelectProps['onCreate'];\n    handlerInputChange: TdSelectProps['onInputChange'];\n    handlePopupVisibleChange: TdSelectProps['onPopupVisibleChange'];\n    popupContentRef: ComputedRef<HTMLElement>;\n    indeterminate: boolean;\n    isCheckAll: boolean;\n    onCheckAllChange: (checked: boolean) => void;\n    getSelectedOptions: (selectValue?: SelectValue[] | SelectValue) => TdOptionProps[];\n    displayOptions: TdSelectProps['options'];\n    emitBlur: (e: MouseEvent | KeyboardEvent) => void;\n  }>\n> = Symbol('selectProvide');\n"],"names":["selectInjectKey","Symbol"],"mappings":";;;;;;IAGaA,eAAA,GAoBTC,OAAO,eAAe;;;;"}