declare const _default: import("vue").DefineComponent<{
    cascading: {
        type: import("vue").PropType<import("./type").TdAvatarGroupProps["cascading"]>;
        default: import("./type").TdAvatarGroupProps["cascading"];
        validator(val: import("./type").TdAvatarGroupProps["cascading"]): boolean;
    };
    collapseAvatar: {
        type: import("vue").PropType<import("./type").TdAvatarGroupProps["collapseAvatar"]>;
    };
    max: {
        type: NumberConstructor;
    };
    popupProps: {
        type: import("vue").PropType<import("./type").TdAvatarGroupProps["popupProps"]>;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    cascading: {
        type: import("vue").PropType<import("./type").TdAvatarGroupProps["cascading"]>;
        default: import("./type").TdAvatarGroupProps["cascading"];
        validator(val: import("./type").TdAvatarGroupProps["cascading"]): boolean;
    };
    collapseAvatar: {
        type: import("vue").PropType<import("./type").TdAvatarGroupProps["collapseAvatar"]>;
    };
    max: {
        type: NumberConstructor;
    };
    popupProps: {
        type: import("vue").PropType<import("./type").TdAvatarGroupProps["popupProps"]>;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
}>>, {
    size: string;
    cascading: import("./type").CascadingValue;
}, {}>;
export default _default;
