{"version":3,"file":"dep-f29f22c2.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_parent.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseUnset.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_customOmitClone.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/omit.js"],"sourcesContent":["import baseGet from './_baseGet.js';\nimport baseSlice from './_baseSlice.js';\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nexport default parent;\n","import castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nexport default baseUnset;\n","import isPlainObject from './isPlainObject.js';\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nexport default customOmitClone;\n","import arrayMap from './_arrayMap.js';\nimport baseClone from './_baseClone.js';\nimport baseUnset from './_baseUnset.js';\nimport castPath from './_castPath.js';\nimport copyObject from './_copyObject.js';\nimport customOmitClone from './_customOmitClone.js';\nimport flatRest from './_flatRest.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nexport default omit;\n"],"names":["parent","object","path","length","baseGet","baseSlice","baseUnset","castPath","toKey","last","customOmitClone","value","isPlainObject","undefined","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","omit","flatRest","paths","result","isDeep","arrayMap","copyObject","getAllKeysIn","baseClone"],"mappings":";;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAMA,CAACC,MAAM,EAAEC,IAAI,EAAE;EAC5B,OAAOA,IAAI,CAACC,MAAM,GAAG,CAAC,GAAGF,MAAM,GAAGG,gBAAO,CAACH,MAAM,EAAEI,oBAAS,CAACH,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;AAC3E;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,SAASA,CAACL,MAAM,EAAEC,IAAI,EAAE;AAC/BA,EAAAA,IAAI,GAAGK,iBAAQ,CAACL,IAAI,EAAED,MAAM,CAAC,CAAA;AAC7BA,EAAAA,MAAM,GAAGD,MAAM,CAACC,MAAM,EAAEC,IAAI,CAAC,CAAA;AAC7B,EAAA,OAAOD,MAAM,IAAI,IAAI,IAAI,OAAOA,MAAM,CAACO,cAAK,CAACC,SAAI,CAACP,IAAI,CAAC,CAAC,CAAC,CAAA;AAC3D;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASQ,eAAeA,CAACC,KAAK,EAAE;AAC9B,EAAA,OAAOC,0CAAa,CAACD,KAAK,CAAC,GAAGE,SAAS,GAAGF,KAAK,CAAA;AACjD;;ACJA;AACA,IAAIG,eAAe,GAAG,CAAC;AACnBC,EAAAA,eAAe,GAAG,CAAC;AACnBC,EAAAA,kBAAkB,GAAG,CAAC,CAAA;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,IAAI,GAAGC,kBAAQ,CAAC,UAASjB,MAAM,EAAEkB,KAAK,EAAE;EAC1C,IAAIC,MAAM,GAAG,EAAE,CAAA;EACf,IAAInB,MAAM,IAAI,IAAI,EAAE;AAClB,IAAA,OAAOmB,MAAM,CAAA;AACf,GAAA;EACA,IAAIC,MAAM,GAAG,KAAK,CAAA;AAClBF,EAAAA,KAAK,GAAGG,iBAAQ,CAACH,KAAK,EAAE,UAASjB,IAAI,EAAE;AACrCA,IAAAA,IAAI,GAAGK,iBAAQ,CAACL,IAAI,EAAED,MAAM,CAAC,CAAA;IAC7BoB,MAAM,KAAKA,MAAM,GAAGnB,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,CAAA;AACpC,IAAA,OAAOD,IAAI,CAAA;AACb,GAAC,CAAC,CAAA;EACFqB,2BAAU,CAACtB,MAAM,EAAEuB,sBAAY,CAACvB,MAAM,CAAC,EAAEmB,MAAM,CAAC,CAAA;AAChD,EAAA,IAAIC,MAAM,EAAE;AACVD,IAAAA,MAAM,GAAGK,mBAAS,CAACL,MAAM,EAAEN,eAAe,GAAGC,eAAe,GAAGC,kBAAkB,EAAEN,eAAe,CAAC,CAAA;AACrG,GAAA;AACA,EAAA,IAAIP,MAAM,GAAGgB,KAAK,CAAChB,MAAM,CAAA;EACzB,OAAOA,MAAM,EAAE,EAAE;AACfG,IAAAA,SAAS,CAACc,MAAM,EAAED,KAAK,CAAChB,MAAM,CAAC,CAAC,CAAA;AAClC,GAAA;AACA,EAAA,OAAOiB,MAAM,CAAA;AACf,CAAC,CAAC,CAAA;AAEF,aAAeH,IAAI;;;;;"}