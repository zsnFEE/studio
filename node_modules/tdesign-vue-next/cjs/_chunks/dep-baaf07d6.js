/**
 * tdesign v1.15.2
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

var _typeof = require('@babel/runtime/helpers/typeof');
var _baseGetTag = require('./dep-79f734cc.js');
var isObjectLike = require('./dep-41b6fe49.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _typeof__default = /*#__PURE__*/_interopDefaultLegacy(_typeof);

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return _typeof__default["default"](value) == 'symbol' || isObjectLike.isObjectLike(value) && _baseGetTag.baseGetTag(value) == symbolTag;
}

exports.isSymbol = isSymbol;
//# sourceMappingURL=dep-baaf07d6.js.map
