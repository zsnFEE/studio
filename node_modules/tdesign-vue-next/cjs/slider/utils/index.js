/**
 * tdesign v1.15.2
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var isString = require('../../_chunks/dep-c6c5ec69.js');
require('../../_chunks/dep-79f734cc.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-ce0157af.js');
require('../../_chunks/dep-41b6fe49.js');

var getStopStyle = function getStopStyle(position, isVertical) {
  return isVertical ? {
    top: "calc(".concat(100 - position, "% - 1px)")
  } : {
    left: "".concat(position, "%")
  };
};
var formatSliderValue = function formatSliderValue(val, type) {
  if (type === "first") {
    if (val instanceof Array) {
      return val[0];
    }
    return val;
  }
  if (val instanceof Array) {
    return val[1];
  }
  return 0;
};
var formatLabel = function formatLabel(label, val) {
  if (Boolean(label) === false) {
    return String(val);
  }
  if (isString.isString(label)) {
    var text = String(val);
    try {
      var rule = /\${value}%/g;
      var enableToReplace = rule.test(label);
      if (enableToReplace) {
        text = label.replace(rule, String(val));
      } else {
        text = label;
        throw new Error();
      }
    } catch (e) {
      console.warn("fail to parse label prop, please pass string such as '${value}%'");
    }
    return text;
  }
  return label;
};

exports.formatLabel = formatLabel;
exports.formatSliderValue = formatSliderValue;
exports.getStopStyle = getStopStyle;
//# sourceMappingURL=index.js.map
