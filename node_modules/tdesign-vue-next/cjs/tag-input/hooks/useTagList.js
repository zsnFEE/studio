/**
 * tdesign v1.15.2
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var tag_index = require('../../tag/index.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-040b3cbb.js');
var index = require('../../_chunks/dep-9b6bbd57.js');
var index$1 = require('../../_chunks/dep-ac087407.js');
var index$3 = require('../../_chunks/dep-ffd5bd7c.js');
require('../../_chunks/dep-682444b3.js');
var index$4 = require('../../_chunks/dep-e4a93457.js');
var index$2 = require('../../_chunks/dep-00be0637.js');
require('../../tag/tag.js');
require('tdesign-icons-vue-next');
require('tinycolor2');
require('../../tag/props.js');
require('../../_chunks/dep-8848ca1b.js');
require('../../config-provider/hooks/useConfig.js');
require('../../_chunks/dep-ee4f84a5.js');
require('../../_chunks/dep-66f974a3.js');
require('../../_chunks/dep-0f5dd876.js');
require('dayjs');
require('../../_chunks/dep-5e94db90.js');
require('../../_chunks/dep-2f309208.js');
require('../../_chunks/dep-7154c044.js');
require('../../_chunks/dep-3e1aa2e0.js');
require('../../_chunks/dep-79f734cc.js');
require('../../_chunks/dep-63ff6e12.js');
require('../../_chunks/dep-020c2a7e.js');
require('../../_chunks/dep-79cd6be1.js');
require('../../_chunks/dep-41b6fe49.js');
require('../../_chunks/dep-ce0157af.js');
require('../../_chunks/dep-06f7d92f.js');
require('../../_chunks/dep-0c415789.js');
require('../../_chunks/dep-57045e93.js');
require('../../_chunks/dep-c66679ef.js');
require('../../_chunks/dep-3df90229.js');
require('../../_chunks/dep-93426c60.js');
require('../../_chunks/dep-c6c5ec69.js');
require('../../_chunks/dep-1ec17e27.js');
require('../../_chunks/dep-15b276e6.js');
require('../../_chunks/dep-4d3ddec0.js');
require('../../_chunks/dep-d0f125b5.js');
require('../../_chunks/dep-4c12d7dc.js');
require('../../_chunks/dep-0a9c2d75.js');
require('../../_chunks/dep-eada02ce.js');
require('../../_chunks/dep-d388e00e.js');
require('../../_chunks/dep-15ce91d8.js');
require('../../_chunks/dep-baaf07d6.js');
require('../../_chunks/dep-27e5c925.js');
require('../../_chunks/dep-13d731e3.js');
require('../../_chunks/dep-7cb54b29.js');
require('../../_chunks/dep-2544aa61.js');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/classCallCheck');
require('../../tag/check-tag.js');
require('../../tag/check-tag-props.js');
require('../../_chunks/dep-4045ff88.js');
require('../../tag/check-tag-group.js');
require('../../tag/check-tag-group-props.js');
require('../../_chunks/dep-0ff81c06.js');
require('../../_chunks/dep-1532a597.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function useTagList(props) {
  var renderTNode = index.useTNodeJSX();
  var classPrefix = index$1.usePrefixClass();
  var _toRefs = Vue.toRefs(props),
    value = _toRefs.value,
    modelValue = _toRefs.modelValue,
    onRemove = _toRefs.onRemove,
    max = _toRefs.max,
    minCollapsedNum = _toRefs.minCollapsedNum,
    size = _toRefs.size,
    tagProps = _toRefs.tagProps,
    getDragProps = _toRefs.getDragProps;
  var _useVModel = index$2.useVModel(value, modelValue, props.defaultValue || [], props.onChange),
    _useVModel2 = _slicedToArray__default["default"](_useVModel, 2),
    _tagValue = _useVModel2[0],
    setTagValue = _useVModel2[1];
  var tagValue = Vue.computed(function () {
    return _tagValue.value || [];
  });
  var oldInputValue = Vue.ref();
  var isDisabled = index$3.useDisabled();
  var isReadonly = index$4.useReadonly();
  var _onClose = function onClose(p) {
    var _onRemove$value;
    var arr = _toConsumableArray__default["default"](tagValue.value);
    var _arr$splice = arr.splice(p.index, 1),
      _arr$splice2 = _slicedToArray__default["default"](_arr$splice, 1),
      item = _arr$splice2[0];
    setTagValue(arr, _objectSpread(_objectSpread({
      trigger: "tag-remove"
    }, p), {}, {
      item: item
    }));
    (_onRemove$value = onRemove.value) === null || _onRemove$value === void 0 || _onRemove$value.call(onRemove, _objectSpread(_objectSpread({}, p), {}, {
      item: item,
      trigger: "tag-remove",
      value: arr
    }));
  };
  var clearAll = function clearAll(context) {
    setTagValue([], {
      trigger: "clear",
      e: context.e
    });
  };
  var onInnerEnter = function onInnerEnter(value2, context) {
    var _props$onEnter;
    var valueStr = value2 ? String(value2).trim() : "";
    var isLimitExceeded = max && tagValue.value.length >= max.value;
    var newValue = tagValue.value;
    if (!isLimitExceeded && valueStr) {
      newValue = tagValue.value.concat(String(valueStr));
      setTagValue(newValue, {
        trigger: "enter",
        index: newValue.length - 1,
        item: valueStr,
        e: context.e
      });
    }
    props === null || props === void 0 || (_props$onEnter = props.onEnter) === null || _props$onEnter === void 0 || _props$onEnter.call(props, newValue, _objectSpread(_objectSpread({}, context), {}, {
      inputValue: value2
    }));
  };
  var onInputBackspaceKeyUp = function onInputBackspaceKeyUp(value2) {
    if (!tagValue.value.length) return;
    oldInputValue.value = value2;
  };
  var onInputBackspaceKeyDown = function onInputBackspaceKeyDown(value2, context) {
    var e = context.e;
    if (!tagValue.value.length || e.key === "Process" || isReadonly.value) return;
    var isDelete = /(Backspace|NumpadDelete)/i.test(e.code) || /(Backspace|NumpadDelete)/i.test(e.key);
    if (!value2 && isDelete) {
      var _onRemove$value2;
      var index = tagValue.value.length - 1;
      var item = tagValue.value[index];
      var trigger = "backspace";
      var newValue = tagValue.value.slice(0, -1);
      setTagValue(newValue, {
        e: e,
        index: index,
        item: item,
        trigger: trigger
      });
      (_onRemove$value2 = onRemove.value) === null || _onRemove$value2 === void 0 || _onRemove$value2.call(onRemove, {
        e: e,
        index: index,
        item: item,
        trigger: trigger,
        value: newValue
      });
    }
    oldInputValue.value = value2;
  };
  var renderLabel = function renderLabel(_ref) {
    var displayNode = _ref.displayNode,
      label = _ref.label;
    var newList = minCollapsedNum.value ? tagValue.value.slice(0, minCollapsedNum.value) : tagValue.value;
    var list = displayNode ? [displayNode] : newList.map(function (item, index) {
      var _getDragProps$value;
      var tagContent = renderTNode("tag", {
        params: {
          value: item
        }
      });
      return Vue.createVNode(tag_index.Tag, Vue.mergeProps({
        "key": "".concat(item).concat(index),
        "size": size.value,
        "disabled": isDisabled.value,
        "onClose": function onClose(context) {
          return _onClose({
            e: context.e,
            index: index
          });
        },
        "closable": !isReadonly.value && !isDisabled.value
      }, (_getDragProps$value = getDragProps.value) === null || _getDragProps$value === void 0 ? void 0 : _getDragProps$value.call(getDragProps, index, item), tagProps.value), {
        "default": function _default() {
          return [tagContent !== null && tagContent !== void 0 ? tagContent : item];
        }
      });
    }) || [];
    if (![null, void 0, ""].includes(label)) {
      list.unshift(Vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-tag-input__prefix"),
        "key": "label"
      }, [label]));
    }
    if (newList.length !== tagValue.value.length) {
      var len = tagValue.value.length - newList.length;
      var more = renderTNode("collapsedItems", {
        params: {
          value: tagValue.value,
          count: tagValue.value.length - minCollapsedNum.value,
          collapsedTags: tagValue.value.slice(minCollapsedNum.value, tagValue.value.length),
          collapsedSelectedItems: tagValue.value.slice(minCollapsedNum.value, tagValue.value.length),
          onClose: _onClose
        }
      });
      list.push(more !== null && more !== void 0 ? more : Vue.createVNode(tag_index.Tag, Vue.mergeProps({
        "key": "more",
        "size": size.value
      }, tagProps.value), {
        "default": function _default() {
          return ["+", len];
        }
      }));
    }
    return list;
  };
  return {
    tagValue: tagValue,
    clearAll: clearAll,
    onClose: _onClose,
    onInnerEnter: onInnerEnter,
    onInputBackspaceKeyUp: onInputBackspaceKeyUp,
    onInputBackspaceKeyDown: onInputBackspaceKeyDown,
    renderLabel: renderLabel
  };
}

exports.useTagList = useTagList;
//# sourceMappingURL=useTagList.js.map
