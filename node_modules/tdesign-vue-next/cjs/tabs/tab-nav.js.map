{"version":3,"file":"tab-nav.js","sources":["../../../shared/hooks/useDragSort/index.ts","../../../common/js/tabs/base.ts","../../../components/tabs/tab-nav.tsx"],"sourcesContent":["import { onUnmounted } from 'vue';\n\nconst traversalTabNavs = (tabNavs: HTMLCollection, fn: { (itemNode: any): void; (tabNav: HTMLDivElement): void }) => {\n  for (const itemNode of tabNavs) {\n    if (itemNode.getAttribute('draggable')) {\n      fn(itemNode);\n    }\n  }\n};\n\nconst handleTarget = (target: EventTarget, tabNavs: HTMLCollection): any => {\n  let resultTarget;\n  traversalTabNavs(tabNavs, (itemNode) => {\n    if (itemNode.contains(target)) {\n      resultTarget = itemNode;\n    }\n  });\n  return resultTarget;\n};\n\nexport function useDragSort(props: any) {\n  let navsWrap: HTMLDivElement = null;\n\n  // 获取当前正在拖动的tabNav节点\n  let dragged: HTMLDivElement;\n  const enterTargets: HTMLDivElement[] = [];\n\n  const dragstart = (event: DragEvent) => {\n    const target = event.target as HTMLDivElement;\n    // const { target } = event;\n    // 保存拖动元素的引用(ref.)\n    dragged = target;\n    // 使其半透明\n    target.style.opacity = '0.5';\n  };\n  const dragend = (event: DragEvent) => {\n    // 重置透明度\n    (event.target as HTMLDivElement).style.opacity = '';\n  };\n  /* 放置目标元素时触发事件 */\n  const dragover = (event: DragEvent) => {\n    // 阻止默认动作以启用drop\n    event.preventDefault();\n  };\n  // 当可拖动的元素进入可放置的目标时\n  const dragenter = (event: DragEvent) => {\n    // 高亮目标节点\n    const target = handleTarget(event.target, navsWrap.children);\n    if (target && target !== dragged && target.draggable) {\n      target.firstChild.style.outline = '1px dashed #0052d9';\n      // 进入的节点全部记录下来\n      if (!enterTargets.includes(target)) {\n        enterTargets.push(target);\n      }\n    }\n  };\n  // 当拖动元素离开可放置目标节点\n  const dragleave = (event: DragEvent) => {\n    const target = event.target as HTMLDivElement;\n    // 重置其边框\n    // const { target } = event;\n    for (const enterTarget of enterTargets) {\n      // 目标不在需要放入的节点内，则重置边框\n      if (!enterTarget.contains(target)) {\n        // 记录过的节点全部重置边框\n        (enterTarget.firstChild as HTMLDivElement).style.outline = 'none';\n      }\n    }\n  };\n  const drop = (event: DragEvent) => {\n    // 阻止默认动作（如打开一些元素的链接）\n    event.preventDefault();\n\n    traversalTabNavs(navsWrap.children, (tabNav) => {\n      tabNav.firstChild.style.outline = 'none';\n    });\n    // 将拖动的元素到所选择的放置目标节点中\n    let target = handleTarget(event.target, navsWrap.children);\n    if (target && target.parentNode !== dragged && target.draggable) {\n      // 获取拖拽元素index\n      const dragIndex = [].indexOf.call(navsWrap.children, dragged);\n      // 获取放入元素index\n      const targetIndex = [].indexOf.call(navsWrap.children, target);\n      if (targetIndex > dragIndex) {\n        target = navsWrap.children[targetIndex + 1];\n      }\n\n      // 当props.theme === \"normal\" 会多出一个指示条为第一个dom节点，所以需要减1\n      const currentIndex = props.theme === 'card' ? dragIndex : dragIndex - 1;\n      const endIndex = props.theme === 'card' ? targetIndex : targetIndex - 1;\n      props.onDragSort?.({\n        currentIndex,\n        current: props.panels[currentIndex].value,\n        targetIndex: endIndex,\n        target: props.panels[endIndex].value,\n      });\n    }\n  };\n  function setNavsWrap(val: HTMLDivElement) {\n    navsWrap = val;\n    navsWrap.addEventListener('dragstart', dragstart, false);\n    navsWrap.addEventListener('dragend', dragend, false);\n    navsWrap.addEventListener('dragover', dragover, false);\n    navsWrap.addEventListener('dragenter', dragenter, false);\n    document.addEventListener('dragleave', dragleave, false);\n    document.addEventListener('mousemove', dragleave, false);\n    navsWrap.addEventListener('drop', drop, false);\n  }\n\n  onUnmounted(() => {\n    if (navsWrap) {\n      navsWrap.removeEventListener('dragstart', dragstart);\n      navsWrap.removeEventListener('dragend', dragend);\n      navsWrap.removeEventListener('dragover', dragover);\n      navsWrap.removeEventListener('dragenter', dragenter);\n      document.removeEventListener('dragleave', dragleave);\n      document.removeEventListener('mousemove', dragleave);\n      navsWrap.removeEventListener('drop', drop);\n    }\n  });\n  return { setNavsWrap };\n}\n","const getDomWidth = (dom: HTMLElement): number => dom?.offsetWidth || 0;\nconst getDomOffsetLeft = (dom: HTMLElement): number => dom?.offsetLeft || 0;\n\ntype scrollPosition = 'auto' | 'start' | 'center' | 'end';\n\nexport interface allElementDeps {\n  activeTab?: HTMLElement;\n  navsContainer?: HTMLElement;\n  navsWrap?: HTMLElement;\n  leftOperations?: HTMLElement;\n  toLeftBtn?: HTMLElement;\n  rightOperations?: HTMLElement;\n  toRightBtn?: HTMLElement;\n}\n\nexport function calculateOffset(depElement: allElementDeps, offset: number, scrollPosition: scrollPosition): number {\n  // 计算当前 activeTab 应该滚动到的位置\n  const { navsContainer, activeTab, rightOperations, leftOperations } = depElement;\n  const tabWidth = getDomWidth(activeTab);\n  const wrapWidth = getDomWidth(navsContainer);\n  const tabOffset = getDomOffsetLeft(activeTab);\n  const rightOperationsWidth = getDomWidth(rightOperations);\n  const leftOperationsWidth = getDomWidth(leftOperations);\n\n  if (scrollPosition === 'auto') {\n    if (tabOffset - leftOperationsWidth < offset) {\n      return tabOffset - leftOperationsWidth;\n    } if (tabOffset + tabWidth > offset + wrapWidth - rightOperationsWidth) {\n      return tabOffset + tabWidth - wrapWidth + rightOperationsWidth;\n    }\n  } else if (scrollPosition === 'start') {\n    return tabOffset - leftOperationsWidth;\n  } else if (scrollPosition === 'center') {\n    return tabOffset + (tabWidth - wrapWidth) / 2;\n  } else if (scrollPosition === 'end') {\n    return tabOffset + tabWidth - wrapWidth + rightOperationsWidth;\n  }\n  return offset;\n}\n\n/**\n * 计算上一页或下一页偏移量\n * @param elements 计算时依赖的元素\n * @returns number\n */\nexport function calcPrevOrNextOffset(elements: allElementDeps, offset: number, action: 'next' | 'prev'): number {\n  const { navsContainer, activeTab } = elements;\n  const navsContainerWidth = getDomWidth(navsContainer);\n  const activeTabWidth = getDomWidth(activeTab);\n  /**\n   * 计算当前 activeTab 与 navsContainer 的宽度差，\n   * 注意 activeTab 的宽度可能大于 navsContainer 的宽度，\n   * 所以需要取绝对值\n   */\n  const diffWidth = Math.abs(navsContainerWidth - activeTabWidth);\n  if (action === 'next') {\n    return offset + diffWidth;\n  }\n  return offset - diffWidth;\n}\n\n/**\n * 计算最大偏移量\n * @param elements 计算时依赖的元素\n * @returns number\n */\nexport function calcMaxOffset(elements: allElementDeps): number {\n  const { navsWrap, navsContainer, rightOperations, toRightBtn } = elements;\n  const wrapWidth = getDomWidth(navsWrap);\n  const containerWidth = getDomWidth(navsContainer);\n  const rightOperationsWidth = getDomWidth(rightOperations);\n  const toRightBtnWidth = getDomWidth(toRightBtn);\n  return wrapWidth - containerWidth + rightOperationsWidth - toRightBtnWidth;\n}\n\n/**\n * 计算合法偏移量\n * @param offset 偏移值\n * @param maxOffset 最大偏移值\n * @returns number\n */\nexport function calcValidOffset(offset: number, maxOffset: number): number {\n  return Math.max(0, Math.min(offset, maxOffset));\n}\n","import { h, defineComponent, Transition, ref, computed, watch, onMounted, nextTick } from 'vue';\nimport { debounce, isFunction } from 'lodash-es';\nimport {\n  ChevronLeftIcon as TdChevronLeftIcon,\n  ChevronRightIcon as TdChevronRightIcon,\n  AddIcon as TdAddIcon,\n} from 'tdesign-icons-vue-next';\nimport { TdTabsProps } from './type';\nimport tabProps from './props';\nimport { calcMaxOffset, calcValidOffset, calculateOffset, calcPrevOrNextOffset } from '@tdesign/common-js/tabs/base';\n\n// 子组件\nimport TTabPanel from './tab-panel';\nimport TTabNavItem from './tab-nav-item';\nimport TTabNavBar from './tab-nav-bar';\n\n// hooks\nimport { useResize, useDragSort, useGlobalIcon, usePrefixClass, useCommonClassName } from '@tdesign/shared-hooks';\n\nexport default defineComponent({\n  name: 'TTabNav',\n  resizeObserver: null,\n  props: {\n    theme: tabProps.theme,\n    panels: {\n      type: Array as { new (): Array<InstanceType<typeof TTabPanel>> },\n      default: (): Array<InstanceType<typeof TTabPanel>> => [] as Array<InstanceType<typeof TTabPanel>>,\n    },\n    action: Array,\n    value: tabProps.value,\n    placement: tabProps.placement,\n    scrollPosition: tabProps.scrollPosition,\n    size: tabProps.size,\n    disabled: tabProps.disabled,\n    addable: tabProps.addable,\n    onChange: tabProps.onChange,\n    onAdd: tabProps.onAdd,\n    onRemove: tabProps.onRemove,\n    dragSort: tabProps.dragSort,\n    onDragSort: tabProps.onDragSort,\n  },\n  setup(props) {\n    const componentName = usePrefixClass('tabs');\n    const { ChevronLeftIcon, ChevronRightIcon, AddIcon } = useGlobalIcon({\n      ChevronLeftIcon: TdChevronLeftIcon,\n      ChevronRightIcon: TdChevronRightIcon,\n      AddIcon: TdAddIcon,\n    });\n    const classPrefix = usePrefixClass();\n\n    const { SIZE } = useCommonClassName();\n\n    const scrollLeft = ref(0);\n\n    // refs\n    const navsContainerRef = ref();\n    const navsWrapRef = ref();\n    const leftOperationsRef = ref();\n    const rightOperationsRef = ref();\n    const toRightBtnRef = ref();\n    const activeTabRef = ref();\n    const maxScrollLeft = ref(0);\n    const showAction = computed(() => {\n      return ['top', 'bottom'].includes(props?.placement?.toLowerCase());\n    });\n\n    const getRefs = () => ({\n      navsContainer: navsContainerRef.value,\n      navsWrap: navsWrapRef.value,\n      leftOperations: leftOperationsRef.value,\n      rightOperations: rightOperationsRef.value,\n      toRightBtn: toRightBtnRef.value,\n      activeTab: activeTabRef.value,\n    });\n\n    // left right位置 选项卡的位置是在左右侧垂直方向铺开的\n    const isVerticalPlacement = computed(() => ['left', 'right'].includes(props.placement.toLowerCase()));\n\n    // 展示操作按钮\n    const canToLeft = computed(() => scrollLeft.value > 1);\n    const canToRight = computed(() => scrollLeft.value < maxScrollLeft.value - 1);\n\n    // style\n    const wrapTransformStyle = computed(() => {\n      if (isVerticalPlacement.value) return {};\n      return {\n        transform: `translate3d(${-scrollLeft.value}px, 0, 0)`,\n      };\n    });\n    const navsContainerStyle = computed(() => {\n      return props.addable ? { 'min-height': '48px' } : null;\n    });\n\n    // class\n    const iconBaseClass = computed(() => {\n      return {\n        [`${componentName.value}__btn`]: true,\n        [SIZE.value.medium]: props.size === 'medium',\n        [SIZE.value.large]: props.size === 'large',\n      };\n    });\n    const leftIconClass = computed(() => {\n      return {\n        [`${componentName.value}__btn--left`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const rightIconClass = computed(() => {\n      return {\n        [`${componentName.value}__btn--right`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const addIconClass = computed(() => {\n      return {\n        [`${componentName.value}__add-btn`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const navContainerClass = computed(() => {\n      return {\n        [`${componentName.value}__nav-container`]: true,\n        [`${componentName.value}__nav--card`]: props.theme === 'card',\n        [`${classPrefix.value}-is-${props.placement}`]: true,\n        [`${classPrefix.value}-is-addable`]: props.addable,\n      };\n    });\n    const navScrollContainerClass = computed(() => {\n      return {\n        [`${componentName.value}__nav-scroll`]: true,\n        [`${classPrefix.value}-is-scrollable`]: canToLeft.value || canToRight.value,\n      };\n    });\n\n    const navsWrapClass = computed(() => {\n      return [\n        `${componentName.value}__nav-wrap`,\n        `${classPrefix.value}-is-smooth`,\n        { [`${classPrefix.value}-is-vertical`]: isVerticalPlacement.value },\n      ];\n    });\n\n    const setOffset = (offset: number) => {\n      scrollLeft.value = calcValidOffset(offset, maxScrollLeft.value);\n    };\n\n    const handleScroll = (action: 'prev' | 'next') => {\n      setOffset(calcPrevOrNextOffset(getRefs(), scrollLeft.value, action));\n    };\n\n    const handleWheel = (event: WheelEvent) => {\n      if (!canToLeft.value && !canToRight.value) return;\n\n      event.preventDefault();\n      const { deltaX, deltaY } = event;\n\n      if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        setOffset(scrollLeft.value + deltaX);\n      } else {\n        setOffset(scrollLeft.value + deltaY);\n      }\n    };\n\n    const handleActiveTabScroll = () => {\n      setTimeout(() => {\n        setOffset(calculateOffset(getRefs(), scrollLeft.value, props.scrollPosition));\n      }, 0);\n    };\n\n    const getMaxScrollLeft = () => {\n      nextTick(() => {\n        maxScrollLeft.value = calcMaxOffset(getRefs());\n      });\n    };\n\n    // watch\n    watch([() => props.placement, () => props.panels], getMaxScrollLeft);\n    watch([() => props.scrollPosition], handleActiveTabScroll);\n\n    // life times\n    useResize(debounce(getMaxScrollLeft), navsContainerRef.value);\n\n    const handleAddTab = (e: MouseEvent) => {\n      props.onAdd?.({ e });\n    };\n\n    const tabClick = (event: MouseEvent, nav: Partial<InstanceType<typeof TTabPanel>>) => {\n      const { value, disabled } = nav;\n      if (disabled || props.value === value) {\n        return false;\n      }\n      props.onChange(value);\n    };\n    const removeBtnClick = ({ e, value, index }: Parameters<TdTabsProps['onRemove']>[0]) => {\n      props.onRemove({ e, value, index });\n    };\n    const setActiveTab = (ref: any) => {\n      if (!ref?.$el) return;\n      if (ref?.value === props.value && activeTabRef.value !== ref.$el) {\n        activeTabRef.value = ref.$el;\n        handleActiveTabScroll();\n      }\n    };\n\n    const { setNavsWrap } = useDragSort(props);\n\n    onMounted(() => {\n      setNavsWrap(navsWrapRef.value);\n      getMaxScrollLeft();\n      handleActiveTabScroll();\n    });\n    // renders\n    const renderNavsContent = () => {\n      return props.panels.map((panel, index) => {\n        let label;\n        if (panel?.children?.label) {\n          label = panel.children.label();\n        } else if (isFunction(panel.label)) {\n          label = panel.label(h);\n        } else {\n          label = panel.label || `选项卡${index + 1}`;\n        }\n        let draggable = props.dragSort;\n        if (draggable && panel.draggable === false) {\n          draggable = panel.draggable;\n        }\n        return (\n          <TTabNavItem\n            ref={setActiveTab}\n            draggable={draggable}\n            key={panel.value}\n            index={index}\n            theme={props.theme}\n            size={props.size}\n            placement={props.placement}\n            label={label}\n            active={panel.value === props.value}\n            disabled={props.disabled || panel.disabled}\n            removable={panel.removable}\n            value={panel.value}\n            onClick={(e: MouseEvent) => tabClick(e, panel)}\n            onRemove={removeBtnClick}\n          />\n        );\n      });\n    };\n    const renderArrows = () => {\n      return [\n        <div\n          ref={leftOperationsRef}\n          class={[`${componentName.value}__operations`, `${componentName.value}__operations--left`]}\n        >\n          <Transition name=\"fade\" mode=\"out-in\" appear>\n            {canToLeft.value ? (\n              <div class={leftIconClass.value} onClick={() => handleScroll('prev')}>\n                <ChevronLeftIcon />\n              </div>\n            ) : null}\n          </Transition>\n        </div>,\n        <div\n          ref={rightOperationsRef}\n          class={[`${componentName.value}__operations`, `${componentName.value}__operations--right`]}\n        >\n          <Transition name=\"fade\" mode=\"out-in\" appear>\n            {canToRight.value ? (\n              <div ref={toRightBtnRef} class={rightIconClass.value} onClick={() => handleScroll('next')}>\n                <ChevronRightIcon></ChevronRightIcon>\n              </div>\n            ) : null}\n          </Transition>\n          {props.addable ? (\n            <div class={addIconClass.value} onClick={handleAddTab}>\n              <AddIcon></AddIcon>\n            </div>\n          ) : null}\n          {showAction.value && props.action}\n        </div>,\n      ];\n    };\n    const renderNavs = () => {\n      const navContent = renderNavsContent();\n      return (\n        <div class={navContainerClass.value}>\n          <div class={navScrollContainerClass.value} onWheel={handleWheel}>\n            <div ref={navsWrapRef} class={navsWrapClass.value} style={wrapTransformStyle.value}>\n              {props.theme !== 'card' && (\n                <TTabNavBar placement={props.placement} value={props.value} navs={navContent} />\n              )}\n              {navContent}\n            </div>\n          </div>\n        </div>\n      );\n    };\n\n    return () => {\n      return (\n        <div ref={navsContainerRef} class={[`${componentName.value}__nav`]} style={navsContainerStyle.value}>\n          {renderArrows()}\n          {renderNavs()}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["traversalTabNavs","tabNavs","fn","_iterator","_createForOfIteratorHelper","_step","s","n","done","itemNode","getAttribute","err","e","f","handleTarget","target","resultTarget","contains","useDragSort","props","navsWrap","dragged","enterTargets","dragstart","event","style","opacity","dragend","dragover","preventDefault","dragenter","children","draggable","firstChild","outline","includes","push","dragleave","_i","_enterTargets","length","enterTarget","drop","tabNav","parentNode","_props$onDragSort","dragIndex","indexOf","call","targetIndex","currentIndex","theme","endIndex","onDragSort","current","panels","value","setNavsWrap","val","addEventListener","document","onUnmounted","removeEventListener","getDomWidth","dom","offsetWidth","getDomOffsetLeft","offsetLeft","calculateOffset","depElement","offset","scrollPosition","navsContainer","activeTab","rightOperations","leftOperations","tabWidth","wrapWidth","tabOffset","rightOperationsWidth","leftOperationsWidth","calcPrevOrNextOffset","elements","action","navsContainerWidth","activeTabWidth","diffWidth","Math","abs","calcMaxOffset","toRightBtn","containerWidth","toRightBtnWidth","calcValidOffset","maxOffset","max","min","defineComponent","name","resizeObserver","tabProps","type","Array","default","placement","size","disabled","addable","onChange","onAdd","onRemove","dragSort","setup","componentName","usePrefixClass","_useGlobalIcon","useGlobalIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","AddIcon","TdAddIcon","classPrefix","_useCommonClassName","useCommonClassName","SIZE","scrollLeft","ref","navsContainerRef","navsWrapRef","leftOperationsRef","rightOperationsRef","toRightBtnRef","activeTabRef","maxScrollLeft","showAction","computed","_props$placement","toLowerCase","getRefs","isVerticalPlacement","canToLeft","canToRight","wrapTransformStyle","transform","concat","navsContainerStyle","iconBaseClass","_defineProperty","medium","large","leftIconClass","_objectSpread","rightIconClass","addIconClass","navContainerClass","navScrollContainerClass","navsWrapClass","setOffset","handleScroll","handleWheel","deltaX","deltaY","handleActiveTabScroll","setTimeout","getMaxScrollLeft","nextTick","watch","useResize","debounce","handleAddTab","_props$onAdd","tabClick","nav","removeBtnClick","_ref5","index","setActiveTab","$el","_useDragSort","onMounted","renderNavsContent","map","panel","_panel$children","label","isFunction","h","_createVNode","TTabNavItem","removable","onClick","renderArrows","Transition","_default","renderNavs","navContent","TTabNavBar"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,gBAAA,GAAmB,SAAnBA,gBAAAA,CAAoBC,OAAA,EAAyBC,EAAkE,EAAA;AAAA,EAAA,IAAAC,SAAA,GAAAC,0BAAA,CAC5FH,OAAS,CAAA;IAAAI,KAAA,CAAA;AAAA,EAAA,IAAA;IAAhC,KAAAF,SAAA,CAAAG,CAAA,EAAAD,EAAAA,CAAAA,CAAAA,KAAA,GAAAF,SAAA,CAAAI,CAAA,EAAAC,EAAAA,IAAA,GAAgC;AAAA,MAAA,IAArBC;AACL,MAAA,IAAAA,QAAA,CAASC,YAAa,CAAA,WAAW,CAAG,EAAA;QACtCR,EAAA,CAAGO,QAAQ,CAAA,CAAA;AACb,OAAA;AACF,KAAA;AAAA,GAAA,CAAA,OAAAE,GAAA,EAAA;IAAAR,SAAA,CAAAS,CAAA,CAAAD,GAAA,CAAA,CAAA;AAAA,GAAA,SAAA;AAAAR,IAAAA,SAAA,CAAAU,CAAA,EAAA,CAAA;AAAA,GAAA;AACF,CAAA,CAAA;AAEA,IAAMC,YAAA,GAAe,SAAfA,YAAAA,CAAgBC,MAAA,EAAqBd,OAAiC,EAAA;AACtE,EAAA,IAAAe,YAAA,CAAA;AACahB,EAAAA,gBAAA,CAAAC,OAAA,EAAS,UAACQ,QAAa,EAAA;AAClC,IAAA,IAAAA,QAAA,CAASQ,QAAS,CAAAF,MAAM,CAAG,EAAA;AACdC,MAAAA,YAAA,GAAAP,QAAA,CAAA;AACjB,KAAA;AACF,GAAC,CAAA,CAAA;AACM,EAAA,OAAAO,YAAA,CAAA;AACT,CAAA,CAAA;AAEO,SAASE,YAAYC,KAAY,EAAA;EACtC,IAAIC,QAA2B,GAAA,IAAA,CAAA;AAG3B,EAAA,IAAAC,OAAA,CAAA;EACJ,IAAMC,eAAiC,EAAC,CAAA;AAElC,EAAA,IAAAC,SAAA,GAAY,SAAZA,SAAAA,CAAaC,KAAqB,EAAA;AACtC,IAAA,IAAMT,SAASS,KAAM,CAAAT,MAAA,CAAA;AAGXM,IAAAA,OAAA,GAAAN,MAAA,CAAA;AAEVA,IAAAA,MAAA,CAAOU,MAAMC,OAAU,GAAA,KAAA,CAAA;GACzB,CAAA;AACM,EAAA,IAAAC,OAAA,GAAU,SAAVA,OAAAA,CAAWH,KAAqB,EAAA;AAEnCA,IAAAA,KAAA,CAAMT,MAA0B,CAAAU,KAAA,CAAMC,OAAU,GAAA,EAAA,CAAA;GACnD,CAAA;AAEM,EAAA,IAAAE,QAAA,GAAW,SAAXA,QAAAA,CAAYJ,KAAqB,EAAA;IAErCA,KAAA,CAAMK,cAAe,EAAA,CAAA;GACvB,CAAA;AAEM,EAAA,IAAAC,SAAA,GAAY,SAAZA,SAAAA,CAAaN,KAAqB,EAAA;IAEtC,IAAMT,MAAS,GAAAD,YAAA,CAAaU,KAAM,CAAAT,MAAA,EAAQK,SAASW,QAAQ,CAAA,CAAA;IAC3D,IAAIhB,MAAU,IAAAA,MAAA,KAAWM,OAAW,IAAAN,MAAA,CAAOiB,SAAW,EAAA;AAC7CjB,MAAAA,MAAA,CAAAkB,UAAA,CAAWR,MAAMS,OAAU,GAAA,oBAAA,CAAA;AAElC,MAAA,IAAI,CAACZ,YAAA,CAAaa,QAAS,CAAApB,MAAM,CAAG,EAAA;AAClCO,QAAAA,YAAA,CAAac,KAAKrB,MAAM,CAAA,CAAA;AAC1B,OAAA;AACF,KAAA;GACF,CAAA;AAEM,EAAA,IAAAsB,SAAA,GAAY,SAAZA,SAAAA,CAAab,KAAqB,EAAA;AACtC,IAAA,IAAMT,SAASS,KAAM,CAAAT,MAAA,CAAA;AAGrB,IAAA,KAAA,IAAAuB,EAAA,GAAA,CAAA,EAAAC,aAAA,GAA0BjB,YAAc,EAAAgB,EAAA,GAAAC,aAAA,CAAAC,MAAA,EAAAF,EAAA,EAAA,EAAA;AAAxC,MAAA,IAAWG;AAET,MAAA,IAAI,CAACA,WAAA,CAAYxB,QAAS,CAAAF,MAAM,CAAG,EAAA;AAEhC0B,QAAAA,WAAA,CAAYR,UAA8B,CAAAR,KAAA,CAAMS,OAAU,GAAA,MAAA,CAAA;AAC7D,OAAA;AACF,KAAA;GACF,CAAA;AACM,EAAA,IAAAQ,IAAA,GAAO,SAAPA,IAAAA,CAAQlB,KAAqB,EAAA;IAEjCA,KAAA,CAAMK,cAAe,EAAA,CAAA;AAEJ7B,IAAAA,gBAAA,CAAAoB,QAAA,CAASW,QAAU,EAAA,UAACY,MAAW,EAAA;AACvCA,MAAAA,MAAA,CAAAV,UAAA,CAAWR,MAAMS,OAAU,GAAA,MAAA,CAAA;AACpC,KAAC,CAAA,CAAA;IAED,IAAInB,MAAS,GAAAD,YAAA,CAAaU,KAAM,CAAAT,MAAA,EAAQK,SAASW,QAAQ,CAAA,CAAA;IACzD,IAAIhB,MAAU,IAAAA,MAAA,CAAO6B,UAAe,KAAAvB,OAAA,IAAWN,OAAOiB,SAAW,EAAA;AAAA,MAAA,IAAAa,iBAAA,CAAA;AAE/D,MAAA,IAAMC,YAAY,EAAC,CAAEC,QAAQC,IAAK,CAAA5B,QAAA,CAASW,UAAUV,OAAO,CAAA,CAAA;AAE5D,MAAA,IAAM4B,cAAc,EAAC,CAAEF,QAAQC,IAAK,CAAA5B,QAAA,CAASW,UAAUhB,MAAM,CAAA,CAAA;MAC7D,IAAIkC,cAAcH,SAAW,EAAA;QAClB/B,MAAA,GAAAK,QAAA,CAASW,SAASkB,WAAc,GAAA,CAAA,CAAA,CAAA;AAC3C,OAAA;AAGA,MAAA,IAAMC,YAAe,GAAA/B,KAAA,CAAMgC,KAAU,KAAA,MAAA,GAASL,YAAYA,SAAY,GAAA,CAAA,CAAA;AACtE,MAAA,IAAMM,QAAW,GAAAjC,KAAA,CAAMgC,KAAU,KAAA,MAAA,GAASF,cAAcA,WAAc,GAAA,CAAA,CAAA;AACtE,MAAA,CAAAJ,iBAAA,GAAA1B,KAAA,CAAMkC,UAAa,MAAA,IAAA,IAAAR,iBAAA,KAAA,KAAA,CAAA,IAAnBA,iBAAA,CAAAG,IAAA,CAAA7B,KAAA,EAAmB;AACjB+B,QAAAA,YAAA,EAAAA,YAAA;QACAI,OAAA,EAASnC,KAAM,CAAAoC,MAAA,CAAOL,YAAc,CAAA,CAAAM,KAAA;AACpCP,QAAAA,WAAa,EAAAG,QAAA;AACbrC,QAAAA,MAAA,EAAQI,KAAM,CAAAoC,MAAA,CAAOH,QAAU,CAAA,CAAAI,KAAAA;AACjC,OAAC,CAAA,CAAA;AACH,KAAA;GACF,CAAA;EACA,SAASC,YAAYC,GAAqB,EAAA;AAC7BtC,IAAAA,QAAA,GAAAsC,GAAA,CAAA;IACFtC,QAAA,CAAAuC,gBAAA,CAAiB,WAAa,EAAApC,SAAA,EAAW,KAAK,CAAA,CAAA;IAC9CH,QAAA,CAAAuC,gBAAA,CAAiB,SAAW,EAAAhC,OAAA,EAAS,KAAK,CAAA,CAAA;IAC1CP,QAAA,CAAAuC,gBAAA,CAAiB,UAAY,EAAA/B,QAAA,EAAU,KAAK,CAAA,CAAA;IAC5CR,QAAA,CAAAuC,gBAAA,CAAiB,WAAa,EAAA7B,SAAA,EAAW,KAAK,CAAA,CAAA;IAC9C8B,QAAA,CAAAD,gBAAA,CAAiB,WAAa,EAAAtB,SAAA,EAAW,KAAK,CAAA,CAAA;IAC9CuB,QAAA,CAAAD,gBAAA,CAAiB,WAAa,EAAAtB,SAAA,EAAW,KAAK,CAAA,CAAA;IAC9CjB,QAAA,CAAAuC,gBAAA,CAAiB,MAAQ,EAAAjB,IAAA,EAAM,KAAK,CAAA,CAAA;AAC/C,GAAA;AAEAmB,EAAAA,eAAA,CAAY,YAAM;AAChB,IAAA,IAAIzC,QAAU,EAAA;AACHA,MAAAA,QAAA,CAAA0C,mBAAA,CAAoB,aAAavC,SAAS,CAAA,CAAA;AAC1CH,MAAAA,QAAA,CAAA0C,mBAAA,CAAoB,WAAWnC,OAAO,CAAA,CAAA;AACtCP,MAAAA,QAAA,CAAA0C,mBAAA,CAAoB,YAAYlC,QAAQ,CAAA,CAAA;AACxCR,MAAAA,QAAA,CAAA0C,mBAAA,CAAoB,aAAahC,SAAS,CAAA,CAAA;AAC1C8B,MAAAA,QAAA,CAAAE,mBAAA,CAAoB,aAAazB,SAAS,CAAA,CAAA;AAC1CuB,MAAAA,QAAA,CAAAE,mBAAA,CAAoB,aAAazB,SAAS,CAAA,CAAA;AAC1CjB,MAAAA,QAAA,CAAA0C,mBAAA,CAAoB,QAAQpB,IAAI,CAAA,CAAA;AAC3C,KAAA;AACF,GAAC,CAAA,CAAA;EACD,OAAO;AAAEe,IAAAA,WAAY,EAAZA,WAAAA;GAAY,CAAA;AACvB;;ACzHA,IAAMM,WAAc,GAAA,SAAdA,WAAcA,CAACC,GAA6B,EAAA;EAAA,OAAA,CAAAA,GAAA,KAAAA,IAAAA,IAAAA,GAAA,uBAAAA,GAAA,CAAKC,WAAe,KAAA,CAAA,CAAA;AAAA,CAAA,CAAA;AACtE,IAAMC,gBAAmB,GAAA,SAAnBA,gBAAmBA,CAACF,GAA6B,EAAA;EAAA,OAAA,CAAAA,GAAA,KAAAA,IAAAA,IAAAA,GAAA,uBAAAA,GAAA,CAAKG,UAAc,KAAA,CAAA,CAAA;AAAA,CAAA,CAAA;AAc1D,SAAAC,eAAAA,CAAgBC,UAA4B,EAAAC,MAAA,EAAgBC,cAAwC,EAAA;AAElH,EAAA,IAAQC,aAAA,GAA8DH,UAAA,CAA9DG,aAAA;IAAeC,SAAW,GAAoCJ,UAAA,CAA/CI,SAAW;IAAAC,eAAA,GAAoCL,UAAA,CAApCK,eAAA;IAAiBC,iBAAmBN,UAAA,CAAnBM;AAC7C,EAAA,IAAAC,QAAA,GAAWb,YAAYU,SAAS,CAAA,CAAA;AAChC,EAAA,IAAAI,SAAA,GAAYd,YAAYS,aAAa,CAAA,CAAA;AACrC,EAAA,IAAAM,SAAA,GAAYZ,iBAAiBO,SAAS,CAAA,CAAA;AACtC,EAAA,IAAAM,oBAAA,GAAuBhB,YAAYW,eAAe,CAAA,CAAA;AAClD,EAAA,IAAAM,mBAAA,GAAsBjB,YAAYY,cAAc,CAAA,CAAA;EAEtD,IAAIJ,mBAAmB,MAAQ,EAAA;AACzB,IAAA,IAAAO,SAAA,GAAYE,sBAAsBV,MAAQ,EAAA;MAC5C,OAAOQ,SAAY,GAAAE,mBAAA,CAAA;AACrB,KAAA;IAAE,IAAIF,SAAY,GAAAF,QAAA,GAAWN,MAAS,GAAAO,SAAA,GAAYE,oBAAsB,EAAA;AAC/D,MAAA,OAAAD,SAAA,GAAYF,WAAWC,SAAY,GAAAE,oBAAA,CAAA;AAC5C,KAAA;AACF,GAAA,MAAA,IAAWR,mBAAmB,OAAS,EAAA;IACrC,OAAOO,SAAY,GAAAE,mBAAA,CAAA;AACrB,GAAA,MAAA,IAAWT,mBAAmB,QAAU,EAAA;AAC/B,IAAA,OAAAO,SAAA,GAAA,CAAaF,WAAWC,SAAa,IAAA,CAAA,CAAA;AAC9C,GAAA,MAAA,IAAWN,mBAAmB,KAAO,EAAA;AAC5B,IAAA,OAAAO,SAAA,GAAYF,WAAWC,SAAY,GAAAE,oBAAA,CAAA;AAC5C,GAAA;AACO,EAAA,OAAAT,MAAA,CAAA;AACT,CAAA;AAOgB,SAAAW,oBAAAA,CAAqBC,QAA0B,EAAAZ,MAAA,EAAgBa,MAAiC,EAAA;AACxG,EAAA,IAAEX,aAAe,GAAcU,QAAA,CAA7BV,aAAe;IAAAC,SAAA,GAAcS,QAAA,CAAdT,SAAA,CAAA;AACjB,EAAA,IAAAW,kBAAA,GAAqBrB,YAAYS,aAAa,CAAA,CAAA;AAC9C,EAAA,IAAAa,cAAA,GAAiBtB,YAAYU,SAAS,CAAA,CAAA;EAM5C,IAAMa,SAAY,GAAAC,IAAA,CAAKC,GAAI,CAAAJ,kBAAA,GAAqBC,cAAc,CAAA,CAAA;EAC9D,IAAIF,WAAW,MAAQ,EAAA;IACrB,OAAOb,MAAS,GAAAgB,SAAA,CAAA;AAClB,GAAA;EACA,OAAOhB,MAAS,GAAAgB,SAAA,CAAA;AAClB,CAAA;AAOO,SAASG,cAAcP,QAAkC,EAAA;AAC9D,EAAA,IAAQ9D,QAAA,GAAyD8D,QAAA,CAAzD9D,QAAA;IAAUoD,aAAe,GAAgCU,QAAA,CAA/CV,aAAe;IAAAE,eAAA,GAAgCQ,QAAA,CAAhCR,eAAA;IAAiBgB,aAAeR,QAAA,CAAfQ;AAC5C,EAAA,IAAAb,SAAA,GAAYd,YAAY3C,QAAQ,CAAA,CAAA;AAChC,EAAA,IAAAuE,cAAA,GAAiB5B,YAAYS,aAAa,CAAA,CAAA;AAC1C,EAAA,IAAAO,oBAAA,GAAuBhB,YAAYW,eAAe,CAAA,CAAA;AAClD,EAAA,IAAAkB,eAAA,GAAkB7B,YAAY2B,UAAU,CAAA,CAAA;AACvC,EAAA,OAAAb,SAAA,GAAYc,iBAAiBZ,oBAAuB,GAAAa,eAAA,CAAA;AAC7D,CAAA;AAQgB,SAAAC,eAAAA,CAAgBvB,QAAgBwB,SAA2B,EAAA;AACzE,EAAA,OAAOP,KAAKQ,GAAI,CAAA,CAAA,EAAGR,KAAKS,GAAI,CAAA1B,MAAA,EAAQwB,SAAS,CAAC,CAAA,CAAA;AAChD;;;;AChEA,cAAeG,mBAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,SAAA;AACNC,EAAAA,cAAgB,EAAA,IAAA;AAChBhF,EAAAA,KAAO,EAAA;IACLgC,OAAOiD,qBAAS,CAAAjD,KAAA;AAChBI,IAAAA,MAAQ,EAAA;AACN8C,MAAAA,IAAM,EAAAC,KAAA;MACN,SAAS,EAAA,SAATC,QAAAA,GAAA;AAAA,QAAA,OAAsD,EAAC,CAAA;AAAA,OAAA;KACzD;AACApB,IAAAA,MAAQ,EAAAmB,KAAA;IACR9C,OAAO4C,qBAAS,CAAA5C,KAAA;IAChBgD,WAAWJ,qBAAS,CAAAI,SAAA;IACpBjC,gBAAgB6B,qBAAS,CAAA7B,cAAA;IACzBkC,MAAML,qBAAS,CAAAK,IAAA;IACfC,UAAUN,qBAAS,CAAAM,QAAA;IACnBC,SAASP,qBAAS,CAAAO,OAAA;IAClBC,UAAUR,qBAAS,CAAAQ,QAAA;IACnBC,OAAOT,qBAAS,CAAAS,KAAA;IAChBC,UAAUV,qBAAS,CAAAU,QAAA;IACnBC,UAAUX,qBAAS,CAAAW,QAAA;IACnB1D,YAAY+C,qBAAS,CAAA/C,UAAAA;GACvB;AACA2D,EAAAA,OAAAA,SAAAA,MAAM7F,KAAO,EAAA;AACL,IAAA,IAAA8F,aAAA,GAAgBC,qBAAe,MAAM,CAAA,CAAA;IAC3C,IAAAC,cAAA,GAAuDC,qBAAc,CAAA;AACnEC,QAAAA,eAAiB,EAAAC,mCAAA;AACjBC,QAAAA,gBAAkB,EAAAC,oCAAA;AAClBC,QAAAA,OAAS,EAAAC,2BAAAA;AACX,OAAC,CAAA;MAJOL,eAAA,GAAAF,cAAA,CAAAE,eAAA;MAAiBE,gBAAkB,GAAAJ,cAAA,CAAlBI,gBAAkB;MAAAE,OAAA,GAAAN,cAAA,CAAAM,OAAA,CAAA;AAK3C,IAAA,IAAME,cAAcT,oBAAe,EAAA,CAAA;AAE7B,IAAA,IAAAU,mBAAA,GAAWC,0BAAmB,EAAA;MAA5BC,IAAK,GAAAF,mBAAA,CAALE,IAAK,CAAA;AAEP,IAAA,IAAAC,UAAA,GAAaC,QAAI,CAAC,CAAA,CAAA;AAGxB,IAAA,IAAMC,mBAAmBD,OAAI,EAAA,CAAA;AAC7B,IAAA,IAAME,cAAcF,OAAI,EAAA,CAAA;AACxB,IAAA,IAAMG,oBAAoBH,OAAI,EAAA,CAAA;AAC9B,IAAA,IAAMI,qBAAqBJ,OAAI,EAAA,CAAA;AAC/B,IAAA,IAAMK,gBAAgBL,OAAI,EAAA,CAAA;AAC1B,IAAA,IAAMM,eAAeN,OAAI,EAAA,CAAA;AACnB,IAAA,IAAAO,aAAA,GAAgBP,QAAI,CAAC,CAAA,CAAA;AACrB,IAAA,IAAAQ,UAAA,GAAaC,aAAS,YAAM;AAAA,MAAA,IAAAC,gBAAA,CAAA;MACzB,OAAA,CAAC,OAAO,QAAQ,CAAA,CAAEvG,SAAShB,KAAO,KAAA,IAAA,IAAPA,KAAO,KAAA,KAAA,CAAA,IAAA,CAAAuH,gBAAA,GAAPvH,KAAO,CAAAqF,SAAA,MAAAkC,IAAAA,IAAAA,gBAAA,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,gBAAA,CAAkBC,aAAa,CAAA,CAAA;AACnE,KAAC,CAAA,CAAA;AAED,IAAA,IAAMC,UAAU,SAAVA;aAAiB;QACrBpE,eAAeyD,gBAAiB,CAAAzE,KAAA;QAChCpC,UAAU8G,WAAY,CAAA1E,KAAA;QACtBmB,gBAAgBwD,iBAAkB,CAAA3E,KAAA;QAClCkB,iBAAiB0D,kBAAmB,CAAA5E,KAAA;QACpCkC,YAAY2C,aAAc,CAAA7E,KAAA;QAC1BiB,WAAW6D,YAAa,CAAA9E,KAAAA;OAC1B,CAAA;KAAA,CAAA;IAGA,IAAMqF,mBAAsB,GAAAJ,YAAA,CAAS,YAAA;AAAA,MAAA,OAAM,CAAC,MAAQ,EAAA,OAAO,CAAE,CAAAtG,QAAA,CAAShB,KAAM,CAAAqF,SAAA,CAAUmC,WAAY,EAAC,CAAC,CAAA;KAAA,CAAA,CAAA;IAGpG,IAAMG,SAAY,GAAAL,YAAA,CAAS,YAAA;AAAA,MAAA,OAAMV,UAAA,CAAWvE,QAAQ,CAAC,CAAA;KAAA,CAAA,CAAA;IACrD,IAAMuF,aAAaN,YAAS,CAAA,YAAA;MAAA,OAAMV,WAAWvE,KAAQ,GAAA+E,aAAA,CAAc/E,QAAQ,CAAC,CAAA;KAAA,CAAA,CAAA;AAGtE,IAAA,IAAAwF,kBAAA,GAAqBP,aAAS,YAAM;AACxC,MAAA,IAAII,mBAAoB,CAAArF,KAAA,EAAO,OAAO,EAAC,CAAA;MAChC,OAAA;AACLyF,QAAAA,SAAA,iBAAAC,MAAA,CAA0B,CAACnB,UAAW,CAAAvE,KAAA,EAAA,WAAA,CAAA;OACxC,CAAA;AACF,KAAC,CAAA,CAAA;AACK,IAAA,IAAA2F,kBAAA,GAAqBV,aAAS,YAAM;MACxC,OAAOtH,KAAM,CAAAwF,OAAA,GAAU;AAAE,QAAA,YAAA,EAAc,MAAA;AAAO,OAAI,GAAA,IAAA,CAAA;AACpD,KAAC,CAAA,CAAA;AAGK,IAAA,IAAAyC,aAAA,GAAgBX,aAAS,YAAM;AAC5B,MAAA,OAAAY,mCAAA,CAAAA,mCAAA,CAAAA,mCAAA,QAAAH,MAAA,CACDjC,aAAA,CAAczD,KAAe,EAAA,OAAA,CAAA,EAAA,IAAA,CAChCsE,EAAAA,IAAA,CAAKtE,KAAM,CAAA8F,MAAA,EAASnI,MAAMsF,IAAS,KAAA,QAAA,GACnCqB,IAAA,CAAKtE,KAAM,CAAA+F,KAAA,EAAQpI,MAAMsF,IAAS,KAAA,OAAA,CAAA,CAAA;AAEvC,KAAC,CAAA,CAAA;AACK,IAAA,IAAA+C,aAAA,GAAgBf,aAAS,YAAM;AAC5B,MAAA,OAAAgB,aAAA,CAAAJ,mCAAA,CAAA,EAAA,EAAA,EAAA,CAAAH,MAAA,CACDjC,aAAA,CAAczD,KAAqB,EAAA,aAAA,CAAA,EAAA,IAAA,CACpC4F,EAAAA,aAAc,CAAA5F,KAAA,CAAA,CAAA;AAErB,KAAC,CAAA,CAAA;AACK,IAAA,IAAAkG,cAAA,GAAiBjB,aAAS,YAAM;AAC7B,MAAA,OAAAgB,aAAA,CAAAJ,mCAAA,CAAA,EAAA,EAAA,EAAA,CAAAH,MAAA,CACDjC,aAAA,CAAczD,KAAsB,EAAA,cAAA,CAAA,EAAA,IAAA,CACrC4F,EAAAA,aAAc,CAAA5F,KAAA,CAAA,CAAA;AAErB,KAAC,CAAA,CAAA;AACK,IAAA,IAAAmG,YAAA,GAAelB,aAAS,YAAM;AAC3B,MAAA,OAAAgB,aAAA,CAAAJ,mCAAA,CAAA,EAAA,EAAA,EAAA,CAAAH,MAAA,CACDjC,aAAA,CAAczD,KAAmB,EAAA,WAAA,CAAA,EAAA,IAAA,CAClC4F,EAAAA,aAAc,CAAA5F,KAAA,CAAA,CAAA;AAErB,KAAC,CAAA,CAAA;AACK,IAAA,IAAAoG,iBAAA,GAAoBnB,aAAS,YAAM;MAChC,OAAAY,mCAAA,CAAAA,mCAAA,CAAAA,mCAAA,CAAAA,mCAAA,CAAAH,EAAAA,EAAAA,EAAAA,CAAAA,MAAA,CACDjC,aAAA,CAAczD,KAAyB,EAAA,iBAAA,CAAA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA0F,MAAA,CACvCjC,aAAc,CAAAzD,KAAA,EAAqBrC,aAAAA,CAAAA,EAAAA,MAAMgC,KAAU,KAAA,MAAA,CAAA,EAAA,EAAA,CAAA+F,MAAA,CACnDvB,WAAY,CAAAnE,KAAA,EAAA,MAAA,CAAA,CAAA0F,MAAA,CAAY/H,MAAMqF,SAAc,CAAA,EAAA,IAAA,CAAA0C,EAAAA,EAAAA,CAAAA,MAAA,CAC5CvB,WAAY,CAAAnE,KAAA,EAAA,aAAA,CAAA,EAAqBrC,KAAM,CAAAwF,OAAA,CAAA,CAAA;AAE/C,KAAC,CAAA,CAAA;AACK,IAAA,IAAAkD,uBAAA,GAA0BpB,aAAS,YAAM;MACtC,OAAAY,mCAAA,CAAAA,mCAAA,CAAAH,EAAAA,EAAAA,EAAAA,CAAAA,MAAA,CACDjC,aAAA,CAAczD,KAAsB,EAAA,cAAA,CAAA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA0F,MAAA,CACpCvB,WAAA,CAAYnE,KAAwB,EAAAsF,gBAAAA,CAAAA,EAAAA,SAAA,CAAUtF,SAASuF,UAAW,CAAAvF,KAAA,CAAA,CAAA;AAE1E,KAAC,CAAA,CAAA;AAEK,IAAA,IAAAsG,aAAA,GAAgBrB,aAAS,YAAM;MAC5B,OAAA,CAAA,EAAA,CAAAS,MAAA,CACFjC,aAAc,CAAAzD,KAAA,EAAA0F,YAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAA,CACdvB,WAAY,CAAAnE,KAAA,iBAAA6F,mCAAA,CAAA,EAAA,EAAA,EAAA,CAAAH,MAAA,CACTvB,WAAY,CAAAnE,KAAA,EAAsBqF,cAAAA,CAAAA,EAAAA,oBAAoBrF,KAAM,CACpE,CAAA,CAAA;AACF,KAAC,CAAA,CAAA;AAEK,IAAA,IAAAuG,SAAA,GAAY,SAAZA,SAAAA,CAAazF,MAAmB,EAAA;MACpCyD,UAAA,CAAWvE,KAAQ,GAAAqC,eAAA,CAAgBvB,MAAQ,EAAAiE,aAAA,CAAc/E,KAAK,CAAA,CAAA;KAChE,CAAA;AAEM,IAAA,IAAAwG,YAAA,GAAe,SAAfA,YAAAA,CAAgB7E,MAA4B,EAAA;AAChD4E,MAAAA,SAAA,CAAU9E,qBAAqB2D,OAAQ,EAAA,EAAGb,UAAW,CAAAvE,KAAA,EAAO2B,MAAM,CAAC,CAAA,CAAA;KACrE,CAAA;AAEM,IAAA,IAAA8E,WAAA,GAAc,SAAdA,WAAAA,CAAezI,KAAsB,EAAA;MACzC,IAAI,CAACsH,SAAA,CAAUtF,KAAS,IAAA,CAACuF,UAAW,CAAAvF,KAAA,EAAO,OAAA;MAE3ChC,KAAA,CAAMK,cAAe,EAAA,CAAA;AACf,MAAA,IAAEqI,MAAQ,GAAW1I,KAAA,CAAnB0I,MAAQ;QAAAC,MAAA,GAAW3I,KAAA,CAAX2I,MAAA,CAAA;AAEhB,MAAA,IAAI5E,KAAKC,GAAI,CAAA0E,MAAM,IAAI3E,IAAK,CAAAC,GAAA,CAAI2E,MAAM,CAAG,EAAA;AAC7BJ,QAAAA,SAAA,CAAAhC,UAAA,CAAWvE,QAAQ0G,MAAM,CAAA,CAAA;AACrC,OAAO,MAAA;AACKH,QAAAA,SAAA,CAAAhC,UAAA,CAAWvE,QAAQ2G,MAAM,CAAA,CAAA;AACrC,OAAA;KACF,CAAA;AAEA,IAAA,IAAMC,wBAAwB,SAAxBA,wBAA8B;AAClCC,MAAAA,UAAA,CAAW,YAAM;AACfN,QAAAA,SAAA,CAAU3F,gBAAgBwE,OAAQ,EAAA,EAAGb,WAAWvE,KAAO,EAAArC,KAAA,CAAMoD,cAAc,CAAC,CAAA,CAAA;SAC3E,CAAC,CAAA,CAAA;KACN,CAAA;AAEA,IAAA,IAAM+F,mBAAmB,SAAnBA,mBAAyB;AAC7BC,MAAAA,YAAA,CAAS,YAAM;QACChC,aAAA,CAAA/E,KAAA,GAAQiC,aAAc,CAAAmD,OAAA,EAAS,CAAA,CAAA;AAC/C,OAAC,CAAA,CAAA;KACH,CAAA;AAGM4B,IAAAA,SAAA,CAAA,CAAC,YAAA;MAAA,OAAMrJ,KAAM,CAAAqF,SAAA,CAAA;KAAW,EAAA,YAAA;MAAA,OAAMrF,KAAM,CAAAoC,MAAM,CAAA;QAAG+G,gBAAgB,CAAA,CAAA;AACnEE,IAAAA,SAAA,CAAM,CAAC,YAAA;MAAA,OAAMrJ,KAAM,CAAAoD,cAAc,CAAA;QAAG6F,qBAAqB,CAAA,CAAA;IAGzDK,iBAAA,CAAUC,iBAAS,CAAAJ,gBAAgB,CAAG,EAAArC,gBAAA,CAAiBzE,KAAK,CAAA,CAAA;AAEtD,IAAA,IAAAmH,YAAA,GAAe,SAAfA,YAAAA,CAAgB/J,CAAkB,EAAA;AAAA,MAAA,IAAAgK,YAAA,CAAA;AAChC,MAAA,CAAAA,YAAA,GAAAzJ,KAAA,CAAA0F,KAAA,MAAA,IAAA,IAAA+D,YAAA,KAAA,KAAA,CAAA,IAAAA,YAAA,CAAA5H,IAAA,CAAA7B,KAAA,EAAQ;AAAEP,QAAAA,CAAA,EAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;KACrB,CAAA;IAEM,IAAAiK,QAAA,GAAW,SAAXA,QAAAA,CAAYrJ,KAAA,EAAmBsJ,GAAiD,EAAA;AAC9E,MAAA,IAAEtH,KAAO,GAAasH,GAAA,CAApBtH,KAAO;QAAAkD,QAAA,GAAaoE,GAAA,CAAbpE,QAAA,CAAA;AACX,MAAA,IAAAA,QAAA,IAAYvF,KAAM,CAAAqC,KAAA,KAAUA,KAAO,EAAA;AAC9B,QAAA,OAAA,KAAA,CAAA;AACT,OAAA;AACArC,MAAAA,KAAA,CAAMyF,SAASpD,KAAK,CAAA,CAAA;KACtB,CAAA;AACA,IAAA,IAAMuH,iBAAiB,SAAjBA,sBAAkF;AAAA,MAAA,IAA9DnK,CAAG,GAAAoK,KAAA,CAAHpK,CAAG;QAAA4C,KAAA,GAAAwH,KAAA,CAAAxH,KAAA;QAAOyH,cAAAA;MAClC9J,KAAA,CAAM2F,QAAS,CAAA;AAAElG,QAAAA,CAAG,EAAHA,CAAG;AAAA4C,QAAAA,KAAA,EAAAA,KAAA;AAAOyH,QAAAA,OAAAA,KAAAA;AAAM,OAAC,CAAA,CAAA;KACpC,CAAA;AACM,IAAA,IAAAC,YAAA,GAAe,SAAfA,YAAAA,CAAgBlD,IAAa,EAAA;MACjC,IAAI,EAACA,IAAK,KAALA,IAAAA,IAAAA,IAAK,eAALA,IAAK,CAAAmD,GAAA,CAAK,EAAA,OAAA;MACf,IAAInD,CAAAA,SAAAA,IAAAA,IAAAA,2BAAAA,KAAKxE,KAAU,MAAArC,KAAA,CAAMqC,SAAS8E,YAAa,CAAA9E,KAAA,KAAUwE,KAAImD,GAAK,EAAA;AAChE7C,QAAAA,YAAA,CAAa9E,QAAQwE,IAAI,CAAAmD,GAAA,CAAA;AACHf,QAAAA,qBAAA,EAAA,CAAA;AACxB,OAAA;KACF,CAAA;AAEA,IAAA,IAAAgB,YAAA,GAAwBlK,WAAA,CAAYC,KAAK,CAAA;MAAjCsC,WAAA,GAAA2H,YAAA,CAAA3H,WAAA,CAAA;AAER4H,IAAAA,aAAA,CAAU,YAAM;AACd5H,MAAAA,WAAA,CAAYyE,YAAY1E,KAAK,CAAA,CAAA;AACZ8G,MAAAA,gBAAA,EAAA,CAAA;AACKF,MAAAA,qBAAA,EAAA,CAAA;AACxB,KAAC,CAAA,CAAA;AAED,IAAA,IAAMkB,oBAAoB,SAApBA,oBAA0B;MAC9B,OAAOnK,KAAM,CAAAoC,MAAA,CAAOgI,GAAI,CAAA,UAACC,OAAOP,KAAU,EAAA;AAAA,QAAA,IAAAQ,eAAA,CAAA;AACpC,QAAA,IAAAC,KAAA,CAAA;AACA,QAAA,IAAAF,KAAA,KAAA,IAAA,IAAAA,KAAA,KAAA,KAAA,CAAA,IAAA,CAAAC,eAAA,GAAAD,KAAA,CAAOzJ,oDAAP0J,eAAA,CAAiBC,KAAO,EAAA;AAClBA,UAAAA,KAAA,GAAAF,KAAA,CAAMzJ,SAAS2J,KAAM,EAAA,CAAA;SACpB,MAAA,IAAAC,qBAAA,CAAWH,KAAM,CAAAE,KAAK,CAAG,EAAA;AAC1BA,UAAAA,KAAA,GAAAF,KAAA,CAAME,MAAME,KAAC,CAAA,CAAA;AACvB,SAAO,MAAA;UACGF,KAAA,GAAAF,KAAA,CAAME,KAAS,IAAA,oBAAA,CAAAxC,MAAA,CAAM+B,KAAQ,GAAA,CAAA,CAAA,CAAA;AACvC,SAAA;AACA,QAAA,IAAIjJ,YAAYb,KAAM,CAAA4F,QAAA,CAAA;AAClB,QAAA,IAAA/E,SAAA,IAAawJ,KAAM,CAAAxJ,SAAA,KAAc,KAAO,EAAA;UAC1CA,SAAA,GAAYwJ,KAAM,CAAAxJ,SAAA,CAAA;AACpB,SAAA;QAEE,OAAA6J,eAAA,CAAAC,0BAAA,EAAA;AAAA,UAAA,KAAA,EACOZ,YAAA;AAAA,UAAA,WAAA,EACMlJ,SACX;UAAA,KAAKwJ,EAAAA,MAAMhI,KACX;AAAA,UAAA,OAAA,EAAOyH;iBACA9J,EAAAA,KAAA,CAAMgC;gBACPhC,EAAAA,KAAA,CAAMsF;qBACDtF,EAAAA,KAAA,CAAMqF,SACjB;AAAA,UAAA,OAAA,EAAOkF,KACP;AAAA,UAAA,QAAA,EAAQF,MAAMhI,KAAU,KAAArC,KAAA,CAAMqC;sBACpBrC,KAAA,CAAMuF,YAAY8E,KAAM,CAAA9E,QAAA;UAAA,WACvB8E,EAAAA,KAAM,CAAAO,SAAA;UAAA,OACVP,EAAAA,KAAM,CAAAhI,KAAA;UAAA,SACJ,EAAA,SAAAwI,QAACpL,CAAA,EAAA;AAAA,YAAA,OAAkBiK,SAASjK,CAAG,EAAA4K,KAAK,CAC7C,CAAA;AAAA,WAAA;UAAA,UAAUT,EAAAA,cAAAA;AACZ,SAAA,EAAA,IAAA,CAAA,CAAA;AAEJ,OAAC,CAAA,CAAA;KACH,CAAA;AACA,IAAA,IAAMkB,eAAe,SAAfA,eAAqB;AAClB,MAAA,OAAA,CAAAJ,eAAA,CAAA,KAAA,EAAA;AAAA,QAAA,KAAA,EAEE1D;eACE,EAAA,CAAA,EAAA,CAAAe,MAAA,CAAIjC,aAAc,CAAAzD,KAAA,EAAA,cAAA,CAAA,EAAA,EAAA,CAAA0F,MAAA,CAAwBjC,aAAA,CAAczD;OAE/DqI,EAAAA,CAAAA,eAAA,CAAAK,cAAA,EAAA;AAAA,QAAA,MAAA,EAAA,MAAA;AAAA,QAAA,MAAA,EAAA,QAAA;AAAA,QAAA,QAAA,EAAA,IAAA;AAAA,OAAA,EAAA;AAAA,QAAA,SAAA,EAAA,SAAAC,QAAA,GAAA;AAAA,UAAA,OAAA,CACGrD,SAAU,CAAAtF,KAAA,GAAAqI,eAAA,CAAA,KAAA,EAAA;YAAA,OACGrC,EAAAA,cAAchG,KAAO;AAAA,YAAA,SAAA,EAAS,SAAAwI,OAAA,GAAA;cAAA,OAAMhC,YAAa,CAAA,MAAM,CACjE,CAAA;AAAA,aAAA;AAAA,WAAA,EAAA,CAAA6B,eAAA,CAAAxE,eAAA,EAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAA,GAEA,IACN,CAAA,CAAA;AAAA,SAAA;AAAA,OAAA,CAAA,CAAA,CAAA,EAAAwE,eAAA,CAAA,KAAA,EAAA;AAAA,QAAA,KAAA,EAGKzD,kBACL;QAAA,OAAO,EAAA,CAAA,EAAA,CAAAc,MAAA,CAAIjC,aAAc,CAAAzD,KAAA,EAAA,cAAA,CAAA,EAAA,EAAA,CAAA0F,MAAA,CAAwBjC,aAAA,CAAczD,KAA0B,EAAA,qBAAA,CAAA,CAAA;OAAAqI,EAAAA,CAAAA,eAAA,CAAAK,cAAA,EAAA;AAAA,QAAA,MAAA,EAAA,MAAA;AAAA,QAAA,MAAA,EAAA,QAAA;AAAA,QAAA,QAAA,EAAA,IAAA;AAAA,OAAA,EAAA;AAAA,QAAA,SAAA,EAAA,SAAAC,QAAA,GAAA;AAAA,UAAA,OAAA,CAGtFpD,UAAW,CAAAvF,KAAA,GAAAqI,eAAA,CAAA,KAAA,EAAA;AAAA,YAAA,KAAA,EACAxD,aAAA;YAAA,OAAsBqB,EAAAA,cAAA,CAAelG,KAAO;AAAA,YAAA,SAAA,EAAS,SAAAwI,OAAA,GAAA;cAAA,OAAMhC,YAAA,CAAa,MAAM,CAAA,CAAA;AAAA,aAAA;AAAA,WAAA,EAAA,CAAA6B,eAAA,CAAAtE,gBAAA,EAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAA,GAGtF,IAAA,CAAA,CAAA;AAAA,SAAA;AAAA,OAAA,CAAA,EAELpG,KAAM,CAAAwF,OAAA,GAAAkF,eAAA,CAAA,KAAA,EAAA;QAAA,OACOlC,EAAAA,YAAA,CAAanG,KAAO;QAAA,SAASmH,EAAAA,YAAAA;AACvC,OAAA,EAAA,CAAAkB,eAAA,CAAApE,OAAA,EAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAA,GAEA,IAAA,EACHe,UAAA,CAAWhF,SAASrC,KAAM,CAAAgE,MAAA,CAE/B,CAAA,CAAA,CAAA;KACF,CAAA;AACA,IAAA,IAAMiH,aAAa,SAAbA,aAAmB;AACvB,MAAA,IAAMC,aAAaf,iBAAkB,EAAA,CAAA;AAEnC,MAAA,OAAAO,eAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAYjC,iBAAA,CAAkBpG,KAAAA;;eAChBqG,EAAAA,uBAAwB,CAAArG,KAAA;QAAA,SAAgByG,EAAAA,WAAAA;AAClD,OAAA,EAAA,CAAA4B,eAAA,CAAA,KAAA,EAAA;AAAA,QAAA,KAAA,EAAU3D,WAAA;QAAA,OAAoB4B,EAAAA,aAAc,CAAAtG,KAAA;AAAA,QAAA,OAAA,EAAcwF,kBAAmB,CAAAxF,KAAAA;OAC1ErC,EAAAA,CAAAA,KAAM,CAAAgC,KAAA,KAAU,MACf,IAAA0I,eAAA,CAAAS,yBAAA,EAAA;QAAA,WAAuBnL,EAAAA,KAAM,CAAAqF,SAAA;QAAA,OAAkBrF,EAAAA,KAAA,CAAMqC,KAAO;QAAA,MAAM6I,EAAAA,UAAAA;AAAY,OAAA,EAAA,IAAA,CAAA,EAE/EA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;KAKX,CAAA;AAEA,IAAA,OAAO,YAAM;AAET,MAAA,OAAAR,eAAA,CAAA,KAAA,EAAA;AAAA,QAAA,KAAA,EAAU5D,gBAAkB;AAAA,QAAA,OAAA,EAAO,IAAAiB,MAAA,CAAIjC,aAAc,CAAAzD,KAAA,EAAe,OAAA,CAAA,CAAA;AAAA,QAAA,OAAA,EAAO2F,kBAAmB,CAAA3F,KAAAA;AAAA,OAAA,EAAA,CAC3FyI,YAAa,EAAA,EACbG,UAAW,EAAA,CAAA,CAAA,CAAA;KAGlB,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;"}