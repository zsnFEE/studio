import { TdTransferProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    checkboxProps: {
        type: PropType<TdTransferProps["checkboxProps"]>;
    };
    checked: {
        type: PropType<TdTransferProps["checked"]>;
        default: TdTransferProps["checked"];
    };
    defaultChecked: {
        type: PropType<TdTransferProps["defaultChecked"]>;
        default: () => TdTransferProps["defaultChecked"];
    };
    data: {
        type: PropType<TdTransferProps["data"]>;
        default: () => TdTransferProps["data"];
    };
    direction: {
        type: PropType<TdTransferProps["direction"]>;
        default: TdTransferProps["direction"];
        validator(val: TdTransferProps["direction"]): boolean;
    };
    disabled: {
        type: PropType<TdTransferProps["disabled"]>;
        default: any;
    };
    empty: {
        type: PropType<TdTransferProps["empty"]>;
        default: TdTransferProps["empty"];
    };
    footer: {
        type: PropType<TdTransferProps["footer"]>;
    };
    keys: {
        type: PropType<TdTransferProps["keys"]>;
    };
    operation: {
        type: PropType<TdTransferProps["operation"]>;
    };
    pagination: {
        type: PropType<TdTransferProps["pagination"]>;
    };
    search: {
        type: PropType<TdTransferProps["search"]>;
        default: boolean;
    };
    showCheckAll: {
        type: PropType<TdTransferProps["showCheckAll"]>;
        default: TdTransferProps["showCheckAll"];
    };
    targetDraggable: BooleanConstructor;
    targetSort: {
        type: PropType<TdTransferProps["targetSort"]>;
        default: TdTransferProps["targetSort"];
        validator(val: TdTransferProps["targetSort"]): boolean;
    };
    title: {
        type: PropType<TdTransferProps["title"]>;
        default: () => TdTransferProps["title"];
    };
    transferItem: {
        type: PropType<TdTransferProps["transferItem"]>;
    };
    value: {
        type: PropType<TdTransferProps["value"]>;
        default: TdTransferProps["value"];
    };
    modelValue: {
        type: PropType<TdTransferProps["value"]>;
        default: TdTransferProps["value"];
    };
    defaultValue: {
        type: PropType<TdTransferProps["defaultValue"]>;
        default: () => TdTransferProps["defaultValue"];
    };
    onChange: PropType<TdTransferProps["onChange"]>;
    onCheckedChange: PropType<TdTransferProps["onCheckedChange"]>;
    onPageChange: PropType<TdTransferProps["onPageChange"]>;
    onScroll: PropType<TdTransferProps["onScroll"]>;
    onSearch: PropType<TdTransferProps["onSearch"]>;
};
export default _default;
