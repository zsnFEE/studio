import { TdPrimaryTableProps } from '../table/type';
import { PropType } from 'vue';
declare const _default: {
    asyncLoading: {
        type: PropType<TdPrimaryTableProps["asyncLoading"]>;
    };
    columnController: {
        type: PropType<TdPrimaryTableProps["columnController"]>;
    };
    columnControllerVisible: {
        type: BooleanConstructor;
        default: any;
    };
    defaultColumnControllerVisible: {
        type: BooleanConstructor;
        default: any;
    };
    columns: {
        type: PropType<TdPrimaryTableProps["columns"]>;
        default: () => TdPrimaryTableProps["columns"];
    };
    displayColumns: {
        type: PropType<TdPrimaryTableProps["displayColumns"]>;
        default: TdPrimaryTableProps["displayColumns"];
    };
    defaultDisplayColumns: {
        type: PropType<TdPrimaryTableProps["defaultDisplayColumns"]>;
    };
    dragSort: {
        type: PropType<TdPrimaryTableProps["dragSort"]>;
        validator(val: TdPrimaryTableProps["dragSort"]): boolean;
    };
    dragSortOptions: {
        type: PropType<TdPrimaryTableProps["dragSortOptions"]>;
    };
    editableCellState: {
        type: PropType<TdPrimaryTableProps["editableCellState"]>;
    };
    editableRowKeys: {
        type: PropType<TdPrimaryTableProps["editableRowKeys"]>;
    };
    expandIcon: {
        type: PropType<TdPrimaryTableProps["expandIcon"]>;
        default: TdPrimaryTableProps["expandIcon"];
    };
    expandOnRowClick: BooleanConstructor;
    expandedRow: {
        type: PropType<TdPrimaryTableProps["expandedRow"]>;
    };
    expandedRowKeys: {
        type: PropType<TdPrimaryTableProps["expandedRowKeys"]>;
        default: TdPrimaryTableProps["expandedRowKeys"];
    };
    defaultExpandedRowKeys: {
        type: PropType<TdPrimaryTableProps["defaultExpandedRowKeys"]>;
        default: () => TdPrimaryTableProps["defaultExpandedRowKeys"];
    };
    filterIcon: {
        type: PropType<TdPrimaryTableProps["filterIcon"]>;
    };
    filterRow: {
        type: PropType<TdPrimaryTableProps["filterRow"]>;
    };
    filterValue: {
        type: PropType<TdPrimaryTableProps["filterValue"]>;
        default: TdPrimaryTableProps["filterValue"];
    };
    defaultFilterValue: {
        type: PropType<TdPrimaryTableProps["defaultFilterValue"]>;
    };
    hideSortTips: BooleanConstructor;
    indeterminateSelectedRowKeys: {
        type: PropType<TdPrimaryTableProps["indeterminateSelectedRowKeys"]>;
    };
    multipleSort: BooleanConstructor;
    reserveSelectedRowOnPaginate: {
        type: BooleanConstructor;
        default: boolean;
    };
    rowSelectionAllowUncheck: BooleanConstructor;
    rowSelectionType: {
        type: PropType<TdPrimaryTableProps["rowSelectionType"]>;
        validator(val: TdPrimaryTableProps["rowSelectionType"]): boolean;
    };
    selectOnRowClick: BooleanConstructor;
    selectedRowKeys: {
        type: PropType<TdPrimaryTableProps["selectedRowKeys"]>;
        default: TdPrimaryTableProps["selectedRowKeys"];
    };
    defaultSelectedRowKeys: {
        type: PropType<TdPrimaryTableProps["defaultSelectedRowKeys"]>;
        default: () => TdPrimaryTableProps["defaultSelectedRowKeys"];
    };
    showSortColumnBgColor: BooleanConstructor;
    sort: {
        type: PropType<TdPrimaryTableProps["sort"]>;
        default: TdPrimaryTableProps["sort"];
    };
    defaultSort: {
        type: PropType<TdPrimaryTableProps["defaultSort"]>;
    };
    sortIcon: {
        type: PropType<TdPrimaryTableProps["sortIcon"]>;
    };
    sortOnRowDraggable: BooleanConstructor;
    onAsyncLoadingClick: PropType<TdPrimaryTableProps["onAsyncLoadingClick"]>;
    onCellClick: PropType<TdPrimaryTableProps["onCellClick"]>;
    onChange: PropType<TdPrimaryTableProps["onChange"]>;
    onColumnChange: PropType<TdPrimaryTableProps["onColumnChange"]>;
    onColumnControllerVisibleChange: PropType<TdPrimaryTableProps["onColumnControllerVisibleChange"]>;
    onDataChange: PropType<TdPrimaryTableProps["onDataChange"]>;
    onDisplayColumnsChange: PropType<TdPrimaryTableProps["onDisplayColumnsChange"]>;
    onDragSort: PropType<TdPrimaryTableProps["onDragSort"]>;
    onExpandChange: PropType<TdPrimaryTableProps["onExpandChange"]>;
    onFilterChange: PropType<TdPrimaryTableProps["onFilterChange"]>;
    onRowEdit: PropType<TdPrimaryTableProps["onRowEdit"]>;
    onRowValidate: PropType<TdPrimaryTableProps["onRowValidate"]>;
    onSelectChange: PropType<TdPrimaryTableProps["onSelectChange"]>;
    onSortChange: PropType<TdPrimaryTableProps["onSortChange"]>;
    onValidate: PropType<TdPrimaryTableProps["onValidate"]>;
};
export default _default;
