declare const _default: import("vue").DefineComponent<{
    container: {
        type: import("vue").PropType<import("./type").TdAffixProps["container"]>;
        default: () => import("./type").TdAffixProps["container"];
    };
    content: {
        type: import("vue").PropType<import("./type").TdAffixProps["content"]>;
    };
    default: {
        type: import("vue").PropType<import("./type").TdAffixProps["default"]>;
    };
    offsetBottom: {
        type: NumberConstructor;
        default: number;
    };
    offsetTop: {
        type: NumberConstructor;
        default: number;
    };
    zIndex: {
        type: NumberConstructor;
    };
    onFixedChange: import("vue").PropType<import("./type").TdAffixProps["onFixedChange"]>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "fixedChange"[], "fixedChange", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    container: {
        type: import("vue").PropType<import("./type").TdAffixProps["container"]>;
        default: () => import("./type").TdAffixProps["container"];
    };
    content: {
        type: import("vue").PropType<import("./type").TdAffixProps["content"]>;
    };
    default: {
        type: import("vue").PropType<import("./type").TdAffixProps["default"]>;
    };
    offsetBottom: {
        type: NumberConstructor;
        default: number;
    };
    offsetTop: {
        type: NumberConstructor;
        default: number;
    };
    zIndex: {
        type: NumberConstructor;
    };
    onFixedChange: import("vue").PropType<import("./type").TdAffixProps["onFixedChange"]>;
}>> & {
    onFixedChange?: (...args: any[]) => any;
}, {
    offsetTop: number;
    container: import("..").ScrollContainer;
    offsetBottom: number;
}, {}>;
export default _default;
