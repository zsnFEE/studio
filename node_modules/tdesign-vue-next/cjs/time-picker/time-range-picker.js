/**
 * tdesign v1.15.2
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var dayjs = require('dayjs');
var customParseFormat = require('../_chunks/dep-125de3f6.js');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var rangeInput_index = require('../range-input/index.js');
var timePicker_panel_timePickerPanel = require('./panel/time-picker-panel.js');
var timePicker_panel_props = require('../_chunks/dep-893e8325.js');
var timePicker_panel_singlePanel = require('../_chunks/dep-b414c8b4.js');
var timePicker_timeRangePickerProps = require('./time-range-picker-props.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-040b3cbb.js');
var index$1 = require('../_chunks/dep-8848ca1b.js');
var index = require('../_chunks/dep-ac087407.js');
var index$3 = require('../_chunks/dep-ffd5bd7c.js');
var index$2 = require('../_chunks/dep-4c12d7dc.js');
require('../_chunks/dep-682444b3.js');
var index$4 = require('../_chunks/dep-e4a93457.js');
var index$5 = require('../_chunks/dep-00be0637.js');
var isArray = require('../_chunks/dep-ce0157af.js');
var configProvider_hooks_useConfig = require('../config-provider/hooks/useConfig.js');
require('../_chunks/dep-bc2c6af0.js');
require('../_chunks/dep-d2306059.js');
require('../_chunks/dep-63ff6e12.js');
require('../_chunks/dep-baaf07d6.js');
require('../_chunks/dep-79f734cc.js');
require('../_chunks/dep-41b6fe49.js');
require('../_chunks/dep-0f5dd876.js');
require('../range-input/range-input.js');
require('../input/index.js');
require('../input/input.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../input/props.js');
require('../_chunks/dep-9b6bbd57.js');
require('../_chunks/dep-0a9c2d75.js');
require('../_chunks/dep-3e1aa2e0.js');
require('../_chunks/dep-c6c5ec69.js');
require('../_chunks/dep-eada02ce.js');
require('../_chunks/dep-d388e00e.js');
require('../_chunks/dep-15ce91d8.js');
require('../_chunks/dep-27e5c925.js');
require('../_chunks/dep-13d731e3.js');
require('../_chunks/dep-7cb54b29.js');
require('../_chunks/dep-2544aa61.js');
require('../input/hooks/useInput.js');
require('../form/consts/index.js');
require('../input/hooks/useLengthLimit.js');
require('../_chunks/dep-8d4fdd76.js');
require('../_chunks/dep-faba77b7.js');
require('../_chunks/dep-2ab243e3.js');
require('../_chunks/dep-def9c618.js');
require('../_chunks/dep-d47112ce.js');
require('../input/hooks/useInputEventHandler.js');
require('../input/hooks/useInputWidth.js');
require('../_chunks/dep-b048575a.js');
require('../_chunks/dep-1532a597.js');
require('../_chunks/dep-ee4f84a5.js');
require('../_chunks/dep-66f974a3.js');
require('../_chunks/dep-5e94db90.js');
require('../_chunks/dep-2f309208.js');
require('../_chunks/dep-7154c044.js');
require('../_chunks/dep-020c2a7e.js');
require('../_chunks/dep-79cd6be1.js');
require('../_chunks/dep-06f7d92f.js');
require('../_chunks/dep-0c415789.js');
require('../_chunks/dep-57045e93.js');
require('../_chunks/dep-c66679ef.js');
require('../_chunks/dep-3df90229.js');
require('../_chunks/dep-93426c60.js');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/classCallCheck');
require('../_chunks/dep-1ec17e27.js');
require('../_chunks/dep-15b276e6.js');
require('../_chunks/dep-4d3ddec0.js');
require('../_chunks/dep-d0f125b5.js');
require('../input/input-group.js');
require('../input/input-group-props.js');
require('../_chunks/dep-0ff81c06.js');
require('../range-input/props.js');
require('../range-input/range-input-popup.js');
require('../popup/index.js');
require('../popup/popup.js');
require('@popperjs/core');
require('../_chunks/dep-6097d12c.js');
require('../popup/container.js');
require('../popup/props.js');
require('../_chunks/dep-37ade253.js');
require('../_chunks/dep-770305d5.js');
require('../range-input/range-input-popup-props.js');
require('../select-input/hooks/useOverlayInnerStyle.js');
require('../button/button.js');
require('../loading/index.js');
require('../_chunks/dep-32dc80e0.js');
require('../loading/plugin.js');
require('../_chunks/dep-9523c147.js');
require('../loading/icon/gradient.js');
require('../loading/props.js');
require('../_chunks/dep-de22f208.js');
require('../_chunks/dep-7d172afa.js');
require('../_chunks/dep-70bb30fa.js');
require('../_chunks/dep-02dd9454.js');
require('../_chunks/dep-2bfd653a.js');
require('../_chunks/dep-4a827320.js');
require('../_chunks/dep-bd33cda1.js');
require('../_chunks/dep-5c27b967.js');
require('../_chunks/dep-304b5191.js');
require('../button/props.js');
require('../_chunks/dep-0e845ebd.js');
require('./props.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
dayjs__default["default"].extend(customParseFormat.customParseFormat);
var _TimeRangePicker = Vue.defineComponent({
  name: "TTimeRangePicker",
  props: _objectSpread(_objectSpread({}, timePicker_timeRangePickerProps["default"]), {}, {
    rangeInputProps: Object,
    popupProps: Object
  }),
  setup: function setup(props2) {
    var COMPONENT_NAME = index.usePrefixClass("time-range-picker");
    var _useConfig = configProvider_hooks_useConfig.useConfig("timePicker"),
      globalConfig = _useConfig.globalConfig;
    var _useCommonClassName = index$1.useCommonClassName(),
      STATUS = _useCommonClassName.STATUS;
    var _useGlobalIcon = index$2.useGlobalIcon({
        TimeIcon: tdesignIconsVueNext.TimeIcon
      }),
      TimeIcon = _useGlobalIcon.TimeIcon;
    var disabled = index$3.useDisabled();
    var currentPanelIdx = Vue.ref(void 0);
    var currentValue = Vue.ref(timePicker_panel_props.TIME_PICKER_EMPTY);
    var isShowPanel = Vue.ref(false);
    var isReadOnly = index$4.useReadonly();
    var inputClasses = Vue.computed(function () {
      return ["".concat(COMPONENT_NAME.value, "__group"), _defineProperty__default["default"]({}, STATUS.value.focused, isShowPanel.value)];
    });
    var _toRefs = Vue.toRefs(props2),
      value = _toRefs.value,
      modelValue = _toRefs.modelValue,
      allowInput = _toRefs.allowInput,
      format = _toRefs.format;
    var _useVModel = index$5.useVModel(value, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray__default["default"](_useVModel, 2),
      innerValue = _useVModel2[0],
      setInnerValue = _useVModel2[1];
    var handleShowPopup = function handleShowPopup(visible, context) {
      if (isReadOnly.value) return;
      if (context.trigger === "trigger-element-click") {
        isShowPanel.value = true;
        return;
      }
      isShowPanel.value = visible;
    };
    var handleClear = function handleClear(context) {
      var e = context.e;
      e.stopPropagation();
      currentValue.value = timePicker_panel_props.TIME_PICKER_EMPTY;
      setInnerValue(null);
    };
    var handleClick = function handleClick(_ref2) {
      var position = _ref2.position;
      currentPanelIdx.value = position === "first" ? 0 : 1;
    };
    var handleTimeChange = function handleTimeChange(newValue, e) {
      if (isArray.isArray(newValue)) {
        currentValue.value = newValue;
      } else if (currentPanelIdx.value === 0) {
        var _currentValue$value$;
        currentValue.value = [newValue, (_currentValue$value$ = currentValue.value[1]) !== null && _currentValue$value$ !== void 0 ? _currentValue$value$ : newValue];
      } else {
        var _currentValue$value$2;
        currentValue.value = [(_currentValue$value$2 = currentValue.value[0]) !== null && _currentValue$value$2 !== void 0 ? _currentValue$value$2 : newValue, newValue];
      }
      handleOnPick(newValue, e);
    };
    var handleInputBlur = function handleInputBlur(value2, _ref3) {
      var _props2$onBlur;
      var e = _ref3.e;
      if (allowInput.value) {
        var isValidTime = timePicker_panel_singlePanel.validateInputValue(currentValue.value[currentPanelIdx.value], format.value);
        if (isValidTime) {
          var _currentValue$value$3, _currentValue$value$4;
          var formattedVal = timePicker_panel_singlePanel.formatInputValue(currentValue.value[currentPanelIdx.value], format.value);
          currentPanelIdx.value === 0 ? currentValue.value = [formattedVal, (_currentValue$value$3 = currentValue.value[1]) !== null && _currentValue$value$3 !== void 0 ? _currentValue$value$3 : formattedVal] : currentValue.value = [(_currentValue$value$4 = currentValue.value[0]) !== null && _currentValue$value$4 !== void 0 ? _currentValue$value$4 : formattedVal, formattedVal];
        } else {
          var _innerValue$value, _previousValue$, _previousValue$2;
          var previousValue = (_innerValue$value = innerValue.value) !== null && _innerValue$value !== void 0 ? _innerValue$value : timePicker_panel_props.TIME_PICKER_EMPTY;
          currentPanelIdx.value === 0 ? currentValue.value = [(_previousValue$ = previousValue[0]) !== null && _previousValue$ !== void 0 ? _previousValue$ : timePicker_panel_props.TIME_PICKER_EMPTY[0], currentValue.value[1]] : currentValue.value = [currentValue.value[0], (_previousValue$2 = previousValue[1]) !== null && _previousValue$2 !== void 0 ? _previousValue$2 : timePicker_panel_props.TIME_PICKER_EMPTY[1]];
        }
      }
      (_props2$onBlur = props2.onBlur) === null || _props2$onBlur === void 0 || _props2$onBlur.call(props2, {
        value: value2,
        e: e
      });
    };
    var handleInputChange = function handleInputChange(inputVal, _ref4) {
      var _props2$onInput;
      var e = _ref4.e,
        position = _ref4.position;
      currentValue.value = inputVal;
      (_props2$onInput = props2.onInput) === null || _props2$onInput === void 0 || _props2$onInput.call(props2, {
        value: innerValue.value,
        e: e,
        position: position === "first" ? "start" : "end"
      });
    };
    var handleClickConfirm = function handleClickConfirm() {
      var isValidTime = !currentValue.value.find(function (v) {
        return !timePicker_panel_singlePanel.validateInputValue(v, format.value);
      });
      if (isValidTime) setInnerValue(currentValue.value);
      if (props2.autoSwap) autoSwapTime();
      isShowPanel.value = false;
    };
    var handleFocus = function handleFocus(value2, _ref5) {
      var _props2$onFocus;
      var e = _ref5.e,
        position = _ref5.position;
      (_props2$onFocus = props2.onFocus) === null || _props2$onFocus === void 0 || _props2$onFocus.call(props2, {
        value: value2,
        e: e,
        position: position === "first" ? "start" : "end"
      });
    };
    var autoSwapTime = function autoSwapTime() {
      var _currentValue$value = _slicedToArray__default["default"](currentValue.value, 2),
        startTime = _currentValue$value[0],
        endTime = _currentValue$value[1];
      var startDayjs = dayjs__default["default"](startTime, props2.format);
      var endDayjs = dayjs__default["default"](endTime, props2.format);
      if (startDayjs.isAfter(endDayjs, "second")) {
        setInnerValue([currentValue.value[1], currentValue.value[0]]);
      } else {
        setInnerValue([currentValue.value[0], currentValue.value[1]]);
      }
    };
    var handleOnPick = function handleOnPick(pickValue, e) {
      var _props2$onPick;
      var pickedRangeValue = [];
      var context;
      if (isArray.isArray(pickValue)) {
        pickedRangeValue = pickValue;
        context = {
          e: e
        };
      } else if (currentPanelIdx.value === 0) {
        var _currentValue$value$5;
        pickedRangeValue = [pickValue, (_currentValue$value$5 = currentValue.value[1]) !== null && _currentValue$value$5 !== void 0 ? _currentValue$value$5 : pickValue];
        context = {
          e: e,
          position: "start"
        };
      } else {
        var _currentValue$value$6;
        pickedRangeValue = [(_currentValue$value$6 = currentValue.value[0]) !== null && _currentValue$value$6 !== void 0 ? _currentValue$value$6 : pickValue, pickValue];
        context = {
          e: e,
          position: "end"
        };
      }
      (_props2$onPick = props2.onPick) === null || _props2$onPick === void 0 || _props2$onPick.call(props2, pickedRangeValue, context);
    };
    Vue.watch(function () {
      return isShowPanel.value;
    }, function () {
      var _innerValue$value2;
      currentValue.value = isShowPanel.value ? (_innerValue$value2 = innerValue.value) !== null && _innerValue$value2 !== void 0 ? _innerValue$value2 : timePicker_panel_props.TIME_PICKER_EMPTY : timePicker_panel_props.TIME_PICKER_EMPTY;
      if (!isShowPanel.value) currentPanelIdx.value = void 0;
    });
    return function () {
      var _innerValue$value3, _innerValue$value4;
      return Vue.createVNode("div", {
        "class": COMPONENT_NAME.value
      }, [Vue.createVNode(rangeInput_index.RangeInputPopup, {
        "disabled": disabled.value,
        "popupVisible": isShowPanel.value,
        "popupProps": _objectSpread({
          overlayInnerStyle: {
            width: "auto",
            padding: 0
          },
          onVisibleChange: handleShowPopup
        }, props2.popupProps),
        "onInputChange": handleInputChange,
        "inputValue": isShowPanel.value ? currentValue.value : (_innerValue$value3 = innerValue.value) !== null && _innerValue$value3 !== void 0 ? _innerValue$value3 : timePicker_panel_props.TIME_PICKER_EMPTY,
        "rangeInputProps": _objectSpread({
          size: props2.size,
          clearable: props2.clearable,
          "class": inputClasses.value,
          value: isShowPanel.value ? currentValue.value : (_innerValue$value4 = innerValue.value) !== null && _innerValue$value4 !== void 0 ? _innerValue$value4 : void 0,
          placeholder: props2.placeholder || [globalConfig.value.placeholder, globalConfig.value.placeholder],
          borderless: props2.borderless,
          suffixIcon: function suffixIcon() {
            return Vue.createVNode(TimeIcon, null, null);
          },
          onClear: handleClear,
          onClick: handleClick,
          onFocus: handleFocus,
          onBlur: handleInputBlur,
          readonly: isReadOnly.value || !allowInput.value,
          activeIndex: currentPanelIdx.value
        }, props2.rangeInputProps),
        "label": props2.label,
        "status": props2.status,
        "tips": props2.tips,
        "panel": function panel() {
          return Vue.createVNode(timePicker_panel_timePickerPanel["default"], {
            "steps": props2.steps,
            "format": format.value,
            "isShowPanel": isShowPanel.value,
            "disableTime": props2.disableTime,
            "hideDisabledTime": props2.hideDisabledTime,
            "isFooterDisplay": true,
            "value": currentValue.value[currentPanelIdx.value || 0],
            "onChange": handleTimeChange,
            "onPick": handleOnPick,
            "handleConfirmClick": handleClickConfirm,
            "position": currentPanelIdx.value === 0 ? "start" : "end",
            "activeIndex": currentPanelIdx.value,
            "presets": props2.presets
          }, null);
        }
      }, null)]);
    };
  }
});

exports["default"] = _TimeRangePicker;
//# sourceMappingURL=time-range-picker.js.map
