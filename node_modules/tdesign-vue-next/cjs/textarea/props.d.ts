import { TdTextareaProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    allowInputOverMax: BooleanConstructor;
    autofocus: BooleanConstructor;
    autosize: {
        type: PropType<TdTextareaProps["autosize"]>;
        default: TdTextareaProps["autosize"];
    };
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    maxcharacter: {
        type: NumberConstructor;
    };
    maxlength: {
        type: PropType<TdTextareaProps["maxlength"]>;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    placeholder: {
        type: StringConstructor;
        default: any;
    };
    readonly: {
        type: BooleanConstructor;
        default: any;
    };
    status: {
        type: PropType<TdTextareaProps["status"]>;
        default: TdTextareaProps["status"];
        validator(val: TdTextareaProps["status"]): boolean;
    };
    tips: {
        type: PropType<TdTextareaProps["tips"]>;
    };
    value: {
        type: PropType<TdTextareaProps["value"]>;
        default: TdTextareaProps["value"];
    };
    modelValue: {
        type: PropType<TdTextareaProps["value"]>;
        default: TdTextareaProps["value"];
    };
    defaultValue: {
        type: PropType<TdTextareaProps["defaultValue"]>;
    };
    onBlur: PropType<TdTextareaProps["onBlur"]>;
    onChange: PropType<TdTextareaProps["onChange"]>;
    onFocus: PropType<TdTextareaProps["onFocus"]>;
    onKeydown: PropType<TdTextareaProps["onKeydown"]>;
    onKeypress: PropType<TdTextareaProps["onKeypress"]>;
    onKeyup: PropType<TdTextareaProps["onKeyup"]>;
    onValidate: PropType<TdTextareaProps["onValidate"]>;
};
export default _default;
