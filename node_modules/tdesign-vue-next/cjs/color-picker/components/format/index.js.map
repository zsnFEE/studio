{"version":3,"file":"index.js","sources":["../../../../../components/color-picker/components/format/index.tsx"],"sourcesContent":["import { defineComponent, PropType, ref, watch } from 'vue';\nimport { Color, getColorFormatOptions } from '@tdesign/common-js/color-picker/index';\nimport type { TdColorPickerProps } from '../../type';\nimport props from '../../props';\nimport { Select as TSelect, Option as TOption } from '../../../select';\nimport FormatInputs from './inputs';\nimport { useBaseClassName } from '../../hooks';\nimport type { TdSelectInputProps } from '../../../select-input/type';\n\nexport default defineComponent({\n  name: 'FormatPanel',\n  inheritAttrs: false,\n  props: {\n    ...props,\n    color: {\n      type: Object as PropType<Color>,\n    },\n    onInputChange: {\n      type: Function,\n      default: () => {\n        return () => {};\n      },\n    },\n  },\n  setup(props) {\n    const baseClassName = useBaseClassName();\n    const formatModel = ref<TdColorPickerProps['format']>(props.format);\n\n    watch(\n      () => [props.format],\n      () => (formatModel.value = props.format),\n    );\n\n    /**\n     * 格式化类型改变触发\n     * @param v\n     */\n    const handleModeChange = (v: TdColorPickerProps['format']) => {\n      formatModel.value = v;\n    };\n\n    return () => {\n      const newProps = {\n        ...props,\n        format: formatModel.value,\n      };\n      const selectInputProps = {\n        ...((props.selectInputProps as Object) || {}),\n      };\n      return (\n        <div class={`${baseClassName.value}__format`}>\n          <div class={`${baseClassName.value}__format--item`}>\n            <TSelect\n              size=\"small\"\n              class={`${baseClassName.value}__format-mode-select`}\n              selectInputProps={{ ...selectInputProps }}\n              popupProps={{\n                overlayClassName: `${baseClassName.value}__select-options`,\n                ...(selectInputProps as TdSelectInputProps).popupProps,\n              }}\n              v-model={formatModel.value}\n              onChange={handleModeChange}\n            >\n              {getColorFormatOptions(props.enableAlpha).map((item) => (\n                <TOption key={item} value={item} label={item} style={{ fontSize: '12px' }} />\n              ))}\n            </TSelect>\n          </div>\n          <div class={`${baseClassName.value}__format--item`}>\n            <FormatInputs {...newProps} />\n          </div>\n        </div>\n      );\n    };\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","inheritAttrs","props","_objectSpread","color","type","onInputChange","Function","default","setup","baseClassName","useBaseClassName","formatModel","ref","format","watch","value","handleModeChange","v","_slot","newProps","selectInputProps","_createVNode","concat","TSelect","overlayClassName","popupProps","onUpdateModelValue","$event","getColorFormatOptions","enableAlpha","map","item","fontSize","_default"],"mappings":"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"}