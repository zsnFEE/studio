import { TdDrawerProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    attach: {
        type: PropType<TdDrawerProps["attach"]>;
    };
    body: {
        type: PropType<TdDrawerProps["body"]>;
    };
    cancelBtn: {
        type: PropType<TdDrawerProps["cancelBtn"]>;
    };
    closeBtn: {
        type: PropType<TdDrawerProps["closeBtn"]>;
    };
    closeOnEscKeydown: {
        type: BooleanConstructor;
        default: any;
    };
    closeOnOverlayClick: {
        type: BooleanConstructor;
        default: any;
    };
    confirmBtn: {
        type: PropType<TdDrawerProps["confirmBtn"]>;
    };
    default: {
        type: PropType<TdDrawerProps["default"]>;
    };
    destroyOnClose: BooleanConstructor;
    drawerClassName: {
        type: StringConstructor;
        default: string;
    };
    footer: {
        type: PropType<TdDrawerProps["footer"]>;
        default: TdDrawerProps["footer"];
    };
    header: {
        type: PropType<TdDrawerProps["header"]>;
        default: TdDrawerProps["header"];
    };
    lazy: BooleanConstructor;
    mode: {
        type: PropType<TdDrawerProps["mode"]>;
        default: TdDrawerProps["mode"];
        validator(val: TdDrawerProps["mode"]): boolean;
    };
    placement: {
        type: PropType<TdDrawerProps["placement"]>;
        default: TdDrawerProps["placement"];
        validator(val: TdDrawerProps["placement"]): boolean;
    };
    preventScrollThrough: {
        type: BooleanConstructor;
        default: boolean;
    };
    showInAttachedElement: BooleanConstructor;
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: StringConstructor;
        default: any;
    };
    sizeDraggable: {
        type: PropType<TdDrawerProps["sizeDraggable"]>;
        default: TdDrawerProps["sizeDraggable"];
    };
    visible: BooleanConstructor;
    zIndex: {
        type: NumberConstructor;
    };
    onBeforeClose: PropType<TdDrawerProps["onBeforeClose"]>;
    onBeforeOpen: PropType<TdDrawerProps["onBeforeOpen"]>;
    onCancel: PropType<TdDrawerProps["onCancel"]>;
    onClose: PropType<TdDrawerProps["onClose"]>;
    onCloseBtnClick: PropType<TdDrawerProps["onCloseBtnClick"]>;
    onConfirm: PropType<TdDrawerProps["onConfirm"]>;
    onEscKeydown: PropType<TdDrawerProps["onEscKeydown"]>;
    onOverlayClick: PropType<TdDrawerProps["onOverlayClick"]>;
    onSizeDragEnd: PropType<TdDrawerProps["onSizeDragEnd"]>;
};
export default _default;
