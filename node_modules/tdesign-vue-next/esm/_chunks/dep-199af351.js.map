{"version":3,"file":"dep-199af351.js","sources":["../../../shared/hooks/useTeleport/index.ts","../../../components/loading/loading.tsx"],"sourcesContent":["import { getAttach } from '@tdesign/shared-utils';\nimport { computed, Ref, onMounted, ref, watch } from 'vue';\n// TODO need refactor\nimport { AttachNode } from '../../../components/common';\nimport { isFunction } from 'lodash-es';\n\n/**\n * @description 返回挂载的节点, 用于teleport\n * @param attach 既可以是一个函数, 也可以是一个ref\n * @param triggerNode 既可以是一个函数, 也可以是一个ref\n */\nexport function useTeleport(\n  attach: (() => AttachNode) | Ref<AttachNode>,\n  triggerNode?: (() => any) | Ref<any>,\n): Ref<string | Element> {\n  // 如果是函数, 则使用computed包裹 否则直接使用ref\n  const to = isFunction(attach) ? computed(attach) : ref(attach);\n  const innerTriggerNode = isFunction(triggerNode) ? computed(triggerNode) : ref(triggerNode);\n\n  const element = ref<string | Element>();\n\n  const getElement = () => {\n    element.value = getAttach(to.value, innerTriggerNode.value);\n  };\n\n  onMounted(() => getElement());\n\n  watch([to, innerTriggerNode], () => getElement());\n\n  return element;\n}\n","import { defineComponent, ref, computed, watch, onMounted, toRefs, CSSProperties, Teleport } from 'vue';\nimport GradientIcon from './icon/gradient';\nimport { addClass, removeClass } from '@tdesign/shared-utils';\nimport { getPropertyValFromObj } from '@tdesign/common-js/utils/general';\nimport { useContent, useTNodeJSX, useTeleport, usePrefixClass, useCommonClassName } from '@tdesign/shared-hooks';\n\nimport props from './props';\n\nconst useComponentClassName = () => {\n  return {\n    name: usePrefixClass('loading'),\n    centerClass: usePrefixClass('loading--center'),\n    fullscreenClass: usePrefixClass('loading__fullscreen'),\n    lockClass: usePrefixClass('loading--lock'),\n    overlayClass: usePrefixClass('loading__overlay'),\n    relativeClass: usePrefixClass('loading__parent'),\n    fullClass: usePrefixClass('loading--full'),\n    inheritColorClass: usePrefixClass('loading--inherit-color'),\n  };\n};\n\nexport default defineComponent({\n  name: 'TLoading',\n  inheritAttrs: false,\n  props,\n  setup(props, { slots, attrs }) {\n    const delayShowLoading = ref(false);\n\n    const { name, centerClass, fullscreenClass, lockClass, overlayClass, relativeClass, fullClass, inheritColorClass } =\n      useComponentClassName();\n\n    const classPrefix = usePrefixClass();\n    const renderTNodeJSX = useTNodeJSX();\n    const renderContent = useContent();\n    const { SIZE } = useCommonClassName();\n\n    const countDelay = () => {\n      delayShowLoading.value = false;\n      const timer = setTimeout(() => {\n        delayShowLoading.value = true;\n        clearTimeout(timer);\n      }, props.delay);\n    };\n    // teleport容器\n    const teleportElement = useTeleport(() => props.attach);\n    // 延时计时是否完成。用于控制延时计时结束前不能显示加载态\n    const delayCounted = computed(() => Boolean(!props.delay || (props.delay && delayShowLoading.value)));\n\n    // loading style\n    const styles = computed(() => {\n      const styles: CSSProperties = {};\n      if (props.zIndex !== undefined) {\n        styles.zIndex = props.zIndex;\n      }\n      if (!['small', 'medium', 'large'].includes(props.size)) {\n        styles['font-size'] = props.size;\n      }\n      return styles;\n    });\n\n    const hasContent = computed(() => Boolean(props.default || slots.default || props.content || slots.content));\n    const lockFullscreen = computed(() => props.preventScrollThrough && props.fullscreen);\n    const showText = computed(() => Boolean(props.text || slots.text));\n    const showWrapLoading = computed(() => hasContent.value && props.loading && delayCounted.value);\n    const showFullScreenLoading = computed(() => props.fullscreen && props.loading && delayCounted.value);\n    const showAttachedLoading = computed(() => props.attach && props.loading && delayCounted.value);\n    const classes = computed(() => {\n      const baseClasses = [\n        centerClass.value,\n        getPropertyValFromObj(SIZE.value, props.size),\n        { [inheritColorClass.value]: props.inheritColor },\n      ];\n      const fullScreenClasses = [name.value, fullscreenClass.value, centerClass.value, overlayClass.value];\n\n      return {\n        baseClasses,\n        attachClasses: baseClasses.concat([name.value, fullClass.value, { [overlayClass.value]: props.showOverlay }]),\n        withContentClasses: baseClasses.concat([\n          name.value,\n          fullClass.value,\n          {\n            [overlayClass.value]: props.showOverlay,\n          },\n        ]),\n        fullScreenClasses,\n        normalClasses: baseClasses.concat([name.value]),\n      };\n    });\n\n    const { loading } = toRefs(props);\n\n    watch([loading], ([isLoading]) => {\n      if (isLoading) {\n        countDelay();\n        lockFullscreen.value && addClass(document.body, lockClass.value);\n      } else {\n        lockFullscreen.value && removeClass(document.body, lockClass.value);\n      }\n    });\n\n    onMounted(() => {\n      props.delay && countDelay();\n    });\n\n    return () => {\n      const { fullScreenClasses, baseClasses, withContentClasses, attachClasses, normalClasses } = classes.value;\n\n      const defaultIndicator = <GradientIcon size={props.size} />;\n      const indicator = loading.value && renderTNodeJSX('indicator', defaultIndicator);\n      const text = showText.value && <div class={`${classPrefix.value}-loading__text`}>{renderTNodeJSX('text')}</div>;\n\n      // full screen loading\n      if (props.fullscreen) {\n        if (!showFullScreenLoading.value || !props.loading) return null;\n        return (\n          <Teleport disabled={!props.attach || !teleportElement.value} to={teleportElement.value}>\n            <div class={fullScreenClasses} style={styles.value} {...attrs}>\n              <div class={baseClasses}>\n                {indicator}\n                {text}\n              </div>\n            </div>\n          </Teleport>\n        );\n      }\n\n      // Loading is wrapping a HTMLElement.\n      if (hasContent.value) {\n        return (\n          <div class={relativeClass.value} {...attrs}>\n            {renderContent('default', 'content')}\n            {showWrapLoading.value && (\n              <div class={withContentClasses} style={styles.value}>\n                {indicator}\n                {text}\n              </div>\n            )}\n          </div>\n        );\n      }\n\n      // transfer parent node\n      if (props.attach) {\n        if (!showAttachedLoading.value || !loading.value) return null;\n        return (\n          <Teleport disabled={!props.attach || !teleportElement.value} to={teleportElement.value}>\n            <div class={attachClasses} style={styles.value} {...attrs}>\n              {indicator}\n              {text}\n            </div>\n          </Teleport>\n        );\n      }\n\n      // Normal Loading without overlay or content\n      return loading.value ? (\n        <div class={normalClasses} style={styles.value} {...attrs}>\n          {indicator}\n          {text}\n        </div>\n      ) : null;\n    };\n  },\n});\n"],"names":["useTeleport","attach","triggerNode","to","isFunction","computed","ref","innerTriggerNode","element","getElement","value","getAttach","onMounted","watch","useComponentClassName","name","usePrefixClass","centerClass","fullscreenClass","lockClass","overlayClass","relativeClass","fullClass","inheritColorClass","defineComponent","inheritAttrs","props","setup","slots","_ref","attrs","delayShowLoading","_useComponentClassNam","classPrefix","renderTNodeJSX","useTNodeJSX","renderContent","useContent","_useCommonClassName","useCommonClassName","SIZE","countDelay","timer","setTimeout","clearTimeout","delay","teleportElement","delayCounted","Boolean","styles","zIndex","includes","size","hasContent","content","lockFullscreen","preventScrollThrough","fullscreen","showText","text","showWrapLoading","loading","showFullScreenLoading","showAttachedLoading","classes","baseClasses","getPropertyValFromObj","_defineProperty","inheritColor","fullScreenClasses","attachClasses","concat","showOverlay","withContentClasses","normalClasses","_toRefs","toRefs","_ref5","_ref6","_slicedToArray","isLoading","addClass","document","body","removeClass","_classes$value","defaultIndicator","_createVNode","GradientIcon","indicator","Teleport","_mergeProps"],"mappings":"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"}