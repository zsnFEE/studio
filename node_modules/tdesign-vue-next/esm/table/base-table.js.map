{"version":3,"file":"base-table.js","sources":["../../../shared/hooks/useElementLazyRender/index.ts","../../../components/table/base-table.tsx"],"sourcesContent":["import { onBeforeUnmount, onMounted, Ref, ref, watch } from 'vue';\nimport observe from '@tdesign/common-js/utils/observe';\n\nexport function useElementLazyRender(labelRef: Ref<HTMLElement>, lazyLoad: Ref<boolean>) {\n  const ioObserver = ref<IntersectionObserver>();\n  const showElement = ref(true);\n\n  const handleLazyLoad = () => {\n    if (!lazyLoad.value || !labelRef.value || ioObserver.value) return;\n    showElement.value = false;\n    const io = observe(\n      labelRef.value,\n      null,\n      () => {\n        showElement.value = true;\n      },\n      10,\n    );\n    ioObserver.value = io;\n  };\n\n  onMounted(handleLazyLoad);\n\n  lazyLoad.value && watch([lazyLoad, labelRef], handleLazyLoad);\n\n  onBeforeUnmount(() => {\n    if (!lazyLoad.value) return;\n    ioObserver.value?.unobserve?.(labelRef.value);\n  });\n\n  return {\n    showElement,\n  };\n}\n\nexport default useElementLazyRender;\n","import { computed, defineComponent, SetupContext, ref, nextTick, PropType, watch, onMounted, toRefs } from 'vue';\nimport { pick, get, isFunction, throttle } from 'lodash-es';\nimport props from './base-table-props';\nimport useTableHeader from './hooks/useTableHeader';\nimport useColumnResize from './hooks/useColumnResize';\nimport useFixed from './hooks/useFixed';\nimport usePagination from './hooks/usePagination';\nimport { useConfig, useTNodeJSX, useVirtualScrollNew, useElementLazyRender } from '@tdesign/shared-hooks';\nimport useAffix from './hooks/useAffix';\nimport Loading from '../loading';\nimport TBody, { extendTableProps } from './components/tbody';\nimport { BaseTableProps } from './types';\n\nimport useStyle, { formatCSSUnit } from './hooks/useStyle';\nimport useClassName from './hooks/useClassName';\n\nimport { Affix } from '../affix';\nimport { ROW_LISTENERS } from './components/tr';\nimport THead from './components/thead';\nimport TFoot from './components/tfoot';\nimport { getAffixProps } from './utils';\nimport { Styles, ComponentScrollToElementParams } from '../common';\nimport { getIEVersion } from '@tdesign/common-js/utils/helper';\nimport { BaseTableInstanceFunctions } from './type';\nimport log from '@tdesign/common-js/log/index';\nimport { useRowHighlight } from './hooks/useRowHighlight';\nimport useHoverKeyboardEvent from './hooks/useHoverKeyboardEvent';\n\nexport const BASE_TABLE_EVENTS = ['page-change', 'cell-click', 'scroll', 'scrollX', 'scrollY'];\nexport const BASE_TABLE_ALL_EVENTS = ROW_LISTENERS.map((t) => `row-${t}`).concat(BASE_TABLE_EVENTS);\n\nexport interface TableListeners {\n  [key: string]: Function;\n}\n\nexport default defineComponent({\n  name: 'TBaseTable',\n  props: {\n    ...props,\n    /**\n     * 渲染展开行，非公开属性，请勿在业务中使用\n     */\n    renderExpandedRow: Function as PropType<BaseTableProps['renderExpandedRow']>,\n    onLeafColumnsChange: Function as PropType<BaseTableProps['onLeafColumnsChange']>,\n    thDraggable: Boolean,\n  },\n  emits: ['show-element-change'],\n  setup(props: BaseTableProps, context: SetupContext) {\n    const { lazyLoad } = toRefs(props);\n    const renderTNode = useTNodeJSX();\n    const tableRef = ref<HTMLDivElement>();\n    const tableElmRef = ref<HTMLTableElement>();\n    const tableBodyRef = ref<InstanceType<typeof TBody>>();\n    const bottomContentRef = ref<HTMLDivElement>();\n    const tableFootHeight = ref(0);\n    const { classPrefix, virtualScrollClasses, tableLayoutClasses, tableBaseClass, tableColFixedClasses } =\n      useClassName();\n    // 表格基础样式类\n    const { tableClasses, sizeClassNames, tableContentStyles, tableElementStyles } = useStyle(props);\n    const { globalConfig } = useConfig('table', props.locale);\n    const { isMultipleHeader, spansAndLeafNodes, thList } = useTableHeader(props);\n    const finalColumns = computed(() => spansAndLeafNodes.value?.leafColumns || props.columns);\n    const tableSize = computed(() => props.size ?? globalConfig.value.size);\n\n    const { showElement } = useElementLazyRender(tableRef, lazyLoad);\n\n    // 吸附相关ref 用来做视图resize后重新定位\n    const paginationAffixRef = ref();\n    const horizontalScrollAffixRef = ref();\n    const headerTopAffixRef = ref();\n    const footerBottomAffixRef = ref();\n\n    // 固定表头和固定列逻辑\n    const {\n      scrollbarWidth,\n      tableWidth,\n      tableElmWidth,\n      tableContentRef,\n      isFixedHeader,\n      isWidthOverflow,\n      isFixedColumn,\n      thWidthList,\n      showColumnShadow,\n      rowAndColFixedPosition,\n      setData,\n      refreshTable,\n      setTableElmWidth,\n      emitScrollEvent,\n      setUseFixedTableElmRef,\n      updateColumnFixedShadow,\n      getThWidthList,\n      updateThWidthList,\n      addTableResizeObserver,\n      updateTableAfterColumnResize,\n    } = useFixed(props, context, finalColumns, {\n      paginationAffixRef,\n      horizontalScrollAffixRef,\n      headerTopAffixRef,\n      footerBottomAffixRef,\n    });\n\n    // 1. 表头吸顶；2. 表尾吸底；3. 底部滚动条吸底；4. 分页器吸底\n    const {\n      affixHeaderRef,\n      affixFooterRef,\n      horizontalScrollbarRef,\n      paginationRef,\n      showAffixHeader,\n      showAffixFooter,\n      showAffixPagination,\n      onHorizontalScroll,\n      setTableContentRef,\n      updateAffixHeaderOrFooter,\n    } = useAffix(props);\n\n    const { dataSource, innerPagination, isPaginateData, renderPagination } = usePagination(props, context);\n\n    // 列宽拖拽逻辑\n    const columnResizeParams = useColumnResize({\n      isWidthOverflow,\n      tableContentRef,\n      showColumnShadow,\n      getThWidthList,\n      updateThWidthList,\n      setTableElmWidth,\n      updateTableAfterColumnResize,\n      onColumnResizeChange: props.onColumnResizeChange,\n    });\n    const { resizeLineRef, resizeLineStyle, setEffectColMap } = columnResizeParams;\n\n    const dynamicBaseTableClasses = computed(() => [\n      tableClasses.value,\n      {\n        [tableBaseClass.headerFixed]: isFixedHeader.value,\n        [tableBaseClass.columnFixed]: isFixedColumn.value,\n        [tableBaseClass.widthOverflow]: isWidthOverflow.value,\n        [tableBaseClass.multipleHeader]: isMultipleHeader.value,\n        [tableColFixedClasses.leftShadow]: showColumnShadow.left,\n        [tableColFixedClasses.rightShadow]: showColumnShadow.right,\n        [tableBaseClass.columnResizableTable]: props.resizable,\n        [`${classPrefix}-table__row--active-${props.activeRowType}`]: props.activeRowType,\n      },\n    ]);\n\n    const tableElmClasses = computed(() => [[tableLayoutClasses[props.tableLayout]]]);\n\n    const showRightDivider = computed(\n      () =>\n        props.bordered &&\n        isFixedHeader.value &&\n        ((isMultipleHeader.value && isWidthOverflow.value) || !isMultipleHeader.value),\n    );\n\n    const dividerBottom = computed(() => {\n      if (!props.bordered) return 0;\n      const bottomRect = bottomContentRef.value?.getBoundingClientRect();\n      const paginationRect = paginationRef.value?.getBoundingClientRect();\n      return (bottomRect?.height || 0) + (paginationRect?.height || 0);\n    });\n\n    // 行高亮\n    const { tActiveRow, onHighlightRow, addHighlightKeyboardListener, removeHighlightKeyboardListener } =\n      useRowHighlight(props, tableRef);\n\n    const {\n      hoverRow,\n      needKeyboardRowHover,\n      clearHoverRow,\n      addRowHoverKeyboardListener,\n      removeRowHoverKeyboardListener,\n      tableRefTabIndex,\n    } = useHoverKeyboardEvent(props, tableRef);\n\n    watch(tableElmRef, () => {\n      setUseFixedTableElmRef(tableElmRef.value);\n    });\n\n    watch(\n      () => [props.data, dataSource],\n      () => {\n        setData(isPaginateData.value ? dataSource.value : props.data);\n      },\n    );\n\n    watch(\n      spansAndLeafNodes,\n      () => {\n        props.onLeafColumnsChange?.(spansAndLeafNodes.value.leafColumns);\n        setEffectColMap(spansAndLeafNodes.value.leafColumns, null);\n      },\n      { immediate: true },\n    );\n\n    const onFixedChange = () => {\n      nextTick(() => {\n        onHorizontalScroll();\n        updateAffixHeaderOrFooter();\n      });\n    };\n\n    const syncThWidthList = throttle(() => {\n      updateThWidthList(getThWidthList('calculate'));\n    });\n\n    // 虚拟滚动相关数据\n    const virtualScrollParams = computed(() => ({\n      data: props.data,\n      // 传递 fixedRows 的配置\n      scroll: { ...props.scroll, fixedRows: props.fixedRows },\n    }));\n    const virtualConfig = useVirtualScrollNew(tableContentRef, virtualScrollParams);\n\n    let lastScrollY = -1;\n    const onInnerVirtualScroll = (e: WheelEvent) => {\n      const target = (e.target || e.srcElement) as HTMLElement;\n      const top = target.scrollTop;\n      // 排除横向滚动触发的纵向虚拟滚动计算\n      if (lastScrollY !== top) {\n        virtualConfig.isVirtualScroll.value && virtualConfig.handleScroll();\n      } else {\n        lastScrollY = -1;\n        updateColumnFixedShadow(target);\n      }\n      lastScrollY = top;\n      emitScrollEvent(e);\n      if (props.tableLayout === 'auto') {\n        syncThWidthList();\n      }\n    };\n\n    // used for top margin\n    const getTFootHeight = () => {\n      if (!tableElmRef.value) return;\n      tableFootHeight.value = tableElmRef.value.querySelector('tfoot')?.getBoundingClientRect().height;\n    };\n\n    // 对外暴露方法，修改时需谨慎（expose）\n    const scrollColumnIntoView: BaseTableInstanceFunctions['scrollColumnIntoView'] = (colKey: string) => {\n      if (!tableContentRef.value) return;\n      const thDom = tableContentRef.value.querySelector(`th[data-colkey=\"${colKey}\"]`);\n      const fixedThDom = tableContentRef.value.querySelectorAll('th.t-table__cell--fixed-left');\n      let totalWidth = 0;\n      for (let i = 0, len = fixedThDom.length; i < len; i++) {\n        totalWidth += fixedThDom[i].getBoundingClientRect().width;\n      }\n      const domRect = thDom.getBoundingClientRect();\n      const contentRect = tableContentRef.value.getBoundingClientRect();\n      const distance = domRect.left - contentRect.left - totalWidth;\n      tableContentRef.value.scrollTo({ left: distance, behavior: 'smooth' });\n    };\n\n    watch(tableContentRef, () => {\n      setTableContentRef(tableContentRef.value);\n      // auto 布局下，初始化表头列宽，避免 affix 表头列宽不对齐\n      if (props.tableLayout === 'auto') {\n        syncThWidthList();\n      }\n    });\n\n    // 应该有多种情况下需要更新 foot 高度\n    // 原方案只监听 tableElmRef，但是可能有异步渲染的情况，footer 的渲染晚于 dom 引用的产生\n    // 加入 timeout，避免渲染延迟导致的高度获取失败\n    watch(\n      () => [tableElmRef.value, props.footData, props.footerSummary, props.columns],\n      () => {\n        const timer = setTimeout(() => {\n          getTFootHeight();\n          clearTimeout(timer);\n        }, 0);\n      },\n    );\n\n    watch(tableRef, (tableRef) => {\n      addTableResizeObserver(tableRef);\n    });\n\n    onMounted(() => {\n      getTFootHeight();\n      setTableContentRef(tableContentRef.value);\n      addTableResizeObserver(tableRef.value);\n    });\n\n    const onTableFocus = () => {\n      props.activeRowType && addHighlightKeyboardListener();\n      needKeyboardRowHover.value && addRowHoverKeyboardListener();\n    };\n\n    const onTableBlur = () => {\n      props.activeRowType && removeHighlightKeyboardListener();\n      needKeyboardRowHover.value && removeRowHoverKeyboardListener();\n    };\n\n    const onInnerRowClick: BaseTableProps['onRowClick'] = (ctx) => {\n      props.onRowClick?.(ctx);\n      props.activeRowType && onHighlightRow(ctx);\n      needKeyboardRowHover.value && clearHoverRow();\n    };\n\n    watch(\n      [showElement],\n      ([showElement]) => {\n        context.emit('show-element-change', showElement);\n      },\n      { immediate: true },\n    );\n\n    const tableData = computed(() => (isPaginateData.value ? dataSource.value : props.data));\n\n    const scrollToElement = (params: ComponentScrollToElementParams) => {\n      let { index } = params;\n      if (!index && index !== 0) {\n        if (!params.key) {\n          log.error('Table', 'scrollToElement: one of `index` or `key` must exist.');\n          return;\n        }\n        index = tableData.value?.findIndex((item) => get(item, props.rowKey) === params.key);\n        if (index < 0) {\n          log.error('Table', `${params.key} does not exist in data, check \\`rowKey\\` or \\`data\\` please.`);\n        }\n      }\n      if (virtualConfig.isVirtualScroll.value) {\n        virtualConfig.scrollToElement({ ...params, index: index + 1 });\n      } else {\n        // 执行普通的滚动\n        // 获取 tbody\n        const el = tableBodyRef.value?.$el as HTMLElement | undefined;\n        const row = el?.children?.[index] as HTMLElement;\n        if (row) {\n          const { offsetTop } = row;\n          const scrollTop = tableContentRef.value.scrollTop;\n          const scrollHeight = offsetTop - scrollTop - (params.top ?? 0);\n          // 实现偏移量的支持\n          tableContentRef.value.scrollBy({ top: scrollHeight, behavior: params.behavior ?? 'auto' });\n        }\n      }\n    };\n\n    context.expose({\n      refreshTable,\n      scrollColumnIntoView,\n      scrollToElement,\n    });\n\n    return () => {\n      if (!showElement.value) {\n        return <div ref={tableRef}></div>;\n      }\n\n      const data = isPaginateData.value ? dataSource.value : props.data;\n      const columns = spansAndLeafNodes?.value.leafColumns || props.columns;\n\n      const columnResizable = props.allowResizeColumnWidth ?? props.resizable;\n      if (columnResizable && props.tableLayout === 'auto') {\n        log.warn(\n          'Table',\n          'table-layout can not be `auto`, cause you are using column resizable, set `table-layout: fixed` please.',\n        );\n      }\n\n      const defaultColWidth = props.tableLayout === 'fixed' && isWidthOverflow.value ? '100px' : undefined;\n\n      const renderColGroup = (isAffixHeader = true) => (\n        <colgroup>\n          {columns.map((col) => {\n            const style: Styles = {\n              width:\n                formatCSSUnit(\n                  (isAffixHeader || columnResizable ? thWidthList.value[col.colKey] : undefined) || col.width,\n                ) || defaultColWidth,\n            };\n            if (col.minWidth) {\n              style.minWidth = formatCSSUnit(col.minWidth);\n            }\n            // 没有设置任何宽度的场景下，需要保留表格正常显示的最小宽度，否则会出现因宽度过小的抖动问题\n            if (!style.width && !col.minWidth && props.tableLayout === 'fixed') {\n              style.minWidth = '80px';\n            }\n            return <col key={col.colKey} style={style}></col>;\n          })}\n        </colgroup>\n      );\n\n      const renderAffixedHeader = () => {\n        if (props.showHeader === false) return null;\n        return (\n          !!(virtualConfig.isVirtualScroll.value || props.headerAffixedTop) &&\n          (props.headerAffixedTop ? (\n            <Affix\n              offsetTop={0}\n              {...getAffixProps(props.headerAffixedTop)}\n              onFixedChange={onFixedChange}\n              ref={headerTopAffixRef}\n            >\n              {affixHeaderWithWrap}\n            </Affix>\n          ) : (\n            isFixedHeader.value && affixHeaderWithWrap\n          ))\n        );\n      };\n\n      const renderAffixedHorizontalScrollbar = () => (\n        <Affix\n          offsetBottom={0}\n          {...getAffixProps(props.horizontalScrollAffixedBottom)}\n          style={{ marginTop: `-${scrollbarWidth.value * 2}px` }}\n          horizontalScrollAffixedBottom\n          ref={horizontalScrollAffixRef}\n        >\n          <div\n            ref={horizontalScrollbarRef}\n            class={['scrollbar', tableBaseClass.obviousScrollbar]}\n            style={{\n              width: `${tableWidth.value}px`,\n              overflow: 'auto',\n              opacity: Number(showAffixFooter.value),\n            }}\n          >\n            <div style={{ width: `${tableElmWidth.value}px`, height: '5px' }}></div>\n          </div>\n        </Affix>\n      );\n\n      const headProps = {\n        isFixedHeader: isFixedHeader.value,\n        rowAndColFixedPosition: rowAndColFixedPosition.value,\n        isMultipleHeader: isMultipleHeader.value,\n        bordered: props.bordered,\n        maxHeight: props.maxHeight,\n        height: props.height,\n        spansAndLeafNodes: spansAndLeafNodes.value,\n        thList: thList.value,\n        thWidthList: thWidthList.value,\n        resizable: props.resizable,\n        columnResizeParams,\n        classPrefix: classPrefix,\n        ellipsisOverlayClassName: tableSize.value !== 'medium' ? sizeClassNames[tableSize.value] : '',\n        attach: props.attach,\n        showColumnShadow: showColumnShadow,\n        thDraggable: props.thDraggable,\n      };\n\n      /**\n       * Affixed Header\n       */\n      // IE 浏览器需要遮挡 header 吸顶滚动条，要减去 getBoundingClientRect.height 的滚动条高度 4 像素\n      const IEHeaderWrap = getIEVersion() <= 11 ? 4 : 0;\n      const barWidth = isWidthOverflow.value ? scrollbarWidth.value : 0;\n      const affixHeaderHeight = ref((affixHeaderRef.value?.getBoundingClientRect().height || 0) - IEHeaderWrap);\n      // 等待表头渲染完成后再更新高度，有可能列变动带来多级表头的高度变化，错误高度会导致滚动条显示\n      const timer = setTimeout(() => {\n        affixHeaderHeight.value = (affixHeaderRef.value?.getBoundingClientRect().height || 0) - IEHeaderWrap;\n        clearTimeout(timer);\n      }, 0);\n      const affixHeaderWrapHeight = computed(() => affixHeaderHeight.value - barWidth);\n      // 两类场景：1. 虚拟滚动，永久显示表头，直到表头消失在可视区域； 2. 表头吸顶，根据滚动情况判断是否显示吸顶表头\n      const headerOpacity = props.headerAffixedTop ? Number(showAffixHeader.value) : 1;\n      const affixHeaderWrapHeightStyle = computed(() => {\n        return {\n          width: `${tableWidth.value}px`,\n          height: `${affixHeaderWrapHeight.value}px`,\n          opacity: headerOpacity,\n        };\n      });\n      // 多级表头左边线缺失\n      const affixedLeftBorder = props.bordered ? 1 : 0;\n      const affixedHeader = Boolean(\n        (props.headerAffixedTop || virtualConfig.isVirtualScroll.value) && tableWidth.value,\n      ) && (\n        <div\n          ref={affixHeaderRef}\n          style={{\n            width: `${tableWidth.value - affixedLeftBorder}px`,\n            opacity: Number(showAffixHeader.value),\n          }}\n          class={[\n            'scrollbar',\n            {\n              [tableBaseClass.affixedHeaderElm]: props.headerAffixedTop || virtualConfig.isVirtualScroll.value,\n            },\n          ]}\n        >\n          <table\n            class={tableElmClasses.value}\n            style={{ ...tableElementStyles.value, width: `${tableElmWidth.value}px` }}\n          >\n            {renderColGroup(true)}\n            <THead v-slots={context.slots} {...headProps} />\n          </table>\n        </div>\n      );\n\n      // 添加这一层，是为了隐藏表头的横向滚动条。如果以后不需要照顾 IE 10 以下的项目，则可直接移除这一层\n      // 彼时，可更为使用 CSS 样式中的 .hideScrollbar()\n      const affixHeaderWithWrap = (\n        <div class={tableBaseClass.affixedHeaderWrap} style={affixHeaderWrapHeightStyle.value}>\n          {affixedHeader}\n        </div>\n      );\n\n      /**\n       * Affixed Footer\n       */\n      let marginScrollbarWidth = isWidthOverflow.value ? scrollbarWidth.value : 0;\n      if (props.bordered) {\n        marginScrollbarWidth += 1;\n      }\n      // Hack: Affix 组件，marginTop 临时使用 负 margin 定位位置\n      const showFooter = Boolean(virtualConfig.isVirtualScroll.value || props.footerAffixedBottom);\n      const hasFooter = props.footData?.length || props.footerSummary || context.slots['footerSummary'];\n      const affixedFooter = Boolean(showFooter && hasFooter && tableWidth.value) && (\n        <Affix\n          class={tableBaseClass.affixedFooterWrap}\n          onFixedChange={onFixedChange}\n          offsetBottom={marginScrollbarWidth || 0}\n          {...getAffixProps(props.footerAffixedBottom)}\n          style={{ marginTop: `${-1 * ((tableFootHeight.value ?? 0) + marginScrollbarWidth)}px` }}\n          ref={footerBottomAffixRef}\n        >\n          <div\n            ref={affixFooterRef}\n            style={{ width: `${tableWidth.value - affixedLeftBorder}px`, opacity: Number(showAffixFooter.value) }}\n            class={[\n              'scrollbar',\n              {\n                [tableBaseClass.affixedFooterElm]: props.footerAffixedBottom || virtualConfig.isVirtualScroll.value,\n              },\n            ]}\n          >\n            <table\n              class={tableElmClasses.value}\n              style={{ ...tableElementStyles.value, width: `${tableElmWidth.value}px` }}\n            >\n              {/* 此处和 Vue2 不同，Vue3 里面必须每一处单独写 <colgroup> */}\n              {renderColGroup(true)}\n              <TFoot\n                rowKey={props.rowKey}\n                v-slots={context.slots}\n                isFixedHeader={isFixedHeader.value}\n                rowAndColFixedPosition={rowAndColFixedPosition.value}\n                footData={props.footData}\n                columns={spansAndLeafNodes.value.leafColumns}\n                rowAttributes={props.rowAttributes}\n                rowClassName={props.rowClassName}\n                thWidthList={thWidthList.value}\n                footerSummary={props.footerSummary}\n                rowspanAndColspanInFooter={props.rowspanAndColspanInFooter}\n              ></TFoot>\n            </table>\n          </div>\n        </Affix>\n      );\n\n      // 通过 translate 撑开虚拟滚动的高度，应该是内容高度加上表头和表尾的高度\n      const translate = `translate(0, ${\n        virtualConfig.scrollHeight.value + (tableFootHeight.value ?? 0) + (affixHeaderHeight.value ?? 0)\n      }px)`;\n      const virtualStyle = {\n        transform: translate,\n        '-ms-transform': translate,\n        '-moz-transform': translate,\n        '-webkit-transform': translate,\n      };\n      const tableBodyProps = {\n        classPrefix,\n        ellipsisOverlayClassName: tableSize.value !== 'medium' ? sizeClassNames[tableSize.value] : '',\n        rowAndColFixedPosition: rowAndColFixedPosition.value,\n        showColumnShadow,\n        data: data,\n        virtualConfig,\n        columns: spansAndLeafNodes.value.leafColumns,\n        tableElm: tableRef.value,\n        tableWidth: tableWidth.value,\n        isWidthOverflow: isWidthOverflow.value,\n        scroll: props.scroll,\n        cellEmptyContent: props.cellEmptyContent,\n        tableContentElm: tableContentRef.value,\n        handleRowMounted: virtualConfig.handleRowMounted,\n        renderExpandedRow: props.renderExpandedRow,\n        ...pick(props, extendTableProps),\n        // 内部使用分页信息必须取 innerPagination\n        pagination: innerPagination.value,\n        attach: props.attach,\n        hoverRow: hoverRow.value,\n        activeRow: tActiveRow.value,\n        onRowClick: onInnerRowClick,\n      };\n      const tableContent = (\n        <div\n          ref={tableContentRef}\n          class={tableBaseClass.content}\n          style={tableContentStyles.value}\n          onScroll={onInnerVirtualScroll}\n        >\n          {virtualConfig.isVirtualScroll.value && <div class={virtualScrollClasses.cursor} style={virtualStyle} />}\n\n          <table\n            ref={tableElmRef}\n            class={tableElmClasses.value}\n            style={{\n              ...tableElementStyles.value,\n              width:\n                props.resizable && isWidthOverflow.value && tableElmWidth.value\n                  ? `${tableElmWidth.value}px`\n                  : tableElementStyles.value.width,\n            }}\n          >\n            {renderColGroup(false)}\n            {props.showHeader && (\n              <THead\n                v-slots={context.slots}\n                {...{ ...headProps, thWidthList: columnResizable ? thWidthList.value : {} }}\n              />\n            )}\n            <TBody v-slots={context.slots} ref={tableBodyRef} {...tableBodyProps} />\n            <TFoot\n              v-slots={context.slots}\n              rowKey={props.rowKey}\n              isFixedHeader={isFixedHeader.value}\n              rowAndColFixedPosition={rowAndColFixedPosition.value}\n              footData={props.footData}\n              columns={spansAndLeafNodes.value.leafColumns}\n              rowAttributes={props.rowAttributes}\n              rowClassName={props.rowClassName}\n              footerSummary={props.footerSummary}\n              rowspanAndColspanInFooter={props.rowspanAndColspanInFooter}\n              virtualScroll={virtualConfig.isVirtualScroll.value}\n            ></TFoot>\n          </table>\n        </div>\n      );\n\n      const getCustomLoadingText = isFunction(props.loading) ? props.loading : context.slots.loading;\n      const loadingContent = props.loading !== undefined && (\n        <Loading\n          loading={!!props.loading}\n          text={getCustomLoadingText}\n          attach={tableRef.value ? () => tableRef.value : undefined}\n          showOverlay\n          size=\"small\"\n          {...props.loadingProps}\n        ></Loading>\n      );\n\n      const topContent = renderTNode('topContent');\n      const bottomContent = renderTNode('bottomContent');\n      const pagination = (\n        <div\n          ref={paginationRef}\n          class={tableBaseClass.paginationWrap}\n          style={{ opacity: Number(showAffixPagination.value) }}\n        >\n          {renderPagination()}\n        </div>\n      );\n\n      const bottom = !!bottomContent && (\n        <div ref={bottomContentRef} class={tableBaseClass.bottomContent}>\n          {bottomContent}\n        </div>\n      );\n\n      return (\n        <div\n          ref={tableRef}\n          tabindex={tableRefTabIndex.value}\n          class={dynamicBaseTableClasses.value}\n          onFocus={onTableFocus}\n          onBlur={onTableBlur}\n        >\n          {!!topContent && <div class={tableBaseClass.topContent}>{topContent}</div>}\n\n          {renderAffixedHeader()}\n\n          {tableContent}\n\n          {affixedFooter}\n\n          {loadingContent}\n\n          {bottom}\n\n          {/* 右侧滚动条分隔线 */}\n          {showRightDivider.value && (\n            <div\n              class={tableBaseClass.scrollbarDivider}\n              style={{\n                right: `${scrollbarWidth.value}px`,\n                bottom: dividerBottom.value ? `${dividerBottom.value}px` : undefined,\n                height: `${tableContentRef.value?.getBoundingClientRect().height}px`,\n              }}\n            ></div>\n          )}\n\n          {/* 吸底的滚动条 */}\n          {props.horizontalScrollAffixedBottom && renderAffixedHorizontalScrollbar()}\n\n          {/* 吸底的分页器 */}\n          {props.paginationAffixedBottom ? (\n            <Affix offsetBottom={0} {...getAffixProps(props.paginationAffixedBottom)} ref={paginationAffixRef}>\n              {pagination}\n            </Affix>\n          ) : (\n            pagination\n          )}\n\n          {/* 调整列宽时的指示线。由于层级需要比较高，因而放在根节点，避免被吸顶表头覆盖。非必要情况，请勿调整辅助线位置 */}\n          <div ref={resizeLineRef} class={tableBaseClass.resizeLine} style={resizeLineStyle}></div>\n        </div>\n      );\n    };\n  },\n});\n"],"names":["useElementLazyRender","labelRef","lazyLoad","ioObserver","ref","showElement","handleLazyLoad","value","io","observe","onMounted","watch","onBeforeUnmount","_ioObserver$value","_ioObserver$value$uno","unobserve","call","_isSlot","s","Object","prototype","toString","_isVNode","BASE_TABLE_EVENTS","BASE_TABLE_ALL_EVENTS","ROW_LISTENERS","map","t","concat","defineComponent","name","props","_objectSpread","renderExpandedRow","Function","onLeafColumnsChange","thDraggable","Boolean","emits","setup","context","_toRefs","toRefs","renderTNode","useTNodeJSX","tableRef","tableElmRef","tableBodyRef","bottomContentRef","tableFootHeight","_useClassName","useClassName","classPrefix","virtualScrollClasses","tableLayoutClasses","tableBaseClass","tableColFixedClasses","_useStyle","useStyle","tableClasses","sizeClassNames","tableContentStyles","tableElementStyles","_useConfig","useConfig","locale","globalConfig","_useTableHeader","useTableHeader","isMultipleHeader","spansAndLeafNodes","thList","finalColumns","computed","_spansAndLeafNodes$va","leafColumns","columns","tableSize","_props2$size","size","_useElementLazyRender","paginationAffixRef","horizontalScrollAffixRef","headerTopAffixRef","footerBottomAffixRef","_useFixed","useFixed","scrollbarWidth","tableWidth","tableElmWidth","tableContentRef","isFixedHeader","isWidthOverflow","isFixedColumn","thWidthList","showColumnShadow","rowAndColFixedPosition","setData","refreshTable","setTableElmWidth","emitScrollEvent","setUseFixedTableElmRef","updateColumnFixedShadow","getThWidthList","updateThWidthList","addTableResizeObserver","updateTableAfterColumnResize","_useAffix","useAffix","affixHeaderRef","affixFooterRef","horizontalScrollbarRef","paginationRef","showAffixHeader","showAffixFooter","showAffixPagination","onHorizontalScroll","setTableContentRef","updateAffixHeaderOrFooter","_usePagination","usePagination","dataSource","innerPagination","isPaginateData","renderPagination","columnResizeParams","useColumnResize","onColumnResizeChange","resizeLineRef","resizeLineStyle","setEffectColMap","dynamicBaseTableClasses","_defineProperty","headerFixed","columnFixed","widthOverflow","multipleHeader","leftShadow","left","rightShadow","right","columnResizableTable","resizable","activeRowType","tableElmClasses","tableLayout","showRightDivider","bordered","dividerBottom","_bottomContentRef$val","_paginationRef$value","bottomRect","getBoundingClientRect","paginationRect","height","_useRowHighlight","useRowHighlight","tActiveRow","onHighlightRow","addHighlightKeyboardListener","removeHighlightKeyboardListener","_useHoverKeyboardEven","useHoverKeyboardEvent","hoverRow","needKeyboardRowHover","clearHoverRow","addRowHoverKeyboardListener","removeRowHoverKeyboardListener","tableRefTabIndex","data","_props2$onLeafColumns","immediate","onFixedChange","nextTick","syncThWidthList","throttle","virtualScrollParams","scroll","fixedRows","virtualConfig","useVirtualScrollNew","lastScrollY","onInnerVirtualScroll","e","target","srcElement","top","scrollTop","isVirtualScroll","handleScroll","getTFootHeight","_tableElmRef$value$qu","querySelector","scrollColumnIntoView","colKey","thDom","fixedThDom","querySelectorAll","totalWidth","i","len","length","width","domRect","contentRect","distance","scrollTo","behavior","footData","footerSummary","timer","setTimeout","clearTimeout","onTableFocus","onTableBlur","onInnerRowClick","ctx","_props2$onRowClick","onRowClick","_ref2","_ref3","_slicedToArray","emit","tableData","scrollToElement","params","index","_tableData$value","key","log","error","findIndex","item","get","rowKey","_tableBodyRef$value","_el$children","el","$el","row","children","_params$top","_params$behavior","offsetTop","scrollHeight","scrollBy","expose","_props2$allowResizeCo","_affixHeaderRef$value","_props2$footData","_tableFootHeight$valu","_tableFootHeight$valu2","_affixHeaderHeight$va","_tableContentRef$valu","_createVNode","columnResizable","allowResizeColumnWidth","warn","defaultColWidth","renderColGroup","isAffixHeader","arguments","undefined","col","style","formatCSSUnit","minWidth","renderAffixedHeader","showHeader","headerAffixedTop","Affix","_mergeProps","getAffixProps","affixHeaderWithWrap","_default","renderAffixedHorizontalScrollbar","horizontalScrollAffixedBottom","marginTop","obviousScrollbar","overflow","opacity","Number","headProps","maxHeight","ellipsisOverlayClassName","attach","IEHeaderWrap","getIEVersion","barWidth","affixHeaderHeight","_affixHeaderRef$value2","affixHeaderWrapHeight","headerOpacity","affixHeaderWrapHeightStyle","affixedLeftBorder","affixedHeader","affixedHeaderElm","THead","slots","affixedHeaderWrap","marginScrollbarWidth","showFooter","footerAffixedBottom","hasFooter","affixedFooter","affixedFooterWrap","affixedFooterElm","TFoot","rowAttributes","rowClassName","rowspanAndColspanInFooter","translate","virtualStyle","transform","tableBodyProps","tableElm","cellEmptyContent","tableContentElm","handleRowMounted","pick","extendTableProps","pagination","activeRow","tableContent","content","cursor","TBody","getCustomLoadingText","isFunction","loading","loadingContent","Loading","loadingProps","topContent","bottomContent","paginationWrap","bottom","scrollbarDivider","paginationAffixedBottom","resizeLine"],"mappings":"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"}