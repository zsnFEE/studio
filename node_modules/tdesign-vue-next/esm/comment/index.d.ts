import { TdCommentProps } from './type';
import './style';
export * from './type';
export type CommentProps = TdCommentProps;
export declare const Comment: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        actions: {
            type: import("vue").PropType<TdCommentProps["actions"]>;
        };
        author: {
            type: import("vue").PropType<TdCommentProps["author"]>;
        };
        avatar: {
            type: import("vue").PropType<TdCommentProps["avatar"]>;
        };
        content: {
            type: import("vue").PropType<TdCommentProps["content"]>;
        };
        datetime: {
            type: import("vue").PropType<TdCommentProps["datetime"]>;
        };
        quote: {
            type: import("vue").PropType<TdCommentProps["quote"]>;
        };
        reply: {
            type: import("vue").PropType<TdCommentProps["reply"]>;
        };
    }>>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        actions: {
            type: import("vue").PropType<TdCommentProps["actions"]>;
        };
        author: {
            type: import("vue").PropType<TdCommentProps["author"]>;
        };
        avatar: {
            type: import("vue").PropType<TdCommentProps["avatar"]>;
        };
        content: {
            type: import("vue").PropType<TdCommentProps["content"]>;
        };
        datetime: {
            type: import("vue").PropType<TdCommentProps["datetime"]>;
        };
        quote: {
            type: import("vue").PropType<TdCommentProps["quote"]>;
        };
        reply: {
            type: import("vue").PropType<TdCommentProps["reply"]>;
        };
    }>>, {}, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        actions: {
            type: import("vue").PropType<TdCommentProps["actions"]>;
        };
        author: {
            type: import("vue").PropType<TdCommentProps["author"]>;
        };
        avatar: {
            type: import("vue").PropType<TdCommentProps["avatar"]>;
        };
        content: {
            type: import("vue").PropType<TdCommentProps["content"]>;
        };
        datetime: {
            type: import("vue").PropType<TdCommentProps["datetime"]>;
        };
        quote: {
            type: import("vue").PropType<TdCommentProps["quote"]>;
        };
        reply: {
            type: import("vue").PropType<TdCommentProps["reply"]>;
        };
    }>>, () => JSX.Element, {}, {}, {}, {}>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    actions: {
        type: import("vue").PropType<TdCommentProps["actions"]>;
    };
    author: {
        type: import("vue").PropType<TdCommentProps["author"]>;
    };
    avatar: {
        type: import("vue").PropType<TdCommentProps["avatar"]>;
    };
    content: {
        type: import("vue").PropType<TdCommentProps["content"]>;
    };
    datetime: {
        type: import("vue").PropType<TdCommentProps["datetime"]>;
    };
    quote: {
        type: import("vue").PropType<TdCommentProps["quote"]>;
    };
    reply: {
        type: import("vue").PropType<TdCommentProps["reply"]>;
    };
}>>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & import("vue").Plugin;
export default Comment;
