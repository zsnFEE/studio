import { TdPopconfirmProps } from './type';
import './style';
export * from './type';
export type PopconfirmProps = TdPopconfirmProps;
export declare const Popconfirm: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        cancelBtn: {
            type: import("vue").PropType<TdPopconfirmProps["cancelBtn"]>;
            default: TdPopconfirmProps["cancelBtn"];
        };
        confirmBtn: {
            type: import("vue").PropType<TdPopconfirmProps["confirmBtn"]>;
            default: TdPopconfirmProps["confirmBtn"];
        };
        content: {
            type: import("vue").PropType<TdPopconfirmProps["content"]>;
        };
        default: {
            type: import("vue").PropType<TdPopconfirmProps["default"]>;
        };
        destroyOnClose: {
            type: BooleanConstructor;
            default: boolean;
        };
        icon: {
            type: import("vue").PropType<TdPopconfirmProps["icon"]>;
        };
        placement: {
            type: import("vue").PropType<TdPopconfirmProps["placement"]>;
            default: TdPopconfirmProps["placement"];
            validator(val: TdPopconfirmProps["placement"]): boolean;
        };
        popupProps: {
            type: import("vue").PropType<TdPopconfirmProps["popupProps"]>;
        };
        showArrow: {
            type: BooleanConstructor;
            default: boolean;
        };
        theme: {
            type: import("vue").PropType<TdPopconfirmProps["theme"]>;
            default: TdPopconfirmProps["theme"];
            validator(val: TdPopconfirmProps["theme"]): boolean;
        };
        triggerElement: {
            type: import("vue").PropType<TdPopconfirmProps["triggerElement"]>;
        };
        visible: {
            type: BooleanConstructor;
            default: any;
        };
        modelValue: {
            type: BooleanConstructor;
            default: any;
        };
        defaultVisible: BooleanConstructor;
        onCancel: import("vue").PropType<TdPopconfirmProps["onCancel"]>;
        onConfirm: import("vue").PropType<TdPopconfirmProps["onConfirm"]>;
        onVisibleChange: import("vue").PropType<TdPopconfirmProps["onVisibleChange"]>;
    }>>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        cancelBtn: {
            type: import("vue").PropType<TdPopconfirmProps["cancelBtn"]>;
            default: TdPopconfirmProps["cancelBtn"];
        };
        confirmBtn: {
            type: import("vue").PropType<TdPopconfirmProps["confirmBtn"]>;
            default: TdPopconfirmProps["confirmBtn"];
        };
        content: {
            type: import("vue").PropType<TdPopconfirmProps["content"]>;
        };
        default: {
            type: import("vue").PropType<TdPopconfirmProps["default"]>;
        };
        destroyOnClose: {
            type: BooleanConstructor;
            default: boolean;
        };
        icon: {
            type: import("vue").PropType<TdPopconfirmProps["icon"]>;
        };
        placement: {
            type: import("vue").PropType<TdPopconfirmProps["placement"]>;
            default: TdPopconfirmProps["placement"];
            validator(val: TdPopconfirmProps["placement"]): boolean;
        };
        popupProps: {
            type: import("vue").PropType<TdPopconfirmProps["popupProps"]>;
        };
        showArrow: {
            type: BooleanConstructor;
            default: boolean;
        };
        theme: {
            type: import("vue").PropType<TdPopconfirmProps["theme"]>;
            default: TdPopconfirmProps["theme"];
            validator(val: TdPopconfirmProps["theme"]): boolean;
        };
        triggerElement: {
            type: import("vue").PropType<TdPopconfirmProps["triggerElement"]>;
        };
        visible: {
            type: BooleanConstructor;
            default: any;
        };
        modelValue: {
            type: BooleanConstructor;
            default: any;
        };
        defaultVisible: BooleanConstructor;
        onCancel: import("vue").PropType<TdPopconfirmProps["onCancel"]>;
        onConfirm: import("vue").PropType<TdPopconfirmProps["onConfirm"]>;
        onVisibleChange: import("vue").PropType<TdPopconfirmProps["onVisibleChange"]>;
    }>>, {
        visible: boolean;
        theme: "default" | "warning" | "danger";
        modelValue: boolean;
        placement: "left" | "right" | "top" | "bottom" | "top-left" | "top-right" | "bottom-left" | "bottom-right" | "left-top" | "left-bottom" | "right-top" | "right-bottom";
        destroyOnClose: boolean;
        showArrow: boolean;
        defaultVisible: boolean;
        cancelBtn: import("..").SlotReturnValue | import("..").TdButtonProps;
        confirmBtn: import("..").SlotReturnValue | import("..").TdButtonProps;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        cancelBtn: {
            type: import("vue").PropType<TdPopconfirmProps["cancelBtn"]>;
            default: TdPopconfirmProps["cancelBtn"];
        };
        confirmBtn: {
            type: import("vue").PropType<TdPopconfirmProps["confirmBtn"]>;
            default: TdPopconfirmProps["confirmBtn"];
        };
        content: {
            type: import("vue").PropType<TdPopconfirmProps["content"]>;
        };
        default: {
            type: import("vue").PropType<TdPopconfirmProps["default"]>;
        };
        destroyOnClose: {
            type: BooleanConstructor;
            default: boolean;
        };
        icon: {
            type: import("vue").PropType<TdPopconfirmProps["icon"]>;
        };
        placement: {
            type: import("vue").PropType<TdPopconfirmProps["placement"]>;
            default: TdPopconfirmProps["placement"];
            validator(val: TdPopconfirmProps["placement"]): boolean;
        };
        popupProps: {
            type: import("vue").PropType<TdPopconfirmProps["popupProps"]>;
        };
        showArrow: {
            type: BooleanConstructor;
            default: boolean;
        };
        theme: {
            type: import("vue").PropType<TdPopconfirmProps["theme"]>;
            default: TdPopconfirmProps["theme"];
            validator(val: TdPopconfirmProps["theme"]): boolean;
        };
        triggerElement: {
            type: import("vue").PropType<TdPopconfirmProps["triggerElement"]>;
        };
        visible: {
            type: BooleanConstructor;
            default: any;
        };
        modelValue: {
            type: BooleanConstructor;
            default: any;
        };
        defaultVisible: BooleanConstructor;
        onCancel: import("vue").PropType<TdPopconfirmProps["onCancel"]>;
        onConfirm: import("vue").PropType<TdPopconfirmProps["onConfirm"]>;
        onVisibleChange: import("vue").PropType<TdPopconfirmProps["onVisibleChange"]>;
    }>>, () => JSX.Element, {}, {}, {}, {
        visible: boolean;
        theme: "default" | "warning" | "danger";
        modelValue: boolean;
        placement: "left" | "right" | "top" | "bottom" | "top-left" | "top-right" | "bottom-left" | "bottom-right" | "left-top" | "left-bottom" | "right-top" | "right-bottom";
        destroyOnClose: boolean;
        showArrow: boolean;
        defaultVisible: boolean;
        cancelBtn: import("..").SlotReturnValue | import("..").TdButtonProps;
        confirmBtn: import("..").SlotReturnValue | import("..").TdButtonProps;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    cancelBtn: {
        type: import("vue").PropType<TdPopconfirmProps["cancelBtn"]>;
        default: TdPopconfirmProps["cancelBtn"];
    };
    confirmBtn: {
        type: import("vue").PropType<TdPopconfirmProps["confirmBtn"]>;
        default: TdPopconfirmProps["confirmBtn"];
    };
    content: {
        type: import("vue").PropType<TdPopconfirmProps["content"]>;
    };
    default: {
        type: import("vue").PropType<TdPopconfirmProps["default"]>;
    };
    destroyOnClose: {
        type: BooleanConstructor;
        default: boolean;
    };
    icon: {
        type: import("vue").PropType<TdPopconfirmProps["icon"]>;
    };
    placement: {
        type: import("vue").PropType<TdPopconfirmProps["placement"]>;
        default: TdPopconfirmProps["placement"];
        validator(val: TdPopconfirmProps["placement"]): boolean;
    };
    popupProps: {
        type: import("vue").PropType<TdPopconfirmProps["popupProps"]>;
    };
    showArrow: {
        type: BooleanConstructor;
        default: boolean;
    };
    theme: {
        type: import("vue").PropType<TdPopconfirmProps["theme"]>;
        default: TdPopconfirmProps["theme"];
        validator(val: TdPopconfirmProps["theme"]): boolean;
    };
    triggerElement: {
        type: import("vue").PropType<TdPopconfirmProps["triggerElement"]>;
    };
    visible: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultVisible: BooleanConstructor;
    onCancel: import("vue").PropType<TdPopconfirmProps["onCancel"]>;
    onConfirm: import("vue").PropType<TdPopconfirmProps["onConfirm"]>;
    onVisibleChange: import("vue").PropType<TdPopconfirmProps["onVisibleChange"]>;
}>>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {
    visible: boolean;
    theme: "default" | "warning" | "danger";
    modelValue: boolean;
    placement: "left" | "right" | "top" | "bottom" | "top-left" | "top-right" | "bottom-left" | "bottom-right" | "left-top" | "left-bottom" | "right-top" | "right-bottom";
    destroyOnClose: boolean;
    showArrow: boolean;
    defaultVisible: boolean;
    cancelBtn: import("..").SlotReturnValue | import("..").TdButtonProps;
    confirmBtn: import("..").SlotReturnValue | import("..").TdButtonProps;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & import("vue").Plugin;
export default Popconfirm;
