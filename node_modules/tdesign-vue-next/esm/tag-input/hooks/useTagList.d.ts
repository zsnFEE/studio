import { TagInputValue, TagInputChangeContext } from '../type';
import { TagInputProps } from '../types';
import { InputValue } from '../../input';
export type ChangeParams = [TagInputChangeContext];
export declare function useTagList(props: TagInputProps): {
    tagValue: import("vue").ComputedRef<TagInputValue>;
    clearAll: (context: {
        e: MouseEvent;
    }) => void;
    onClose: (p: {
        e?: MouseEvent;
        index: number;
    }) => void;
    onInnerEnter: (value: string, context: {
        e: KeyboardEvent;
    }) => void;
    onInputBackspaceKeyUp: (value: InputValue) => void;
    onInputBackspaceKeyDown: (value: InputValue, context: {
        e: KeyboardEvent;
    }) => void;
    renderLabel: ({ displayNode, label }: {
        displayNode: any;
        label: any;
    }) => any[];
};
