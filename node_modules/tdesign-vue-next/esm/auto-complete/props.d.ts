import { TdAutoCompleteProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    autofocus: BooleanConstructor;
    borderless: BooleanConstructor;
    clearable: BooleanConstructor;
    default: {
        type: PropType<TdAutoCompleteProps["default"]>;
    };
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    empty: {
        type: PropType<TdAutoCompleteProps["empty"]>;
    };
    filter: {
        type: PropType<TdAutoCompleteProps["filter"]>;
    };
    filterable: {
        type: BooleanConstructor;
        default: boolean;
    };
    highlightKeyword: {
        type: BooleanConstructor;
        default: boolean;
    };
    inputProps: {
        type: PropType<TdAutoCompleteProps["inputProps"]>;
    };
    options: {
        type: PropType<TdAutoCompleteProps["options"]>;
    };
    panelBottomContent: {
        type: PropType<TdAutoCompleteProps["panelBottomContent"]>;
    };
    panelTopContent: {
        type: PropType<TdAutoCompleteProps["panelTopContent"]>;
    };
    placeholder: {
        type: StringConstructor;
        default: any;
    };
    popupProps: {
        type: PropType<TdAutoCompleteProps["popupProps"]>;
    };
    readonly: {
        type: BooleanConstructor;
        default: any;
    };
    size: {
        type: PropType<TdAutoCompleteProps["size"]>;
        default: TdAutoCompleteProps["size"];
        validator(val: TdAutoCompleteProps["size"]): boolean;
    };
    status: {
        type: PropType<TdAutoCompleteProps["status"]>;
        default: TdAutoCompleteProps["status"];
        validator(val: TdAutoCompleteProps["status"]): boolean;
    };
    textareaProps: {
        type: PropType<TdAutoCompleteProps["textareaProps"]>;
    };
    tips: {
        type: PropType<TdAutoCompleteProps["tips"]>;
    };
    triggerElement: {
        type: PropType<TdAutoCompleteProps["triggerElement"]>;
    };
    value: {
        type: StringConstructor;
        default: any;
    };
    modelValue: {
        type: StringConstructor;
        default: any;
    };
    defaultValue: {
        type: StringConstructor;
        default: string;
    };
    onBlur: PropType<TdAutoCompleteProps["onBlur"]>;
    onChange: PropType<TdAutoCompleteProps["onChange"]>;
    onClear: PropType<TdAutoCompleteProps["onClear"]>;
    onCompositionend: PropType<TdAutoCompleteProps["onCompositionend"]>;
    onCompositionstart: PropType<TdAutoCompleteProps["onCompositionstart"]>;
    onEnter: PropType<TdAutoCompleteProps["onEnter"]>;
    onFocus: PropType<TdAutoCompleteProps["onFocus"]>;
    onSelect: PropType<TdAutoCompleteProps["onSelect"]>;
};
export default _default;
