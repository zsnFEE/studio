import { TdTimePickerProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    allowInput: BooleanConstructor;
    borderless: BooleanConstructor;
    clearable: BooleanConstructor;
    disableTime: {
        type: PropType<TdTimePickerProps["disableTime"]>;
    };
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    format: {
        type: StringConstructor;
        default: string;
    };
    hideDisabledTime: {
        type: BooleanConstructor;
        default: boolean;
    };
    inputProps: {
        type: PropType<TdTimePickerProps["inputProps"]>;
    };
    label: {
        type: PropType<TdTimePickerProps["label"]>;
    };
    placeholder: {
        type: StringConstructor;
        default: any;
    };
    popupProps: {
        type: PropType<TdTimePickerProps["popupProps"]>;
    };
    presets: {
        type: PropType<TdTimePickerProps["presets"]>;
    };
    readonly: {
        type: BooleanConstructor;
        default: any;
    };
    selectInputProps: {
        type: PropType<TdTimePickerProps["selectInputProps"]>;
    };
    size: {
        type: PropType<TdTimePickerProps["size"]>;
        default: TdTimePickerProps["size"];
        validator(val: TdTimePickerProps["size"]): boolean;
    };
    status: {
        type: PropType<TdTimePickerProps["status"]>;
        default: TdTimePickerProps["status"];
        validator(val: TdTimePickerProps["status"]): boolean;
    };
    steps: {
        type: PropType<TdTimePickerProps["steps"]>;
        default: () => TdTimePickerProps["steps"];
    };
    tips: {
        type: PropType<TdTimePickerProps["tips"]>;
    };
    value: {
        type: PropType<TdTimePickerProps["value"]>;
        default: TdTimePickerProps["value"];
    };
    modelValue: {
        type: PropType<TdTimePickerProps["value"]>;
        default: TdTimePickerProps["value"];
    };
    defaultValue: {
        type: PropType<TdTimePickerProps["defaultValue"]>;
        default: TdTimePickerProps["defaultValue"];
    };
    valueDisplay: {
        type: PropType<TdTimePickerProps["valueDisplay"]>;
    };
    onBlur: PropType<TdTimePickerProps["onBlur"]>;
    onChange: PropType<TdTimePickerProps["onChange"]>;
    onClear: PropType<TdTimePickerProps["onClear"]>;
    onClose: PropType<TdTimePickerProps["onClose"]>;
    onConfirm: PropType<TdTimePickerProps["onConfirm"]>;
    onFocus: PropType<TdTimePickerProps["onFocus"]>;
    onInput: PropType<TdTimePickerProps["onInput"]>;
    onOpen: PropType<TdTimePickerProps["onOpen"]>;
    onPick: PropType<TdTimePickerProps["onPick"]>;
};
export default _default;
