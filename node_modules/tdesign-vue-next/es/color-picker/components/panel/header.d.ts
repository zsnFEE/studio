import { PropType } from 'vue';
import { TdColorModes } from '../../types';
declare const _default: import("vue").DefineComponent<{
    mode: {
        type: PropType<TdColorModes>;
        default: string;
    };
    togglePopup: {
        type: FunctionConstructor;
    };
    onModeChange: {
        type: FunctionConstructor;
        default: () => () => void;
    };
    colorModes: {
        type: PropType<import("../..").TdColorPickerPanelProps["colorModes"]>;
        default: () => import("../..").TdColorPickerPanelProps["colorModes"];
    };
    disabled: BooleanConstructor;
    enableAlpha: BooleanConstructor;
    enableMultipleGradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    format: {
        type: PropType<import("../..").TdColorPickerPanelProps["format"]>;
        default: import("../..").TdColorPickerPanelProps["format"];
        validator(val: import("../..").TdColorPickerPanelProps["format"]): boolean;
    };
    recentColors: {
        type: PropType<import("../..").TdColorPickerPanelProps["recentColors"]>;
        default: import("../..").TdColorPickerPanelProps["recentColors"];
    };
    defaultRecentColors: {
        type: PropType<import("../..").TdColorPickerPanelProps["defaultRecentColors"]>;
        default: () => import("../..").TdColorPickerPanelProps["defaultRecentColors"];
    };
    showPrimaryColorPreview: {
        type: BooleanConstructor;
        default: boolean;
    };
    swatchColors: {
        type: PropType<import("../..").TdColorPickerPanelProps["swatchColors"]>;
    };
    value: {
        type: StringConstructor;
        default: any;
    };
    modelValue: {
        type: StringConstructor;
        default: any;
    };
    defaultValue: {
        type: StringConstructor;
        default: string;
    };
    onChange: PropType<import("../..").TdColorPickerPanelProps["onChange"]>;
    onPaletteBarChange: PropType<import("../..").TdColorPickerPanelProps["onPaletteBarChange"]>;
    onRecentColorsChange: PropType<import("../..").TdColorPickerPanelProps["onRecentColorsChange"]>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    mode: {
        type: PropType<TdColorModes>;
        default: string;
    };
    togglePopup: {
        type: FunctionConstructor;
    };
    onModeChange: {
        type: FunctionConstructor;
        default: () => () => void;
    };
    colorModes: {
        type: PropType<import("../..").TdColorPickerPanelProps["colorModes"]>;
        default: () => import("../..").TdColorPickerPanelProps["colorModes"];
    };
    disabled: BooleanConstructor;
    enableAlpha: BooleanConstructor;
    enableMultipleGradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    format: {
        type: PropType<import("../..").TdColorPickerPanelProps["format"]>;
        default: import("../..").TdColorPickerPanelProps["format"];
        validator(val: import("../..").TdColorPickerPanelProps["format"]): boolean;
    };
    recentColors: {
        type: PropType<import("../..").TdColorPickerPanelProps["recentColors"]>;
        default: import("../..").TdColorPickerPanelProps["recentColors"];
    };
    defaultRecentColors: {
        type: PropType<import("../..").TdColorPickerPanelProps["defaultRecentColors"]>;
        default: () => import("../..").TdColorPickerPanelProps["defaultRecentColors"];
    };
    showPrimaryColorPreview: {
        type: BooleanConstructor;
        default: boolean;
    };
    swatchColors: {
        type: PropType<import("../..").TdColorPickerPanelProps["swatchColors"]>;
    };
    value: {
        type: StringConstructor;
        default: any;
    };
    modelValue: {
        type: StringConstructor;
        default: any;
    };
    defaultValue: {
        type: StringConstructor;
        default: string;
    };
    onChange: PropType<import("../..").TdColorPickerPanelProps["onChange"]>;
    onPaletteBarChange: PropType<import("../..").TdColorPickerPanelProps["onPaletteBarChange"]>;
    onRecentColorsChange: PropType<import("../..").TdColorPickerPanelProps["onRecentColorsChange"]>;
}>>, {
    disabled: boolean;
    value: string;
    format: "HEX" | "RGB" | "HSL" | "HSV" | "CMYK" | "CSS" | "HEX8" | "RGBA" | "HSLA" | "HSVA";
    mode: TdColorModes;
    defaultValue: string;
    modelValue: string;
    colorModes: ("monochrome" | "linear-gradient")[];
    recentColors: boolean | string[];
    defaultRecentColors: boolean | string[];
    onModeChange: Function;
    enableAlpha: boolean;
    enableMultipleGradient: boolean;
    showPrimaryColorPreview: boolean;
}, {}>;
export default _default;
