import { TdGuideProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    counter: {
        type: PropType<TdGuideProps["counter"]>;
    };
    current: {
        type: NumberConstructor;
        default: any;
    };
    modelValue: {
        type: NumberConstructor;
        default: any;
    };
    defaultCurrent: {
        type: NumberConstructor;
    };
    finishButtonProps: {
        type: PropType<TdGuideProps["finishButtonProps"]>;
    };
    hideCounter: BooleanConstructor;
    hidePrev: BooleanConstructor;
    hideSkip: BooleanConstructor;
    highlightPadding: {
        type: NumberConstructor;
        default: number;
    };
    mode: {
        type: PropType<TdGuideProps["mode"]>;
        default: TdGuideProps["mode"];
        validator(val: TdGuideProps["mode"]): boolean;
    };
    nextButtonProps: {
        type: PropType<TdGuideProps["nextButtonProps"]>;
    };
    prevButtonProps: {
        type: PropType<TdGuideProps["prevButtonProps"]>;
    };
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    skipButtonProps: {
        type: PropType<TdGuideProps["skipButtonProps"]>;
    };
    steps: {
        type: PropType<TdGuideProps["steps"]>;
    };
    zIndex: {
        type: NumberConstructor;
        default: number;
    };
    onChange: PropType<TdGuideProps["onChange"]>;
    onFinish: PropType<TdGuideProps["onFinish"]>;
    onNextStepClick: PropType<TdGuideProps["onNextStepClick"]>;
    onPrevStepClick: PropType<TdGuideProps["onPrevStepClick"]>;
    onSkip: PropType<TdGuideProps["onSkip"]>;
};
export default _default;
