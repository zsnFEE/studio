import { TdAvatarProps } from './type';
declare const _default: import("vue").DefineComponent<{
    alt: {
        type: StringConstructor;
        default: string;
    };
    content: {
        type: import("vue").PropType<TdAvatarProps["content"]>;
    };
    default: {
        type: import("vue").PropType<TdAvatarProps["default"]>;
    };
    hideOnLoadFailed: BooleanConstructor;
    icon: {
        type: import("vue").PropType<TdAvatarProps["icon"]>;
    };
    image: {
        type: StringConstructor;
        default: string;
    };
    imageProps: {
        type: import("vue").PropType<TdAvatarProps["imageProps"]>;
    };
    shape: {
        type: import("vue").PropType<TdAvatarProps["shape"]>;
        default: TdAvatarProps["shape"];
        validator(val: TdAvatarProps["shape"]): boolean;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    onError: import("vue").PropType<TdAvatarProps["onError"]>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    alt: {
        type: StringConstructor;
        default: string;
    };
    content: {
        type: import("vue").PropType<TdAvatarProps["content"]>;
    };
    default: {
        type: import("vue").PropType<TdAvatarProps["default"]>;
    };
    hideOnLoadFailed: BooleanConstructor;
    icon: {
        type: import("vue").PropType<TdAvatarProps["icon"]>;
    };
    image: {
        type: StringConstructor;
        default: string;
    };
    imageProps: {
        type: import("vue").PropType<TdAvatarProps["imageProps"]>;
    };
    shape: {
        type: import("vue").PropType<TdAvatarProps["shape"]>;
        default: TdAvatarProps["shape"];
        validator(val: TdAvatarProps["shape"]): boolean;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    onError: import("vue").PropType<TdAvatarProps["onError"]>;
}>>, {
    image: string;
    size: string;
    alt: string;
    shape: import("..").ShapeEnum;
    hideOnLoadFailed: boolean;
}, {}>;
export default _default;
