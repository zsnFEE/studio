import { PropType } from 'vue';
import { TdDropdownProps } from '../dropdown/type';
declare const _default: import("vue").DefineComponent<{
    maxColumnWidth: {
        type: PropType<TdDropdownProps["maxColumnWidth"]>;
        default: number;
    };
    minColumnWidth: {
        type: PropType<TdDropdownProps["minColumnWidth"]>;
        default: number;
    };
    isSubmenu: BooleanConstructor;
    active: BooleanConstructor;
    content: {
        type: PropType<import(".").TdDropdownItemProps["content"]>;
        default: string;
    };
    disabled: BooleanConstructor;
    divider: BooleanConstructor;
    prefixIcon: {
        type: PropType<import(".").TdDropdownItemProps["prefixIcon"]>;
    };
    theme: {
        type: PropType<import(".").TdDropdownItemProps["theme"]>;
        default: import(".").TdDropdownItemProps["theme"];
        validator(val: import(".").TdDropdownItemProps["theme"]): boolean;
    };
    value: {
        type: PropType<import(".").TdDropdownItemProps["value"]>;
    };
    onClick: PropType<import(".").TdDropdownItemProps["onClick"]>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    maxColumnWidth: {
        type: PropType<TdDropdownProps["maxColumnWidth"]>;
        default: number;
    };
    minColumnWidth: {
        type: PropType<TdDropdownProps["minColumnWidth"]>;
        default: number;
    };
    isSubmenu: BooleanConstructor;
    active: BooleanConstructor;
    content: {
        type: PropType<import(".").TdDropdownItemProps["content"]>;
        default: string;
    };
    disabled: BooleanConstructor;
    divider: BooleanConstructor;
    prefixIcon: {
        type: PropType<import(".").TdDropdownItemProps["prefixIcon"]>;
    };
    theme: {
        type: PropType<import(".").TdDropdownItemProps["theme"]>;
        default: import(".").TdDropdownItemProps["theme"];
        validator(val: import(".").TdDropdownItemProps["theme"]): boolean;
    };
    value: {
        type: PropType<import(".").TdDropdownItemProps["value"]>;
    };
    onClick: PropType<import(".").TdDropdownItemProps["onClick"]>;
}>>, {
    disabled: boolean;
    divider: boolean;
    active: boolean;
    theme: import(".").DropdownItemTheme;
    content: string | ((h: typeof import("vue").h) => import("..").TNodeReturnValue);
    maxColumnWidth: string | number;
    minColumnWidth: string | number;
    isSubmenu: boolean;
}, {}>;
export default _default;
