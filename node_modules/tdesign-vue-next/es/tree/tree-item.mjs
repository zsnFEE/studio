/**
 * tdesign v1.15.2
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-0bd8597f.mjs';
import { TreeItemDefinition, useRipple, getCreateElement } from './utils/adapt.mjs';
import useItemState from './hooks/useItemState.mjs';
import useTreeItem from './hooks/useTreeItem.mjs';
import { defineComponent, ref } from 'vue';
import '../_chunks/dep-612a2c2b.mjs';
import '../_chunks/dep-15464fee.mjs';
import '../_chunks/dep-465c43e8.mjs';
import 'lodash-es';
import '../_chunks/dep-d0add92f.mjs';
import '../_chunks/dep-32b59907.mjs';
import '../_chunks/dep-d58b61b6.mjs';
import '../_chunks/dep-779bddf7.mjs';
import '../config-provider/hooks/useConfig.mjs';
import '../config-provider/utils/context.mjs';
import '../_chunks/dep-afae046d.mjs';
import '../_chunks/dep-8a6c1499.mjs';
import '../_chunks/dep-5c28ada1.mjs';
import '../_chunks/dep-614f307d.mjs';
import '../_chunks/dep-d913bc66.mjs';
import '../_chunks/dep-1690abc9.mjs';
import '../_chunks/dep-62c11543.mjs';
import '../_chunks/dep-27c2b283.mjs';
import '../_chunks/dep-67238d91.mjs';
import 'tdesign-icons-vue-next';
import '../checkbox/index.mjs';
import '../checkbox/checkbox.mjs';
import '../checkbox/props.mjs';
import '../checkbox/consts/index.mjs';
import '../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../checkbox/hooks/useKeyboardEvent.mjs';
import '../checkbox/group.mjs';
import '../checkbox/checkbox-group-props.mjs';
import './style/css.mjs';
import '../loading/index.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_chunks/dep-6b6765a0.mjs';
import '../_chunks/dep-3ea2b330.mjs';
import '../loading/props.mjs';
import '../_chunks/dep-517a8ba2.mjs';
import '../_chunks/dep-40c5ec80.mjs';
import '../_chunks/dep-6686ef20.mjs';
import './hooks/useItemEvents.mjs';
import './hooks/useRenderIcon.mjs';
import './utils/index.mjs';
import './hooks/useRenderLabel.mjs';
import './hooks/useRenderLine.mjs';
import './hooks/useRenderOperations.mjs';
import './hooks/useDraggable.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var treeItemProps = {
  stateId: {
    type: String
  },
  itemKey: {
    type: String
  },
  rowIndex: {
    type: Number
  },
  treeScope: {
    type: Object
  }
};
var TreeItem = defineComponent(_objectSpread(_objectSpread({
  props: treeItemProps
}, TreeItemDefinition), {}, {
  setup: function setup(props, context) {
    var _useItemState = useItemState(props, context),
      state = _useItemState.state;
    var treeItemRef = state.treeItemRef;
    var label = ref();
    useRipple(label);
    var _useTreeItem = useTreeItem(state),
      renderItemNode = _useTreeItem.renderItemNode;
    return {
      treeItemRef: treeItemRef,
      renderItemNode: renderItemNode
    };
  },
  render: function render(h) {
    var createElement = getCreateElement(h);
    if (typeof this.renderItemNode === "function") {
      return this.renderItemNode(createElement);
    }
    return null;
  }
}));

export { TreeItem as default, treeItemProps };
//# sourceMappingURL=tree-item.mjs.map
