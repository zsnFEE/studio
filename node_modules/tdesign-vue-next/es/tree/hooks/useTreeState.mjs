/**
 * tdesign v1.15.2
 * (c) 2025 tdesign
 * @license MIT
 */

import { useVModel } from '../utils/adapt.mjs';
import { ref, toRefs } from 'vue';
import '../../_chunks/dep-465c43e8.mjs';
import 'lodash-es';
import '../../_chunks/dep-d0add92f.mjs';
import '../../_chunks/dep-32b59907.mjs';
import '../../_chunks/dep-15464fee.mjs';
import '../../_chunks/dep-d58b61b6.mjs';
import '../../_chunks/dep-779bddf7.mjs';
import '../../config-provider/hooks/useConfig.mjs';
import '../../config-provider/utils/context.mjs';
import '../../_chunks/dep-afae046d.mjs';
import '../../_chunks/dep-8a6c1499.mjs';
import '../../_chunks/dep-5c28ada1.mjs';
import '../../_chunks/dep-614f307d.mjs';
import '../../_chunks/dep-d913bc66.mjs';
import '../../_chunks/dep-1690abc9.mjs';
import '../../_chunks/dep-62c11543.mjs';
import '../../_chunks/dep-27c2b283.mjs';
import '../../_chunks/dep-612a2c2b.mjs';
import '../../_chunks/dep-0bd8597f.mjs';
import '../../_chunks/dep-67238d91.mjs';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../checkbox/props.mjs';
import '../../checkbox/consts/index.mjs';
import '../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../checkbox/group.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import './style/css.mjs';
import '../../loading/index.mjs';
import '../../loading/directive.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_chunks/dep-6b6765a0.mjs';
import '../../_chunks/dep-3ea2b330.mjs';
import '../../loading/props.mjs';
import '../../_chunks/dep-517a8ba2.mjs';
import '../../_chunks/dep-40c5ec80.mjs';
import '../../_chunks/dep-6686ef20.mjs';

function useTreeState(props, context) {
  var treeContentRef = ref();
  var nodes = ref([]);
  var allNodes = ref([]);
  var isScrolling = ref(false);
  var refProps = toRefs(props);
  var vmValue = useVModel(props, refProps, "value", "defaultValue", "onChange", "change");
  var vmActived = useVModel(props, refProps, "actived", "defaultActived", "onActive", "active");
  var vmExpanded = useVModel(props, refProps, "expanded", "defaultExpanded", "onExpand", "expand");
  function setStore(store) {
    state.store = store;
    state.scope.store = store;
    allNodes.value = store.getNodes();
  }
  var state = {
    props: props,
    context: context,
    store: null,
    treeContentRef: treeContentRef,
    nodes: nodes,
    allNodes: allNodes,
    isScrolling: isScrolling,
    mouseEvent: null,
    virtualConfig: null,
    scope: {
      store: null,
      treeContentRef: treeContentRef,
      treeProps: props,
      scopedSlots: {},
      virtualConfig: null
    },
    setStore: setStore,
    refProps: refProps,
    vmValue: vmValue,
    vmActived: vmActived,
    vmExpanded: vmExpanded
  };
  return {
    state: state
  };
}

export { useTreeState as default };
//# sourceMappingURL=useTreeState.mjs.map
