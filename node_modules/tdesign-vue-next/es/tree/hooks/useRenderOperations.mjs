/**
 * tdesign v1.15.2
 * (c) 2025 tdesign
 * @license MIT
 */

import { createVNode } from 'vue';
import '../utils/adapt.mjs';
import { getTNode } from '../utils/index.mjs';
import { u as usePrefixClass } from '../../_chunks/dep-465c43e8.mjs';
import '../../_chunks/dep-d58b61b6.mjs';
import '../../_chunks/dep-779bddf7.mjs';
import 'lodash-es';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../_chunks/dep-614f307d.mjs';
import '../../_chunks/dep-32b59907.mjs';
import '../../_chunks/dep-0bd8597f.mjs';
import '../../_chunks/dep-612a2c2b.mjs';
import '../../_chunks/dep-15464fee.mjs';
import '../../checkbox/props.mjs';
import '../../checkbox/consts/index.mjs';
import '../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../_chunks/dep-d913bc66.mjs';
import '../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../_chunks/dep-67238d91.mjs';
import '../../_chunks/dep-d0add92f.mjs';
import '../../config-provider/hooks/useConfig.mjs';
import '../../config-provider/utils/context.mjs';
import '../../_chunks/dep-afae046d.mjs';
import '../../_chunks/dep-8a6c1499.mjs';
import '../../_chunks/dep-5c28ada1.mjs';
import '../../_chunks/dep-1690abc9.mjs';
import '../../_chunks/dep-62c11543.mjs';
import '../../_chunks/dep-27c2b283.mjs';
import '../../checkbox/group.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import './style/css.mjs';
import '../../loading/index.mjs';
import '../../loading/directive.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_chunks/dep-6b6765a0.mjs';
import '../../_chunks/dep-3ea2b330.mjs';
import '../../loading/props.mjs';
import '../../_chunks/dep-517a8ba2.mjs';
import '../../_chunks/dep-40c5ec80.mjs';
import '../../_chunks/dep-6686ef20.mjs';

function useRenderOperations(state) {
  var componentName = usePrefixClass("tree").value;
  var renderOperations = function renderOperations(h) {
    var node = state.node,
      treeScope = state.treeScope;
    var scopedSlots = treeScope.scopedSlots;
    var treeProps = (treeScope === null || treeScope === void 0 ? void 0 : treeScope.treeProps) || {};
    var operations = treeProps.operations;
    var opNode = null;
    if (scopedSlots !== null && scopedSlots !== void 0 && scopedSlots.operations) {
      opNode = scopedSlots.operations({
        node: node === null || node === void 0 ? void 0 : node.getModel()
      });
    } else {
      opNode = getTNode(operations, {
        createElement: h,
        node: node
      });
    }
    if (opNode) {
      var _opNode = function () {
        return opNode;
      }();
      opNode = createVNode("span", {
        "class": "".concat(componentName, "__operations"),
        "ignore": "active,expand"
      }, [opNode]);
    }
    return opNode;
  };
  return {
    renderOperations: renderOperations
  };
}

export { useRenderOperations as default };
//# sourceMappingURL=useRenderOperations.mjs.map
