{"version":3,"file":"props.mjs","sources":["../../../components/date-picker/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdDatePickerProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 是否允许输入日期 */\n  allowInput: Boolean,\n  /** 无边框模式 */\n  borderless: Boolean,\n  /** 是否显示清除按钮 */\n  clearable: Boolean,\n  /** 时间选择器默认值，当 value/defaultValue 未设置值时有效 */\n  defaultTime: {\n    type: String,\n    default: '00:00:00',\n  },\n  /** 禁用日期，示例：['A', 'B'] 表示日期 A 和日期 B 会被禁用。`{ from: 'A', to: 'B' }` 表示在 A 到 B 之间的日期会被禁用。`{ before: 'A', after: 'B' }` 表示在 A 之前和在 B 之后的日期都会被禁用。其中 A = '2021-01-01'，B = '2021-02-01'。值类型为 Function 则表示返回值为 true 的日期会被禁用 */\n  disableDate: {\n    type: [Object, Array, Function] as PropType<TdDatePickerProps['disableDate']>,\n  },\n  /** 是否禁用组件 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 是否显示时间选择 */\n  enableTimePicker: Boolean,\n  /** 第一天从星期几开始 */\n  firstDayOfWeek: {\n    type: Number,\n    validator(val: TdDatePickerProps['firstDayOfWeek']): boolean {\n      if (!val) return true;\n      return [1, 2, 3, 4, 5, 6, 7].includes(val);\n    },\n  },\n  /** 仅用于格式化日期显示的格式，不影响日期值。注意和 `valueType` 的区别，`valueType`会直接决定日期值 `value` 的格式。全局配置默认为：'YYYY-MM-DD'，[详细文档](https://day.js.org/docs/en/display/format) */\n  format: {\n    type: String,\n    default: undefined,\n  },\n  /** 透传给输入框（Input）组件的参数 */\n  inputProps: {\n    type: Object as PropType<TdDatePickerProps['inputProps']>,\n  },\n  /** 左侧文本 */\n  label: {\n    type: [String, Function] as PropType<TdDatePickerProps['label']>,\n  },\n  /** 选择器模式 */\n  mode: {\n    type: String as PropType<TdDatePickerProps['mode']>,\n    default: 'date' as TdDatePickerProps['mode'],\n    validator(val: TdDatePickerProps['mode']): boolean {\n      if (!val) return true;\n      return ['year', 'quarter', 'month', 'week', 'date'].includes(val);\n    },\n  },\n  /** 支持多选日期，但不支持在range-picker中，或与enableTimePicker、allowInput 一起使用 */\n  multiple: Boolean,\n  /** 决定在日期时间选择器的场景下是否需要点击确认按钮才完成选择动作，默认为`true` */\n  needConfirm: {\n    type: Boolean,\n    default: true,\n  },\n  /** 占位符 */\n  placeholder: {\n    type: [String, Array] as PropType<TdDatePickerProps['placeholder']>,\n    default: undefined as TdDatePickerProps['placeholder'],\n  },\n  /** 透传给 popup 组件的参数 */\n  popupProps: {\n    type: Object as PropType<TdDatePickerProps['popupProps']>,\n  },\n  /** 用于自定义组件前置图标 */\n  prefixIcon: {\n    type: Function as PropType<TdDatePickerProps['prefixIcon']>,\n  },\n  /** 预设快捷日期选择，示例：`{ '元旦': '2021-01-01', '昨天':  dayjs().subtract(1, 'day').format('YYYY-MM-DD'), '特定日期': () => ['2021-02-01'] }` */\n  presets: {\n    type: Object as PropType<TdDatePickerProps['presets']>,\n  },\n  /** 预设面板展示区域（包含确定按钮） */\n  presetsPlacement: {\n    type: String as PropType<TdDatePickerProps['presetsPlacement']>,\n    default: 'bottom' as TdDatePickerProps['presetsPlacement'],\n    validator(val: TdDatePickerProps['presetsPlacement']): boolean {\n      if (!val) return true;\n      return ['left', 'top', 'right', 'bottom'].includes(val);\n    },\n  },\n  /** 是否只读，优先级大于 allowInput */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 透传 SelectInput 筛选器输入框组件的全部属性 */\n  selectInputProps: {\n    type: Object as PropType<TdDatePickerProps['selectInputProps']>,\n  },\n  /** 输入框尺寸 */\n  size: {\n    type: String as PropType<TdDatePickerProps['size']>,\n    default: 'medium' as TdDatePickerProps['size'],\n    validator(val: TdDatePickerProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdDatePickerProps['status']>,\n    default: 'default' as TdDatePickerProps['status'],\n    validator(val: TdDatePickerProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 用于自定义组件后置图标 */\n  suffixIcon: {\n    type: Function as PropType<TdDatePickerProps['suffixIcon']>,\n  },\n  /** 透传 TimePicker 组件属性 */\n  timePickerProps: {\n    type: Object as PropType<TdDatePickerProps['timePickerProps']>,\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdDatePickerProps['tips']>,\n  },\n  /** 选中值 */\n  value: {\n    type: [String, Number, Array, Date] as PropType<TdDatePickerProps['value']>,\n    default: undefined as TdDatePickerProps['value'],\n  },\n  modelValue: {\n    type: [String, Number, Array, Date] as PropType<TdDatePickerProps['value']>,\n    default: undefined as TdDatePickerProps['value'],\n  },\n  /** 选中值，非受控属性 */\n  defaultValue: {\n    type: [String, Number, Array, Date] as PropType<TdDatePickerProps['defaultValue']>,\n    default: '' as TdDatePickerProps['defaultValue'],\n  },\n  /** 自定义选中项呈现的内容 */\n  valueDisplay: {\n    type: [String, Function] as PropType<TdDatePickerProps['valueDisplay']>,\n  },\n  /** 用于格式化日期的值，仅支持部分格式，时间戳、日期等。⚠️ `YYYYMMDD` 这种格式不支持，请勿使用，如果希望支持可以给 `dayjs` 提个 PR。注意和 `format` 的区别，`format` 仅用于处理日期在页面中呈现的格式。`ValueTypeEnum` 即将废弃，请更为使用 `DatePickerValueType` */\n  valueType: {\n    type: String as PropType<TdDatePickerProps['valueType']>,\n    default: '' as TdDatePickerProps['valueType'],\n  },\n  /** 当输入框失去焦点时触发 */\n  onBlur: Function as PropType<TdDatePickerProps['onBlur']>,\n  /** 选中值发生变化时触发 */\n  onChange: Function as PropType<TdDatePickerProps['onChange']>,\n  /** 如果存在“确定”按钮，则点击“确定”按钮时触发 */\n  onConfirm: Function as PropType<TdDatePickerProps['onConfirm']>,\n  /** 输入框获得焦点时触发 */\n  onFocus: Function as PropType<TdDatePickerProps['onFocus']>,\n  /** 面板选中值后触发 */\n  onPick: Function as PropType<TdDatePickerProps['onPick']>,\n  /** 点击预设按钮后触发 */\n  onPresetClick: Function as PropType<TdDatePickerProps['onPresetClick']>,\n};\n"],"names":["allowInput","Boolean","borderless","clearable","defaultTime","type","String","disableDate","Object","Array","Function","disabled","enableTimePicker","firstDayOfWeek","Number","validator","val","includes","format","inputProps","label","mode","multiple","needConfirm","placeholder","popupProps","prefixIcon","presets","presetsPlacement","readonly","selectInputProps","size","status","suffixIcon","timePickerProps","tips","value","Date","modelValue","defaultValue","valueDisplay","valueType","onBlur","onChange","onConfirm","onFocus","onPick","onPresetClick"],"mappings":"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"}