import { TdButtonProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    block: BooleanConstructor;
    content: {
        type: PropType<TdButtonProps["content"]>;
    };
    default: {
        type: PropType<TdButtonProps["default"]>;
    };
    disabled: {
        type: BooleanConstructor;
        default: any;
    };
    form: {
        type: StringConstructor;
        default: any;
    };
    ghost: BooleanConstructor;
    href: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: PropType<TdButtonProps["icon"]>;
    };
    loading: BooleanConstructor;
    loadingProps: {
        type: PropType<TdButtonProps["loadingProps"]>;
    };
    shape: {
        type: PropType<TdButtonProps["shape"]>;
        default: TdButtonProps["shape"];
        validator(val: TdButtonProps["shape"]): boolean;
    };
    size: {
        type: PropType<TdButtonProps["size"]>;
        default: TdButtonProps["size"];
        validator(val: TdButtonProps["size"]): boolean;
    };
    suffix: {
        type: PropType<TdButtonProps["suffix"]>;
    };
    tag: {
        type: PropType<TdButtonProps["tag"]>;
        validator(val: TdButtonProps["tag"]): boolean;
    };
    theme: {
        type: PropType<TdButtonProps["theme"]>;
        validator(val: TdButtonProps["theme"]): boolean;
    };
    type: {
        type: PropType<TdButtonProps["type"]>;
        default: TdButtonProps["type"];
        validator(val: TdButtonProps["type"]): boolean;
    };
    variant: {
        type: PropType<TdButtonProps["variant"]>;
        default: TdButtonProps["variant"];
        validator(val: TdButtonProps["variant"]): boolean;
    };
    onClick: PropType<TdButtonProps["onClick"]>;
};
export default _default;
