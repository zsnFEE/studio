import { TdPaginationProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    current: {
        type: NumberConstructor;
        default: any;
    };
    modelValue: {
        type: NumberConstructor;
        default: any;
    };
    defaultCurrent: {
        type: NumberConstructor;
        default: number;
    };
    disabled: BooleanConstructor;
    foldedMaxPageBtn: {
        type: NumberConstructor;
        default: number;
    };
    maxPageBtn: {
        type: NumberConstructor;
        default: number;
    };
    pageEllipsisMode: {
        type: PropType<TdPaginationProps["pageEllipsisMode"]>;
        default: TdPaginationProps["pageEllipsisMode"];
        validator(val: TdPaginationProps["pageEllipsisMode"]): boolean;
    };
    pageSize: {
        type: NumberConstructor;
        default: any;
    };
    defaultPageSize: {
        type: NumberConstructor;
        default: number;
    };
    pageSizeOptions: {
        type: PropType<TdPaginationProps["pageSizeOptions"]>;
        default: () => TdPaginationProps["pageSizeOptions"];
    };
    selectProps: {
        type: PropType<TdPaginationProps["selectProps"]>;
    };
    showFirstAndLastPageBtn: BooleanConstructor;
    showJumper: BooleanConstructor;
    showPageNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    showPageSize: {
        type: BooleanConstructor;
        default: boolean;
    };
    showPreviousAndNextBtn: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: PropType<TdPaginationProps["size"]>;
        default: TdPaginationProps["size"];
        validator(val: TdPaginationProps["size"]): boolean;
    };
    theme: {
        type: PropType<TdPaginationProps["theme"]>;
        default: TdPaginationProps["theme"];
        validator(val: TdPaginationProps["theme"]): boolean;
    };
    total: {
        type: NumberConstructor;
        default: number;
    };
    totalContent: {
        type: PropType<TdPaginationProps["totalContent"]>;
        default: boolean;
    };
    onChange: PropType<TdPaginationProps["onChange"]>;
    onCurrentChange: PropType<TdPaginationProps["onCurrentChange"]>;
    onPageSizeChange: PropType<TdPaginationProps["onPageSizeChange"]>;
};
export default _default;
