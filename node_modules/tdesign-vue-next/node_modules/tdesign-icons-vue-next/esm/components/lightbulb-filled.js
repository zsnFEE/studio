import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M3.7998 8.20012C3.7998 3.67874 7.47714 -0.00218182 12.0003 0.000123152C16.5218 0.00242723 20.1998 3.67781 20.1998 8.20012C20.1998 9.4637 19.938 10.4268 19.4169 11.689C19.2313 12.1384 18.9405 12.7697 18.6196 13.4664C18.5 13.7259 18.3763 13.9946 18.2522 14.2662C17.785 15.2895 17.2987 16.3872 16.9412 17.3486L16.699 18.0001H7.28967L7.05359 17.3343C6.71497 16.3793 6.23324 15.2883 5.76342 14.2671C5.62102 13.9576 5.47797 13.6509 5.34072 13.3566C5.03727 12.7061 4.76223 12.1164 4.58541 11.6917C4.05832 10.4256 3.7998 9.46281 3.7998 8.20012ZM7.5 19.0001H16.5V21.0001H7.5V19.0001ZM9.5 22.0001H14.5V24.0001H9.5V22.0001Z"
    }
  }]
};
var lightbulbFilled = defineComponent({
  name: "LightbulbFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-lightbulb-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default lightbulbFilled;
//# sourceMappingURL=lightbulb-filled.js.map
