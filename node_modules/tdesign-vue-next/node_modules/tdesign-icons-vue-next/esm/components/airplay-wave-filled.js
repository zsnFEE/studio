import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M23.0001 3H1L1.00112 20L7.96474 20L12.0004 15.9644L16.036 20L23.0001 20L23.0001 3ZM16.9505 11.3828C14.2168 8.6491 9.78468 8.6491 7.05101 11.3828L6.3439 12.0899L4.92969 10.6757L5.63679 9.96856C9.15151 6.45384 14.85 6.45384 18.3647 9.96856L19.0718 10.6757L17.6576 12.0899L16.9505 11.3828ZM14.1218 14.2109C12.9502 13.0393 11.0507 13.0393 9.87913 14.2109L9.17203 14.918L7.75781 13.5038L8.46492 12.7967C10.4175 10.8441 13.5834 10.8441 15.536 12.7967L16.2431 13.5038L14.8289 14.918L14.1218 14.2109Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M15.9144 21.9999L12.0002 18.0857L8.08594 21.9999L15.9144 21.9999Z"
    }
  }]
};
var airplayWaveFilled = defineComponent({
  name: "AirplayWaveFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-airplay-wave-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default airplayWaveFilled;
//# sourceMappingURL=airplay-wave-filled.js.map
