import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M6 0H11V5H9V3.41421L5.41421 7H7V9H2V4H4V5.58579L7.58579 2H6V0ZM10.2441 7.56574C10.2441 6.04382 11.4779 4.81006 12.9998 4.81006C14.5217 4.81006 15.7555 6.04382 15.7555 7.56573V10.5195H16.9138C17.4021 10.5195 17.8817 10.6492 18.3035 10.8954L21.9282 13.0111C23.0547 13.6687 23.5662 15.0257 23.1539 16.2632L21.3715 21.6138C20.9964 22.7397 19.9428 23.4992 18.7561 23.4992H11.6706C10.8144 23.4992 10.0068 23.1014 9.48499 22.4227L5.18667 16.8314L6.12778 15.4189C6.55806 14.7731 7.34118 14.4583 8.0987 14.6268L10.2441 15.1038V7.56574ZM12.9998 6.81006C12.5825 6.81006 12.2441 7.14839 12.2441 7.56574V17.5974L7.74597 16.5972L7.64537 16.7482L11.0706 21.2037C11.2138 21.39 11.4355 21.4992 11.6706 21.4992H18.7561C19.0818 21.4992 19.3711 21.2908 19.474 20.9817L21.2564 15.6311C21.3696 15.2914 21.2292 14.9189 20.92 14.7384L17.2953 12.6227C17.1795 12.5551 17.0479 12.5195 16.9138 12.5195H13.7555V7.56573C13.7555 7.14839 13.4171 6.81006 12.9998 6.81006Z"
    }
  }]
};
var gestureExpansion = defineComponent({
  name: "GestureExpansionIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-gesture-expansion", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default gestureExpansion;
//# sourceMappingURL=gesture-expansion.js.map
