import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M6.19787 1.51543L.498877 1.5127.497514 3.51269 2.36967 3.51397C-1.21264 8.58765-.733326 15.6522 3.80761 20.1931L4.51472 20.9002 5.92893 19.486 5.22183 18.7789C1.29991 14.857.958594 8.71037 4.19787 4.40123V6.50071H6.19787V1.51543zM7.97413 6.63763C6.89318 7.26172 6.52283 8.64391 7.14691 9.72485L11.1787 16.7082 8.59641 17.5885C7.87729 17.8337 7.37667 18.4879 7.32799 19.2461L7.21825 20.9551 13.7363 23.6481C14.5276 23.975 15.4259 23.9158 16.1674 23.4877L22.3036 19.9449C23.3314 19.3515 23.8641 18.167 23.6259 17.0043L22.4943 11.4794C22.2325 10.2016 21.111 9.28206 19.8067 9.27588L15.6098 9.25597C15.1214 9.25365 14.6412 9.3811 14.2183 9.62527L12.7861 10.4522 11.0613 7.46485C10.4373 6.38391 9.05507 6.01355 7.97413 6.63763z"
    }
  }]
};
var gestureSlideUpFilled = defineComponent({
  name: "GestureSlideUpFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-gesture-slide-up-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default gestureSlideUpFilled;
//# sourceMappingURL=gesture-slide-up-filled.js.map
