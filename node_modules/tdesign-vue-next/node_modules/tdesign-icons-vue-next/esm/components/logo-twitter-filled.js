import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M10.0002 7.95517C10.0243 4.6621 12.7012 2 16 2C18.0462 2 19.8517 3.02433 20.934 4.5853C21.2698 4.4194 21.6575 4.19395 22.0603 3.94764L23.582 3.01714V4.80078C23.582 6.17104 23.2996 7.21126 22.8983 8.00246C22.6171 8.55688 22.29 8.96422 22 9.26187V10C22 17.1797 16.1797 23.0004 8.99999 23.0004C6.55063 23.0004 4.25667 22.3221 2.2991 21.1425L0.0490957 19.7866L2.63116 19.303C3.65598 19.1111 4.63303 18.7832 5.54295 18.3384C2.2211 16.3228 0 12.6716 0 8.49986C0 7.00436 0.285976 5.57322 0.807145 4.25989L1.43146 2.68664L2.5082 3.9926C4.32827 6.20011 6.98916 7.68404 10.0002 7.95517Z"
    }
  }]
};
var logoTwitterFilled = defineComponent({
  name: "LogoTwitterFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-logo-twitter-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default logoTwitterFilled;
//# sourceMappingURL=logo-twitter-filled.js.map
