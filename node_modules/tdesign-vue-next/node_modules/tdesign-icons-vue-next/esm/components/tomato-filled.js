import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M12.0254 4.12107L9.50378 1.58594L8.08579 2.99636L9.13573 4.05194C8.65416 4.0469 8.16446 4.08856 7.72517 4.21412C6.13836 4.66767 4.67724 5.47124 3.62223 6.85477C2.56694 8.23866 2.00016 10.095 2 12.5001C1.99983 15.0244 3.11154 17.5634 4.69339 19.3629C6.25049 21.1342 8.48948 22.4181 10.7874 21.8732C11.1426 21.7889 11.3995 21.7128 11.552 21.6677C11.5993 21.6536 11.6369 21.6425 11.6639 21.6351L11.6663 21.6345C11.7423 21.6137 11.7888 21.601 12 21.601C12.2112 21.601 12.2577 21.6137 12.3336 21.6345L12.3361 21.6351C12.3631 21.6425 12.4005 21.6536 12.448 21.6676C12.6004 21.7128 12.8574 21.7889 13.2126 21.8732C15.5179 22.4199 17.7575 21.1393 19.3143 19.3661C20.8949 17.5658 22.0013 15.0256 22 12.4996C21.9988 10.0848 21.4109 8.22969 20.3475 6.8498C19.2863 5.47275 17.8307 4.67171 16.2822 4.21625C15.8918 4.10142 15.4616 4.05412 15.0327 4.04781L16.1025 3.04788L14.7368 1.58674L12.0254 4.12107ZM12 8C9.7424 8 9 6 9 6C9 6 10.8754 6.63618 12 6.63618C13.1247 6.63618 15 6 15 6C15 6 14.2577 8 12 8Z"
    }
  }]
};
var tomatoFilled = defineComponent({
  name: "TomatoFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-tomato-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default tomatoFilled;
//# sourceMappingURL=tomato-filled.js.map
