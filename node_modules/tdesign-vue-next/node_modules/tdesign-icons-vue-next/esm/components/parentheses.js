import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M5.44539 4.53903L5.00736 5.43799C4.04211 7.41891 3.5 9.64472 3.5 12C3.5 14.3552 4.04211 16.581 5.00736 18.5619L5.44539 19.4609L3.64748 20.337L3.20944 19.438C2.11414 17.1902 1.5 14.6654 1.5 12C1.5 9.33456 2.11414 6.80976 3.20944 4.56192L3.64748 3.66296L5.44539 4.53903ZM20.3525 3.66296L20.7906 4.56192C21.8859 6.80976 22.5 9.33456 22.5 12C22.5 14.6654 21.8859 17.1902 20.7906 19.438L20.3525 20.337L18.5546 19.4609L18.9926 18.5619C19.9579 16.581 20.5 14.3552 20.5 12C20.5 9.64472 19.9579 7.41891 18.9926 5.43799L18.5546 4.53903L20.3525 3.66296Z"
    }
  }]
};
var parentheses = defineComponent({
  name: "ParenthesesIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-parentheses", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default parentheses;
//# sourceMappingURL=parentheses.js.map
