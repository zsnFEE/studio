import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M7.25011 4.5C7.25011 2.84315 8.59326 1.5 10.2501 1.5C11.907 1.5 13.2501 2.84315 13.2501 4.5V8H14.7094C15.2406 8 15.7622 8.14103 16.221 8.40866L20.3506 10.8176C21.5771 11.5331 22.134 13.0105 21.685 14.3576L19.6546 20.4487C19.2463 21.6737 18.0999 22.5 16.8086 22.5H8.73492C7.80351 22.5 6.92493 22.0674 6.35705 21.3291L1.52051 15.0416L2.53798 13.5154C2.99614 12.8282 3.82964 12.4933 4.63594 12.6725L7.25011 13.2534V4.5ZM10.2501 3.5C9.69783 3.5 9.25011 3.94772 9.25011 4.5V15.7466L4.20208 14.6248L3.97972 14.9584L7.94229 20.1097C8.13159 20.3558 8.42445 20.5 8.73492 20.5H16.8086C17.239 20.5 17.6212 20.2246 17.7573 19.8162L19.7876 13.7251C19.9373 13.2761 19.7517 12.7836 19.3428 12.5451L15.2133 10.1362C15.0604 10.047 14.8865 10 14.7094 10H11.2501V4.5C11.2501 3.94772 10.8024 3.5 10.2501 3.5Z"
    }
  }]
};
var gestureUp = defineComponent({
  name: "GestureUpIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-gesture-up", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default gestureUp;
//# sourceMappingURL=gesture-up.js.map
