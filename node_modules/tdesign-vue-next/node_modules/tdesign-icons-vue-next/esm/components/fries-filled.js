import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M21.0001 4.52967L17.4646.994141 15.3432 3.11546 13.2219.994141 9.31493 4.90115 7.8009 3.38712 4.79958 8.39001 15.6098 19.2002 20.6122 16.1984 19.2144 14.8006 22.4143 11.6007 20.293 9.47942 22.4143 7.3581 20.293 5.23678 21.0001 4.52967zM13.5576 9.14379L12.8505 8.43668 17.4646 3.82257 18.1717 4.52968 13.5576 9.14379zM14.9718 10.558L18.8788 6.651 19.5859 7.3581 15.6789 11.2651 14.9718 10.558zM17.8002 13.3864L17.0931 12.6793 18.8788 10.8936 19.5859 11.6007 17.8002 13.3864zM11.4362 7.02247L10.7291 6.31536 13.2219 3.82257 13.929 4.52968 11.4362 7.02247zM13.8421 20.261L3.73901 10.1579.740967 15.1553 8.84514 23.2595 13.8421 20.261z"
    }
  }]
};
var friesFilled = defineComponent({
  name: "FriesFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-fries-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default friesFilled;
//# sourceMappingURL=fries-filled.js.map
