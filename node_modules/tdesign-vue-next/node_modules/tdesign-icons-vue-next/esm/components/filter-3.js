import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 25 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M12.0192 0.00219727L15.5092 7.99035L23.4973 11.4804L15.5092 14.9704L12.0192 22.9585L8.52917 14.9704L0.541016 11.4804L8.52917 7.99035L12.0192 0.00219727ZM21.3244 3.32469L19.7556 4.10559L21.3244 4.8865L22.1054 6.45532L22.8863 4.8865L24.4551 4.10559L22.8863 3.32469L22.1054 1.75586L21.3244 3.32469ZM12.0192 4.99776L10.0481 9.50928L5.53658 11.4804L10.0481 13.4514L12.0192 17.9629L13.9902 13.4514L18.5018 11.4804L13.9902 9.50928L12.0192 4.99776ZM19.3351 14.7559L20.6344 17.3661L23.2446 18.6654L20.6344 19.9647L19.3351 22.575L18.0358 19.9647L15.4256 18.6654L18.0358 17.3661L19.3351 14.7559Z"
    }
  }]
};
var filter3 = defineComponent({
  name: "Filter3Icon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-filter-3", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default filter3;
//# sourceMappingURL=filter-3.js.map
