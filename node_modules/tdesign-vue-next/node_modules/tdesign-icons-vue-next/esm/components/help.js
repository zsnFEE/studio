import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M12.9951 21.0058L10.9951 20.9999L10.9951 18.994H13.0069L12.9951 21.0058ZM10.9954 17.4497V15.071C10.9954 13.9201 11.5127 12.9612 12.1317 12.1999C12.7463 11.444 13.5272 10.8027 14.1866 10.2832C15.0124 9.63256 15.5397 8.62673 15.5397 7.49717C15.5397 5.53971 13.9528 3.95288 11.9954 3.95288C10.4537 3.95288 9.13955 4.93771 8.65252 6.31565L8.31927 7.25849L6.43359 6.592L6.76684 5.64916C7.52748 3.49712 9.57981 1.95288 11.9954 1.95288C15.0574 1.95288 17.5397 4.43514 17.5397 7.49717C17.5397 9.26542 16.7108 10.8406 15.4243 11.8542C14.7694 12.3702 14.1453 12.8935 13.6835 13.4616C13.226 14.0242 12.9954 14.5487 12.9954 15.071V17.4497H10.9954Z"
    }
  }]
};
var help = defineComponent({
  name: "HelpIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-help", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default help;
//# sourceMappingURL=help.js.map
