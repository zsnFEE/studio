import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M2.0043.589966L2.00015.585815.585938 2.00003 2.58594 4.00003.0859375 6.50003 1.50015 7.91424 4.00015 5.41424 4.72499 6.13908C3.03566 7.92975 2.00015 10.344 2.00015 13 2.00015 18.5229 6.4773 23 12.0002 23 14.6562 23 17.0704 21.9645 18.8611 20.2752L22.0002 23.4142 23.4101 22.0043 2 .594267 2.0043.589966zM21.1881 16.9539C21.7107 15.7412 22.0002 14.4044 22.0002 13 22.0002 7.47718 17.523 3.00003 12.0002 3.00003 10.5958 3.00003 9.259 3.28953 8.04627 3.81211L21.1881 16.9539zM18.5002 1.08582L23.9144 6.50003 22.5002 7.91424 17.0859 2.50003 18.5002 1.08582z"
    }
  }]
};
var alarmOffFilled = defineComponent({
  name: "AlarmOffFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-alarm-off-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default alarmOffFilled;
//# sourceMappingURL=alarm-off-filled.js.map
