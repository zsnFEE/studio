import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M4.3721 3.63574L6.48792 7.33843C8.13913 6.48318 10.0142 6.00012 12 6.00012C13.9858 6.00012 15.8609 6.48318 17.5121 7.33843L19.6279 3.63574L21.3644 4.62802L19.2065 8.40426C22.1158 10.5926 24 14.076 24 18.0001V20.0001H0V18.0001C0 14.076 1.88416 10.5926 4.79347 8.40426L2.63562 4.62802L4.3721 3.63574ZM12 8.00012C10.0312 8.00012 8.1982 8.56803 6.65215 9.54858C3.85384 11.3233 2 14.4456 2 18.0001H22C22 14.4456 20.1462 11.3233 17.3479 9.54858C15.8018 8.56803 13.9688 8.00012 12 8.00012ZM6 13.0001H8.00391V15.004H6V13.0001ZM16 13.0001H18.0039V15.004H16V13.0001Z"
    }
  }]
};
var logoAndroid = defineComponent({
  name: "LogoAndroidIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-logo-android", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default logoAndroid;
//# sourceMappingURL=logo-android.js.map
