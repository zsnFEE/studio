import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M2 12C2 16.1271 4.53351 19.0117 6.89576 20.8031C8.08675 21.7062 9.27184 22.3623 10.1566 22.7924C10.6002 23.008 10.9717 23.1685 11.2352 23.2761C11.3671 23.33 11.4722 23.3707 11.546 23.3985C11.6592 23.4412 11.7735 23.4808 11.8878 23.5205C11.9252 23.5335 11.9626 23.5464 12 23.5595C12.0374 23.5464 12.0749 23.5334 12.1124 23.5204C12.2267 23.4808 12.3409 23.4412 12.454 23.3985C12.5278 23.3707 12.6329 23.33 12.7648 23.2761C13.0283 23.1685 13.3998 23.008 13.8434 22.7924C14.7282 22.3623 15.9133 21.7062 17.1042 20.8031C19.4665 19.0117 22 16.1271 22 12V3.94055L12 0.440552L2 3.94055V12ZM13 8.5H10.9961V6.49609H13L13 8.5ZM11 16.5V10H13V16.5H11Z"
    }
  }]
};
var shieldErrorFilled = defineComponent({
  name: "ShieldErrorFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-shield-error-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default shieldErrorFilled;
//# sourceMappingURL=shield-error-filled.js.map
