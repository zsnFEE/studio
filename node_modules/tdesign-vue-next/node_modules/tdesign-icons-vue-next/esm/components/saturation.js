import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M12 0.0690918L19.0677 7.07007C22.9774 10.9429 22.9774 17.2259 19.0677 21.0987C15.1632 24.9663 8.83675 24.9663 4.93229 21.0987C1.02257 17.2259 1.02257 10.9429 4.93229 7.07007L12 0.0690918ZM12 2.8842L6.33978 8.49098C3.22007 11.5812 3.22007 16.5876 6.33978 19.6778C9.46476 22.7733 14.5352 22.7733 17.6602 19.6778C20.7799 16.5876 20.7799 11.5812 17.6602 8.49098L12 2.8842ZM11 9.03493H12C15.0274 9.03493 17.4816 11.4891 17.4816 14.5165C17.4816 17.5439 15.0274 19.9981 12 19.9981H11L11 9.03493ZM13 11.1807L13 17.8524C14.4355 17.4227 15.4816 16.0918 15.4816 14.5165C15.4816 12.9413 14.4355 11.6104 13 11.1807Z"
    }
  }]
};
var saturation = defineComponent({
  name: "SaturationIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-saturation", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default saturation;
//# sourceMappingURL=saturation.js.map
