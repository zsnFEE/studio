import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M7.5 2.71741L2 5.92575V21.5001L7.5 19.2328V2.71741zM9.5 18.9097L11.5 20.0908V16.5C11.5 14.1988 12.6958 12.1769 14.5 11.0218V5.09051L9.5 2.1377V18.9097zM22 2.50012V11.3762C20.897 10.5139 19.5085 10 18 10 17.4837 10 16.9815 10.0602 16.5 10.1739V4.76744L22 2.50012zM16.75 15.25C16.75 14.5596 17.3096 14 18 14 18.3441 14 18.6541 14.1377 18.8811 14.3634L19.5904 15.0683 21.0003 13.6498 20.291 12.9448C19.7045 12.3619 18.8936 12 18 12 16.2051 12 14.75 13.4551 14.75 15.25V16H13.499V22.5H22.499V16H16.75V15.25z"
    }
  }]
};
var mapUnlockedFilled = defineComponent({
  name: "MapUnlockedFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-map-unlocked-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default mapUnlockedFilled;
//# sourceMappingURL=map-unlocked-filled.js.map
