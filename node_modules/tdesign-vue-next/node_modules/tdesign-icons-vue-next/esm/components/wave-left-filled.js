import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M7.07996 3.01688L6.25658 3.58437C5.25048 4.27779 4.37742 5.15081 3.68397 6.15688L3.11645 6.98024 1.46973 5.8452 2.03725 5.02184C2.86875 3.81549 3.91522 2.76906 5.1216 1.9376L5.94498 1.37012 7.07996 3.01688zM10.2448 4.46556C10.7819 3.92867 11.6529 3.92995 12.1885 4.4684L17.4423 9.75065 16.9979 8.65493C16.4384 7.27525 18.0035 6.00498 19.2385 6.83649 19.4269 6.96332 19.5842 7.13103 19.6987 7.32712L22.0783 11.4019C23.7259 14.2233 23.2639 17.8009 20.9536 20.1111L20.1093 20.9554C17.3017 23.7631 12.7495 23.7631 9.94188 20.9554L4.90742 15.9198C4.37073 15.383 4.37056 14.5128 4.90705 13.9758 5.44395 13.4384 6.31495 13.4382 6.85213 13.9753L8.45572 15.5789 8.98679 15.0478 5.29669 11.3577C4.75982 10.8209 4.75981 9.95045 5.29666 9.41357 5.83353 8.87668 6.70399 8.87667 7.24088 9.41355L10.931 13.1037 11.4613 12.5733 6.40446 7.51647C5.86764 6.97965 5.86747 6.10934 6.40408 5.57231 6.94099 5.03498 7.81188 5.0348 8.349 5.57192L13.4059 10.6288 13.9361 10.0986 10.2446 6.4071C9.70839 5.87093 9.7085 5.0016 10.2448 4.46556z"
    }
  }]
};
var waveLeftFilled = defineComponent({
  name: "WaveLeftFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-wave-left-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default waveLeftFilled;
//# sourceMappingURL=wave-left-filled.js.map
