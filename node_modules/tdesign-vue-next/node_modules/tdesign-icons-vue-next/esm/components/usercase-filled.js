import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M18 5C18.9214 5 19.8929 5.23169 20.676 5.75374C21.4671 6.28116 22 7.07483 22 8C22 8.92517 21.4671 9.71884 20.676 10.2463C19.8929 10.7683 18.9214 11 18 11C17.0786 11 16.107 10.7683 15.324 10.2463C14.5328 9.71884 14 8.92517 14 8C14 7.07483 14.5328 6.28116 15.324 5.75374C16.107 5.23169 17.0786 5 18 5ZM5.99999 10.8292C6.40944 10.6848 6.79381 10.4488 7.12131 10.1213C8.29288 8.94975 8.29288 7.05025 7.12131 5.87868C5.94974 4.70711 4.05024 4.70711 2.87867 5.87868C1.70709 7.05025 1.70709 8.94975 2.87867 10.1213C3.20616 10.4488 3.59053 10.6848 3.99999 10.8292V12H1.99999V14H3.99999V15.5857L1.58594 17.9986L2.99984 19.4132L5.00035 17.4135L7.00291 19.4132L8.41609 17.9979L5.99999 15.5854V14H7.99999V12H5.99999V10.8292ZM9.49999 7H12.5V9H9.49999V7ZM18 13C18.9214 13 19.8929 13.2317 20.676 13.7537C21.4671 14.2812 22 15.0748 22 16C22 16.9252 21.4671 17.7188 20.676 18.2463C19.8929 18.7683 18.9214 19 18 19C17.0786 19 16.107 18.7683 15.324 18.2463C14.5328 17.7188 14 16.9252 14 16C14 15.0748 14.5328 14.2812 15.324 13.7537C16.107 13.2317 17.0786 13 18 13ZM9.49999 15H12.5V17H9.49999V15Z"
    }
  }]
};
var usercaseFilled = defineComponent({
  name: "UsercaseFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-usercase-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default usercaseFilled;
//# sourceMappingURL=usercase-filled.js.map
