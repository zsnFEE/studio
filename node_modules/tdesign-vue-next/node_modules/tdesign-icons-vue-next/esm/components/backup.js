import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M12 4C9.0798 4 6.69051 6.27638 6.51088 9.15072L6.46201 9.93262L5.69115 10.0723C3.59195 10.4528 2 12.2915 2 14.5C2 16.9853 4.01472 19 6.5 19H17.5C19.9853 19 22 16.9853 22 14.5C22 12.2915 20.408 10.4528 18.3089 10.0723L17.538 9.93262L17.4891 9.15072C17.3095 6.27638 14.9202 4 12 4ZM4.59837 8.28287C5.1802 4.71919 8.27221 2 12 2C15.7278 2 18.8198 4.71919 19.4016 8.28287C22.0637 9.09632 24 11.5712 24 14.5C24 18.0899 21.0898 21 17.5 21H6.5C2.91015 21 0 18.0899 0 14.5C0 11.5712 1.93625 9.09632 4.59837 8.28287ZM12 7.08579L16.4142 11.5L15 12.9142L13 10.9142L13 17H11L11 10.9142L9 12.9142L7.58579 11.5L12 7.08579Z"
    }
  }]
};
var backup = defineComponent({
  name: "BackupIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-backup", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default backup;
//# sourceMappingURL=backup.js.map
