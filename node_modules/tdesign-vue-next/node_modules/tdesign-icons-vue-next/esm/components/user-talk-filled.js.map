{"version":3,"file":"user-talk-filled.js","sources":["../../src/components/user-talk-filled.tsx"],"sourcesContent":["import { computed, PropType, defineComponent } from 'vue';\nimport renderFn from '../utils/render-fn';\nimport {\n  TdIconSVGProps, SVGJson,\n} from '../utils/types';\nimport useSizeProps from '../utils/use-size-props';\n\nimport '../style/css';\n\nconst element: SVGJson = {\"tag\":\"svg\",\"attrs\":{\"fill\":\"none\",\"viewBox\":\"0 0 24 24\",\"width\":\"1em\",\"height\":\"1em\"},\"children\":[{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M11.5 2C8.46243 2 6 4.46243 6 7.5 6 10.5376 8.46243 13 11.5 13 14.5376 13 17 10.5376 17 7.5 17 4.46243 14.5376 2 11.5 2zM18.9837 12.9819L19.5863 13.7799C20.5044 14.9956 21.0008 16.4776 21.0003 18.0009 20.9998 19.5243 20.5023 21.0059 19.5834 22.221L18.9802 23.0185 17.385 21.8121 17.9882 21.0145C18.6446 20.1467 18.9999 19.0884 19.0003 18.0002 19.0007 16.9121 18.6461 15.8536 17.9903 14.9852L17.3877 14.1872 18.9837 12.9819z\"}},{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M16.1909 15.0911L16.7936 15.8891C17.2526 16.4969 17.5008 17.2379 17.5006 17.9996 17.5003 18.7613 17.2516 19.5021 16.7921 20.1096L16.1889 20.9072 14.5938 19.7007 15.197 18.9032C15.3939 18.6428 15.5005 18.3253 15.5006 17.9989 15.5007 17.6724 15.3943 17.3549 15.1976 17.0944L14.5949 16.2964 16.1909 15.0911zM12.8762 14C12.0139 15.103 11.5 16.4915 11.5 18 11.5 19.5085 12.0139 20.897 12.8762 22H2V20C2 16.6863 4.68629 14 8 14H12.8762z\"}}]};\n\nexport default defineComponent({\n  name: 'UserTalkFilledIcon',\n  props: {\n    size: {\n      type: String,\n    },\n    onClick: {\n      type: Function as PropType<TdIconSVGProps['onClick']>,\n    },\n  },\n  setup(props, { attrs }) {\n    const propsSize = computed(() => props.size);\n\n    const { className, style } = useSizeProps(propsSize);\n\n    const finalCls = computed(() => ['t-icon', 't-icon-user-talk-filled', className.value]);\n    const finalStyle = computed(() => ({ ...style.value, ...(attrs.style as Styles) }));\n    const finalProps = computed(() => ({\n      class: finalCls.value,\n      style: finalStyle.value,\n      onClick: (e:MouseEvent) => props.onClick?.({ e }),\n    }));\n    return () => renderFn(element, finalProps.value);\n  },\n\n});\n"],"names":["element","defineComponent","name","props","size","type","String","onClick","Function","setup","attrs","propsSize","computed","className","style","useSizeProps","finalCls","value","finalStyle","_objectSpread","finalProps","class","e","_props$onClick","call","renderFn"],"mappings":";;;;;;;;;;AASA,IAAMA,UAAmB;EAAC,OAAM;EAAM,SAAQ;IAAC,QAAO;IAAO,WAAU;IAAY,SAAQ;IAAM,UAAS;;EAAO,YAAW,CAAC;IAAC,OAAM;IAAO,SAAQ;MAAC,QAAO;MAAe,KAAI;;KAA4a;IAAC,OAAM;IAAO,SAAQ;MAAC,QAAO;MAAe,KAAI;;;;AAE3oB,qBAAeC,gBAAgB;EAC7BC,MAAM;EACNC,OAAO;IACLC,MAAM;MACJC,MAAMC;;IAERC,SAAS;MACPF,MAAMG;;;EAGVC,MAAMN,aAAkB;IAAA,IAAX;MAAEO;;QACPC,YAAYC,SAAS,MAAMT,MAAMC;QAEjC;MAAES;MAAWC;QAAUC,aAAaJ;QAEpCK,WAAWJ,SAAS,MAAM,CAAC,UAAU,2BAA2BC,UAAUI;QAC1EC,aAAaN,SAAS,MAAAO,aAAA,CAAAA,aAAA,KAAYL,MAAMG,QAAWP,MAAMI;QACzDM,aAAaR,SAAS;MAC1BS,OAAOL,SAASC;MAChBH,OAAOI,WAAWD;MAClBV,SAAUe;;iCAAiBnB,MAAMI,0DAANgB,cAAA,CAAAC,IAAA,CAAArB,OAAgB;UAAEmB;;;;WAExC,MAAMG,SAASzB,SAASoB,WAAWH;;AAAA;;;;"}