{"version":3,"file":"gesture-typing-filled.js","sources":["../../src/components/gesture-typing-filled.tsx"],"sourcesContent":["import { computed, PropType, defineComponent } from 'vue';\nimport renderFn from '../utils/render-fn';\nimport {\n  TdIconSVGProps, SVGJson,\n} from '../utils/types';\nimport useSizeProps from '../utils/use-size-props';\n\nimport '../style/css';\n\nconst element: SVGJson = {\"tag\":\"svg\",\"attrs\":{\"fill\":\"none\",\"viewBox\":\"0 0 24 24\",\"width\":\"1em\",\"height\":\"1em\"},\"children\":[{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M4 0C2.89543 0 2 .89543 2 2 2 3.10457 2.89543 4 4 4 5.10457 4 6 3.10457 6 2 6 .89543 5.10457 0 4 0zM11 0C9.89543 0 9 .89543 9 2 9 3.10457 9.89543 4 11 4 12.1046 4 13 3.10457 13 2 13 .895431 12.1046 0 11 0zM18 0C16.8954 0 16 .895431 16 2 16 3.10457 16.8954 4 18 4 19.1046 4 20 3.10457 20 2 20 .895431 19.1046 0 18 0zM4 6C2.89543 6 2 6.89543 2 8 2 9.10457 2.89543 10 4 10 5.10457 10 6 9.10457 6 8 6 6.89543 5.10457 6 4 6zM18 6C16.8954 6 16 6.89543 16 8 16 9.10457 16.8954 10 18 10 19.1046 10 20 9.10457 20 8 20 6.89543 19.1046 6 18 6zM10.9999 5.31104C9.75169 5.31104 8.73986 6.32287 8.73986 7.57104V15.6347L6.06333 15.1059C5.31798 14.9587 4.55733 15.2749 4.13607 15.9072L3.18652 17.3324 7.48485 22.9236C8.00666 23.6024 8.81424 24.0002 9.67042 24.0002H16.7559C17.9427 24.0002 18.9963 23.2407 19.3714 22.1147L21.1538 16.7642C21.566 15.5267 21.0545 14.1696 19.928 13.5121L16.3033 11.3964C15.8816 11.1502 15.402 11.0205 14.9137 11.0205H13.2599V7.57104C13.2599 6.32287 12.248 5.31104 10.9999 5.31104z\"}}]};\n\nexport default defineComponent({\n  name: 'GestureTypingFilledIcon',\n  props: {\n    size: {\n      type: String,\n    },\n    onClick: {\n      type: Function as PropType<TdIconSVGProps['onClick']>,\n    },\n  },\n  setup(props, { attrs }) {\n    const propsSize = computed(() => props.size);\n\n    const { className, style } = useSizeProps(propsSize);\n\n    const finalCls = computed(() => ['t-icon', 't-icon-gesture-typing-filled', className.value]);\n    const finalStyle = computed(() => ({ ...style.value, ...(attrs.style as Styles) }));\n    const finalProps = computed(() => ({\n      class: finalCls.value,\n      style: finalStyle.value,\n      onClick: (e:MouseEvent) => props.onClick?.({ e }),\n    }));\n    return () => renderFn(element, finalProps.value);\n  },\n\n});\n"],"names":["element","defineComponent","name","props","size","type","String","onClick","Function","setup","attrs","propsSize","computed","className","style","useSizeProps","finalCls","value","finalStyle","_objectSpread","finalProps","class","e","_props$onClick","call","renderFn"],"mappings":";;;;;;;;;;AASA,IAAMA,UAAmB;EAAC,OAAM;EAAM,SAAQ;IAAC,QAAO;IAAO,WAAU;IAAY,SAAQ;IAAM,UAAS;;EAAO,YAAW,CAAC;IAAC,OAAM;IAAO,SAAQ;MAAC,QAAO;MAAe,KAAI;;;;AAE9K,0BAAeC,gBAAgB;EAC7BC,MAAM;EACNC,OAAO;IACLC,MAAM;MACJC,MAAMC;;IAERC,SAAS;MACPF,MAAMG;;;EAGVC,MAAMN,aAAkB;IAAA,IAAX;MAAEO;;QACPC,YAAYC,SAAS,MAAMT,MAAMC;QAEjC;MAAES;MAAWC;QAAUC,aAAaJ;QAEpCK,WAAWJ,SAAS,MAAM,CAAC,UAAU,gCAAgCC,UAAUI;QAC/EC,aAAaN,SAAS,MAAAO,aAAA,CAAAA,aAAA,KAAYL,MAAMG,QAAWP,MAAMI;QACzDM,aAAaR,SAAS;MAC1BS,OAAOL,SAASC;MAChBH,OAAOI,WAAWD;MAClBV,SAAUe;;iCAAiBnB,MAAMI,0DAANgB,cAAA,CAAAC,IAAA,CAAArB,OAAgB;UAAEmB;;;;WAExC,MAAMG,SAASzB,SAASoB,WAAWH;;AAAA;;;;"}