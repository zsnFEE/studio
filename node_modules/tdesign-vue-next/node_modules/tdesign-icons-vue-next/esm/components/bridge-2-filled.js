import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M12 3C10.2558 3 8.51473 3.5897 6.95233 5.01006C5.40976 6.4124 4.08489 8.58305 3.05132 11.6838C2.94308 12.0085 2.84207 12.3323 2.74211 12.6528C2.51032 13.3958 2.28416 14.1209 1.98648 14.7974C1.55829 15.7706 1.10902 16.3199 0.618354 16.5225L0 16.7778V21H9V14C9 12.3431 10.3431 11 12 11C13.6569 11 15 12.3431 15 14V21H24V16.7778L23.3816 16.5225C22.891 16.3199 22.4417 15.7706 22.0135 14.7974C21.7158 14.1209 21.4897 13.3959 21.2579 12.6528C21.158 12.3324 21.0569 12.0084 20.9487 11.6838C19.9151 8.58305 18.5902 6.4124 17.0477 5.01006C15.4853 3.5897 13.7442 3 12 3Z"
    }
  }]
};
var bridge2Filled = defineComponent({
  name: "Bridge2FilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-bridge-2-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default bridge2Filled;
//# sourceMappingURL=bridge-2-filled.js.map
