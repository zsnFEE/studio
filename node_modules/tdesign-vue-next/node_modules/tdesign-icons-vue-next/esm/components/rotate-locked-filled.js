import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 25 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M12.2263 3C7.25576 3 3.22632 7.02944 3.22632 12C3.22632 16.9706 7.25576 21 12.2263 21C15.9153 21 19.0882 18.7803 20.4779 15.5996L22.3106 16.4004C20.6141 20.2833 16.7386 23 12.2263 23C6.15119 23 1.22632 18.0751 1.22632 12C1.22632 5.92487 6.15119 1 12.2263 1C18.3015 1 23.2263 5.92487 23.2263 12V14L19.6263 11.3L20.8263 9.7L20.9545 9.79616C19.9716 5.891 16.4366 3 12.2263 3ZM12.2263 8.5C12.9167 8.5 13.4763 9.05964 13.4763 9.75V10.5H10.9763V9.75C10.9763 9.05964 11.536 8.5 12.2263 8.5ZM15.4763 10.5V9.75C15.4763 7.95508 14.0212 6.5 12.2263 6.5C10.4314 6.5 8.97632 7.95507 8.97632 9.75V10.5H7.72485V17H16.7249V10.5H15.4763Z"
    }
  }]
};
var rotateLockedFilled = defineComponent({
  name: "RotateLockedFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-rotate-locked-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default rotateLockedFilled;
//# sourceMappingURL=rotate-locked-filled.js.map
