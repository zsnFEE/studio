import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M22 2V22H2V2H22ZM10.1135 8.58325C10.3885 7.8051 11.1307 7.25 11.9999 7.25C13.1045 7.25 13.9999 8.14543 13.9999 9.25C13.9999 9.88718 13.7031 10.4545 13.2361 10.8223C12.8001 11.1659 12.2579 11.6092 11.8262 12.1402C11.3901 12.6765 10.9999 13.3834 10.9999 14.25V15.5H12.9999V14.25C12.9999 14.012 13.1034 13.7396 13.378 13.4019C13.657 13.0588 14.0423 12.7334 14.4739 12.3933C15.4014 11.6625 15.9999 10.5259 15.9999 9.25C15.9999 7.04086 14.2091 5.25 11.9999 5.25C10.2567 5.25 8.77642 6.36451 8.22778 7.91675L7.89453 8.85959L9.78021 9.52609L10.1135 8.58325ZM13.0036 16.5H10.9997V18.5039H13.0036V16.5Z"
    }
  }]
};
var helpRectangleFilled = defineComponent({
  name: "HelpRectangleFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-help-rectangle-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default helpRectangleFilled;
//# sourceMappingURL=help-rectangle-filled.js.map
