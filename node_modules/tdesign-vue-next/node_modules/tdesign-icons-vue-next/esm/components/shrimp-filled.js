import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M12.5003 21L12.5003 15H9C6.79086 15 5 16.7909 5 19V21H12.5003zM12.5003 3H1V4.375C1 6.65782 2.07377 8.47896 3.75676 9.69728 5.41388 10.8969 7.63387 11.5 10 11.5H12.5003L12.5003 3zM8.00195 4.99805V7.00195H5.99805V4.99805H8.00195zM14.5003 14.4152L14.5003 20.9861C16.2995 20.8859 17.9676 20.2498 19.332 19.2496L14.5003 14.4152zM22.9456 13C22.7415 14.8643 21.9725 16.5529 20.8054 17.8946L15.9136 13 22.9456 13zM20.8044 6.11394C21.9607 7.45451 22.737 9.14442 22.9444 11L15.9155 11 20.8044 6.11394zM14.5003 9.58679L19.3382 4.75167C17.9682 3.73643 16.3088 3.11121 14.5003 3.01347L14.5003 9.58679z"
    }
  }]
};
var shrimpFilled = defineComponent({
  name: "ShrimpFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-shrimp-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default shrimpFilled;
//# sourceMappingURL=shrimp-filled.js.map
