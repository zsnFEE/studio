import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M18.0029 13.0675L20.2637 10.8067C21.9515 9.11889 22.8997 6.8297 22.8997 4.44275V1.09961H19.5566C17.1696 1.09961 14.8804 2.04782 13.1926 3.73565L10.9319 5.99642L5.275 5.28931L1.04008 9.52423L14.4751 22.9593L18.71 18.7243L18.0029 13.0675ZM16.2113 14.8591L16.6041 18.0018L14.4751 20.1308L12.7073 18.3631L16.2113 14.8591ZM9.14024 7.78803L5.63627 11.292L3.8685 9.52423L5.99754 7.39519L9.14024 7.78803ZM5.63627 16.9489L2.10074 20.4844L0.686523 19.0702L4.22206 15.5346L5.63627 16.9489ZM8.4647 19.7773L4.92916 23.3128L3.51495 21.8986L7.05048 18.3631L8.4647 19.7773Z"
    }
  }]
};
var rocketFilled = defineComponent({
  name: "RocketFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-rocket-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default rocketFilled;
//# sourceMappingURL=rocket-filled.js.map
