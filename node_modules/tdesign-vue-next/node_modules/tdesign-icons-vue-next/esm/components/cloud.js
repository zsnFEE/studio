import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M11 5C8.23858 5 6 7.23858 6 10C6 10.3148 6.02896 10.6218 6.0841 10.919L6.25897 11.8615L5.32474 12.0761C3.99272 12.382 3 13.5763 3 15C3 16.6569 4.34315 18 6 18H17C19.2091 18 21 16.2091 21 14C21 11.7909 19.2091 10 17 10C16.9778 10 16.9556 10.0002 16.9334 10.0005L16.0732 10.0145L15.9309 9.16602C15.5345 6.80174 13.4767 5 11 5ZM4 10C4 6.13401 7.13401 3 11 3C14.1873 3 16.8756 5.12935 17.7225 8.04306C20.6955 8.39988 23 10.9308 23 14C23 17.3137 20.3137 20 17 20H6C3.23858 20 1 17.7614 1 15C1 12.9443 2.23985 11.18 4.01191 10.4112C4.004 10.275 4 10.1379 4 10Z"
    }
  }]
};
var cloud = defineComponent({
  name: "CloudIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-cloud", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default cloud;
//# sourceMappingURL=cloud.js.map
