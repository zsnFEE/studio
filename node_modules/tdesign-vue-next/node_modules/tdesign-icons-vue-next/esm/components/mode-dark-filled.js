import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 25 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M16.0703 3.34403L14.6423 4.12503L16.0703 4.90604L16.8513 6.33405L17.6323 4.90604L19.0603 4.12503L17.6323 3.34403L16.8513 1.91602L16.0703 3.34403ZM2.22632 12C2.22632 6.47719 6.70347 2.00003 12.2263 2.00003H13.96L13.0919 3.50073C12.5134 4.50094 12.2263 5.68851 12.2263 7.00003C12.2263 10.866 15.3603 14 19.2263 14C19.6881 14 20.1385 13.9555 20.5738 13.8707L22.2564 13.5428L21.7135 15.1689C20.3886 19.1373 16.6431 22 12.2263 22C6.70347 22 2.22632 17.5229 2.22632 12ZM20.7263 6.41602L21.6399 8.08645L23.3103 9.00003L21.6399 9.91362L20.7263 11.5841L19.8127 9.91362L18.1423 9.00003L19.8127 8.08645L20.7263 6.41602Z"
    }
  }]
};
var modeDarkFilled = defineComponent({
  name: "ModeDarkFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-mode-dark-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default modeDarkFilled;
//# sourceMappingURL=mode-dark-filled.js.map
