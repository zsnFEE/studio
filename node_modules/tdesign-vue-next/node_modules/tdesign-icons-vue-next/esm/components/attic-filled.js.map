{"version":3,"file":"attic-filled.js","sources":["../../src/components/attic-filled.tsx"],"sourcesContent":["import { computed, PropType, defineComponent } from 'vue';\nimport renderFn from '../utils/render-fn';\nimport {\n  TdIconSVGProps, SVGJson,\n} from '../utils/types';\nimport useSizeProps from '../utils/use-size-props';\n\nimport '../style/css';\n\nconst element: SVGJson = {\"tag\":\"svg\",\"attrs\":{\"fill\":\"none\",\"viewBox\":\"0 0 24 24\",\"width\":\"1em\",\"height\":\"1em\"},\"children\":[{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M12 .293457L12.8103 1.41397 12.8125 1.41699 12.8206 1.42813 12.8541 1.47409C12.8841 1.51495 12.9289 1.57582 12.9873 1.65427 13.1041 1.81119 13.2748 2.03822 13.4888 2.31587 13.9173 2.87179 14.5168 3.6275 15.2015 4.42822 15.8876 5.23058 16.6508 6.06811 17.407 6.79209 18.1742 7.52664 18.8873 8.0984 19.4735 8.41358 19.858 8.62027 20.1969 8.77335 20.476 8.87252 20.7694 8.97681 20.9376 9.00003 21 9.00003H22V11H20.9892C20.6649 10.9984 20.3249 10.925 20 10.8222V11H4V10.8222C3.67507 10.925 3.33506 10.9984 3.0108 11H2V9.00003H3C3.06241 9.00003 3.23056 8.97681 3.52403 8.87252 3.80306 8.77335 4.14202 8.62027 4.52647 8.41358 5.1127 8.09841 5.82578 7.52664 6.593 6.79209 7.34918 6.06811 8.11236 5.23058 8.79848 4.42822 9.48318 3.6275 10.0827 2.87179 10.5112 2.31587 10.7252 2.03822 10.896 1.81119 11.0127 1.65427 11.0711 1.57582 11.1159 1.51495 11.1459 1.47409L11.1794 1.42813 11.1875 1.41699 11.1897 1.41397 12 .293457zM4 13L4 20H2V22H9V19.0005C9 17.3436 10.3431 16.0005 12 16.0005 13.6569 16.0005 15 17.3436 15 19.0005V22H22V20H20V13H4z\"}},{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M12 18C11.4477 18 11 18.4477 11 19V22H13V19C13 18.4477 12.5523 18 12 18Z\"}}]};\n\nexport default defineComponent({\n  name: 'AtticFilledIcon',\n  props: {\n    size: {\n      type: String,\n    },\n    onClick: {\n      type: Function as PropType<TdIconSVGProps['onClick']>,\n    },\n  },\n  setup(props, { attrs }) {\n    const propsSize = computed(() => props.size);\n\n    const { className, style } = useSizeProps(propsSize);\n\n    const finalCls = computed(() => ['t-icon', 't-icon-attic-filled', className.value]);\n    const finalStyle = computed(() => ({ ...style.value, ...(attrs.style as Styles) }));\n    const finalProps = computed(() => ({\n      class: finalCls.value,\n      style: finalStyle.value,\n      onClick: (e:MouseEvent) => props.onClick?.({ e }),\n    }));\n    return () => renderFn(element, finalProps.value);\n  },\n\n});\n"],"names":["element","defineComponent","name","props","size","type","String","onClick","Function","setup","attrs","propsSize","computed","className","style","useSizeProps","finalCls","value","finalStyle","_objectSpread","finalProps","class","e","_props$onClick","call","renderFn"],"mappings":";;;;;;;;;;AASA,IAAMA,UAAmB;EAAC,OAAM;EAAM,SAAQ;IAAC,QAAO;IAAO,WAAU;IAAY,SAAQ;IAAM,UAAS;;EAAO,YAAW,CAAC;IAAC,OAAM;IAAO,SAAQ;MAAC,QAAO;MAAe,KAAI;;KAA6gC;IAAC,OAAM;IAAO,SAAQ;MAAC,QAAO;MAAe,KAAI;;;;AAE5uC,kBAAeC,gBAAgB;EAC7BC,MAAM;EACNC,OAAO;IACLC,MAAM;MACJC,MAAMC;;IAERC,SAAS;MACPF,MAAMG;;;EAGVC,MAAMN,aAAkB;IAAA,IAAX;MAAEO;;QACPC,YAAYC,SAAS,MAAMT,MAAMC;QAEjC;MAAES;MAAWC;QAAUC,aAAaJ;QAEpCK,WAAWJ,SAAS,MAAM,CAAC,UAAU,uBAAuBC,UAAUI;QACtEC,aAAaN,SAAS,MAAAO,aAAA,CAAAA,aAAA,KAAYL,MAAMG,QAAWP,MAAMI;QACzDM,aAAaR,SAAS;MAC1BS,OAAOL,SAASC;MAChBH,OAAOI,WAAWD;MAClBV,SAAUe;;iCAAiBnB,MAAMI,0DAANgB,cAAA,CAAAC,IAAA,CAAArB,OAAgB;UAAEmB;;;;WAExC,MAAMG,SAASzB,SAASoB,WAAWH;;AAAA;;;;"}