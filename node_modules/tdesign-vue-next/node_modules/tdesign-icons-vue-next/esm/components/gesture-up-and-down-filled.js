import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M6.19787.515433L.498877.512695.497514 2.51269 2.36967 2.51397C-.789628 6.98854-.78989 13.0115 2.36888 17.4863L.497831 17.4866.498152 19.4866 6.19787 19.486 6.19787 14.5007H4.19787L4.19787 16.6002C1.26738 12.7018 1.26738 7.2996 4.19787 3.40123L4.19787 5.50071 6.19787 5.50071 6.19787.515433zM7.97413 5.63763C6.89318 6.26172 6.52283 7.64391 7.14691 8.72485L11.1787 15.7082 8.59641 16.5885C7.87729 16.8337 7.37667 17.4879 7.32799 18.2461L7.21825 19.9551 13.7363 22.6481C14.5276 22.975 15.4259 22.9158 16.1674 22.4877L22.3036 18.9449C23.3314 18.3515 23.8641 17.167 23.6259 16.0043L22.4943 10.4794C22.2325 9.20158 21.111 8.28206 19.8067 8.27588L15.6098 8.25597C15.1214 8.25365 14.6412 8.3811 14.2183 8.62527L12.7861 9.45217 11.0613 6.46485C10.4373 5.38391 9.05507 5.01355 7.97413 5.63763z"
    }
  }]
};
var gestureUpAndDownFilled = defineComponent({
  name: "GestureUpAndDownFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-gesture-up-and-down-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default gestureUpAndDownFilled;
//# sourceMappingURL=gesture-up-and-down-filled.js.map
