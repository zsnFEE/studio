'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-304d0f8c.js');
var vue = require('vue');
var utils_renderFn = require('../utils/render-fn.js');
var utils_useSizeProps = require('../utils/use-size-props.js');
require('../utils/use-common-classname.js');
require('../utils/config-context.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M19.5 23C17.567 23 16 21.433 16 19.5C16 17.9145 17.0543 16.5752 18.5 16.1449V14C18.5 13.4478 18.0523 13 17.5 13H6.5C5.94772 13 5.5 13.4478 5.5 14L5.5 16.1449C6.94574 16.5752 8 17.9145 8 19.5C8 21.433 6.433 23 4.5 23C2.567 23 1 21.433 1 19.5C1 17.9145 2.05425 16.5752 3.5 16.1449V14C3.5 12.3432 4.84315 11 6.5 11H11L11 7.85506C9.55426 7.42479 8.5 6.08551 8.5 4.5C8.5 2.567 10.067 1 12 1C13.933 1 15.5 2.567 15.5 4.5C15.5 6.08551 14.4457 7.42479 13 7.85506L13 11H17.5C19.1569 11 20.5 12.3432 20.5 14V16.1449C21.9457 16.5752 23 17.9145 23 19.5C23 21.433 21.433 23 19.5 23Z"
    }
  }]
};
var treeRoundDotFilled = vue.defineComponent({
  name: "TreeRoundDotFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = vue.computed(() => props.size);
    var {
      className,
      style
    } = utils_useSizeProps['default'](propsSize);
    var finalCls = vue.computed(() => ["t-icon", "t-icon-tree-round-dot-filled", className.value]);
    var finalStyle = vue.computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = vue.computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => utils_renderFn['default'](element, finalProps.value);
  }
});

exports.default = treeRoundDotFilled;
//# sourceMappingURL=tree-round-dot-filled.js.map
