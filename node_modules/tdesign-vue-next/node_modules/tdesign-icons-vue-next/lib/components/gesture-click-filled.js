'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-304d0f8c.js');
var vue = require('vue');
var utils_renderFn = require('../utils/render-fn.js');
var utils_useSizeProps = require('../utils/use-size-props.js');
require('../utils/use-common-classname.js');
require('../utils/config-context.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M10 3.91421V.5H12V3.91421H10zM7.41436 5.49917L5.00015 3.08496 3.58594 4.49917 6.00015 6.91339 7.41436 5.49917zM10.9999 4.81055C9.75169 4.81055 8.73986 5.82239 8.73986 7.07055V15.1342L6.06333 14.6054C5.31798 14.4582 4.55733 14.7744 4.13607 15.4067L3.18652 16.8319 7.48485 22.4232C8.00666 23.1019 8.81424 23.4997 9.67042 23.4997H16.7559C17.9427 23.4997 18.9963 22.7402 19.3714 21.6143L21.1538 16.2637C21.566 15.0262 21.0545 13.6691 19.928 13.0116L16.3033 10.8959C15.8816 10.6497 15.402 10.52 14.9137 10.52H13.2599V7.07055C13.2599 5.82238 12.248 4.81055 10.9999 4.81055zM16.9998 3.08496L14.5856 5.49917 15.9998 6.91339 18.4141 4.49917 16.9998 3.08496z"
    }
  }]
};
var gestureClickFilled = vue.defineComponent({
  name: "GestureClickFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = vue.computed(() => props.size);
    var {
      className,
      style
    } = utils_useSizeProps['default'](propsSize);
    var finalCls = vue.computed(() => ["t-icon", "t-icon-gesture-click-filled", className.value]);
    var finalStyle = vue.computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = vue.computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => utils_renderFn['default'](element, finalProps.value);
  }
});

exports.default = gestureClickFilled;
//# sourceMappingURL=gesture-click-filled.js.map
