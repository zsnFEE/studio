{"version":3,"file":"gesture-pray-filled.js","sources":["../../src/components/gesture-pray-filled.tsx"],"sourcesContent":["import { computed, PropType, defineComponent } from 'vue';\nimport renderFn from '../utils/render-fn';\nimport {\n  TdIconSVGProps, SVGJson,\n} from '../utils/types';\nimport useSizeProps from '../utils/use-size-props';\n\nimport '../style/css';\n\nconst element: SVGJson = {\"tag\":\"svg\",\"attrs\":{\"fill\":\"none\",\"viewBox\":\"0 0 24 24\",\"width\":\"1em\",\"height\":\"1em\"},\"children\":[{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M10.3566 3.30238C10.0441 3.29626 9.77107 3.5127 9.70576 3.81843L7.42519 14.4929L6.20845 15.7097L8.90974 18.411L10.4369 16.8838C10.7951 16.5256 10.9964 16.0397 10.9964 15.5331L10.9964 3.95476C10.9964 3.59937 10.712 3.30933 10.3566 3.30238ZM7.74989 3.40057C8.01542 2.15776 9.12513 1.2779 10.3957 1.30276C11.0026 1.31463 11.5585 1.52959 11.9992 1.88202C12.4399 1.52959 12.9958 1.31463 13.6026 1.30276C14.8733 1.2779 15.983 2.15776 16.2485 3.40057L18.4055 13.4968L22.6761 17.7674L17.1464 23.2971L12.1473 18.298C12.0963 18.2471 12.047 18.1949 11.9992 18.1416C11.9514 18.1949 11.902 18.2471 11.8511 18.298L6.85199 23.2971L1.32227 17.7674L5.59287 13.4968L7.74989 3.40057ZM14.2926 3.81843C14.2273 3.5127 13.9543 3.29626 13.6418 3.30238C13.2864 3.30933 13.002 3.59937 13.002 3.95476L13.002 15.5331C13.002 16.0397 13.2033 16.5256 13.5615 16.8838L15.0886 18.411L17.7899 15.7097L16.5732 14.4929L14.2926 3.81843Z\"}}]};\n\nexport default defineComponent({\n  name: 'GesturePrayFilledIcon',\n  props: {\n    size: {\n      type: String,\n    },\n    onClick: {\n      type: Function as PropType<TdIconSVGProps['onClick']>,\n    },\n  },\n  setup(props, { attrs }) {\n    const propsSize = computed(() => props.size);\n\n    const { className, style } = useSizeProps(propsSize);\n\n    const finalCls = computed(() => ['t-icon', 't-icon-gesture-pray-filled', className.value]);\n    const finalStyle = computed(() => ({ ...style.value, ...(attrs.style as Styles) }));\n    const finalProps = computed(() => ({\n      class: finalCls.value,\n      style: finalStyle.value,\n      onClick: (e:MouseEvent) => props.onClick?.({ e }),\n    }));\n    return () => renderFn(element, finalProps.value);\n  },\n\n});\n"],"names":["element","defineComponent","name","props","size","type","String","onClick","Function","setup","attrs","propsSize","computed","className","style","useSizeProps","finalCls","value","finalStyle","_objectSpread","finalProps","class","e","_props$onClick","call","renderFn"],"mappings":";;;;;;;;;;;;;AASA,IAAMA,UAAmB;EAAC,OAAM;EAAM,SAAQ;IAAC,QAAO;IAAO,WAAU;IAAY,SAAQ;IAAM,UAAS;;EAAO,YAAW,CAAC;IAAC,OAAM;IAAO,SAAQ;MAAC,QAAO;MAAe,KAAI;;;;AAE9K,wBAAeC,oBAAgB;EAC7BC,MAAM;EACNC,OAAO;IACLC,MAAM;MACJC,MAAMC;;IAERC,SAAS;MACPF,MAAMG;;;EAGVC,MAAMN,aAAkB;IAAA,IAAX;MAAEO;;QACPC,YAAYC,aAAS,MAAMT,MAAMC;QAEjC;MAAES;MAAWC;QAAUC,8BAAaJ;QAEpCK,WAAWJ,aAAS,MAAM,CAAC,UAAU,8BAA8BC,UAAUI;QAC7EC,aAAaN,aAAS,MAAAO,aAAA,CAAAA,aAAA,KAAYL,MAAMG,QAAWP,MAAMI;QACzDM,aAAaR,aAAS;MAC1BS,OAAOL,SAASC;MAChBH,OAAOI,WAAWD;MAClBV,SAAUe;;iCAAiBnB,MAAMI,0DAANgB,cAAA,CAAAC,IAAA,CAAArB,OAAgB;UAAEmB;;;;WAExC,MAAMG,0BAASzB,SAASoB,WAAWH;;AAAA;;;;"}