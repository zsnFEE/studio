'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-304d0f8c.js');
var vue = require('vue');
var utils_renderFn = require('../utils/render-fn.js');
var utils_useSizeProps = require('../utils/use-size-props.js');
require('../utils/use-common-classname.js');
require('../utils/config-context.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M18.3254 5.15039C18.7878 5.15039 19.236 5.21104 19.6626 5.32482 20.2771 5.02855 20.9439 4.77761 21.6395 4.51579L22.7891 4.08216 22.0831 2.21094 21.1475 2.56397 20.9 2.65702C19.9213 3.02443 18.7833 3.45164 17.7849 4.07517 17.572 4.20812 17.3629 4.3514 17.1604 4.50661 16.6722 3.04976 15.2962 2 13.675 2 11.6454 2 10 3.64535 10 5.675 10 7.55985 11.419 9.11329 13.2469 9.32534 13.7128 6.94583 15.8094 5.15039 18.3254 5.15039zM18.3254 15.5004C16.6293 15.5004 15.1238 14.6845 14.18 13.4237 13.8439 13.9785 13.6504 14.6294 13.6504 15.3254 13.6504 17.355 15.2957 19.0004 17.3254 19.0004 19.355 19.0004 21.0004 17.355 21.0004 15.3254 21.0004 15.1402 20.9867 14.9582 20.9603 14.7803 20.1885 15.2378 19.2876 15.5004 18.3254 15.5004zM13.4083 11.9433C13.291 11.5865 13.2114 11.2125 13.1743 10.8261 11.821 10.6962 10.6199 10.045 9.77423 9.07579 8.89355 9.74717 8.3252 10.8073 8.3252 12.0002 8.3252 14.0298 9.97055 15.6752 12.0002 15.6752 12.0543 15.6752 12.1082 15.674 12.1618 15.6717 12.1542 15.5572 12.1504 15.4418 12.1504 15.3254 12.1504 14.0325 12.6245 12.8504 13.4083 11.9433zM9.09577 3.26211C8.95769 3.24637 8.81729 3.23828 8.675 3.23828 6.64535 3.23828 5 4.88364 5 6.91328 5 8.39077 5.8719 9.66461 7.12923 10.2484 7.48361 9.26316 8.12839 8.41653 8.96031 7.8117 8.66465 7.16035 8.5 6.4369 8.5 5.675 8.5 4.80363 8.71537 3.98255 9.09577 3.26211zM6.83111 11.7505C5.9209 11.4033 5.13389 10.8066 4.55373 10.0439 3.90201 10.7071 3.5 11.6165 3.5 12.6197 3.5 14.37 4.72362 15.8345 6.3621 16.2045 6.46145 15.3742 6.75741 14.6042 7.2021 13.9426 6.95905 13.3429 6.8252 12.6872 6.8252 12.0002 6.8252 11.9165 6.82718 11.8333 6.83111 11.7505zM8.10765 15.4104C7.92569 15.846 7.8252 16.3242 7.8252 16.8258 7.8252 18.8554 9.47055 20.5008 11.5002 20.5008 12.53 20.5008 13.4609 20.0772 14.1281 19.3948 13.393 18.8165 12.8185 18.0432 12.4824 17.153 12.3236 17.1677 12.1628 17.1752 12.0002 17.1752 10.4484 17.1752 9.05616 16.4922 8.10765 15.4104zM6.40539 17.7383C5.04182 17.535 3.85197 16.7997 3.05373 15.7504 2.40201 16.4135 2 17.3229 2 18.3262 2 20.3558 3.64535 22.0012 5.675 22.0012 6.70479 22.0012 7.63566 21.5776 8.30288 20.8952 7.32565 20.1263 6.63216 19.013 6.40539 17.7383z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M18.3254 14.0004C20.355 14.0004 22.0004 12.355 22.0004 10.3254C22.0004 8.29574 20.355 6.65039 18.3254 6.65039C16.2957 6.65039 14.6504 8.29574 14.6504 10.3254C14.6504 12.355 16.2957 14.0004 18.3254 14.0004Z"
    }
  }]
};
var grapeFilled = vue.defineComponent({
  name: "GrapeFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = vue.computed(() => props.size);
    var {
      className,
      style
    } = utils_useSizeProps['default'](propsSize);
    var finalCls = vue.computed(() => ["t-icon", "t-icon-grape-filled", className.value]);
    var finalStyle = vue.computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = vue.computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => utils_renderFn['default'](element, finalProps.value);
  }
});

exports.default = grapeFilled;
//# sourceMappingURL=grape-filled.js.map
