'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-304d0f8c.js');
var vue = require('vue');
var utils_renderFn = require('../utils/render-fn.js');
var utils_useSizeProps = require('../utils/use-size-props.js');
require('../utils/use-common-classname.js');
require('../utils/config-context.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M1 1H23V10.5H21V3H3V16H11.5V18H1V1ZM18.5 14C16.567 14 15 15.567 15 17.5C15 18.1031 15.152 18.67 15.4205 19.1652L20.1654 14.4206C19.6701 14.1521 19.1032 14 18.5 14ZM21.5795 15.8348L16.8346 20.5794C17.3299 20.8479 17.8968 21 18.5 21C20.433 21 22 19.433 22 17.5C22 16.8969 21.848 16.33 21.5795 15.8348ZM13 17.5C13 14.4624 15.4624 12 18.5 12C20.0186 12 21.395 12.6168 22.3892 13.611C23.3833 14.6052 24 15.9816 24 17.5C24 20.5376 21.5376 23 18.5 23C16.9814 23 15.605 22.3832 14.6108 21.389C13.6167 20.3948 13 19.0184 13 17.5ZM2.25 21H11.5V23H2.25V21Z"
    }
  }]
};
var systemBlocked = vue.defineComponent({
  name: "SystemBlockedIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = vue.computed(() => props.size);
    var {
      className,
      style
    } = utils_useSizeProps['default'](propsSize);
    var finalCls = vue.computed(() => ["t-icon", "t-icon-system-blocked", className.value]);
    var finalStyle = vue.computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = vue.computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => utils_renderFn['default'](element, finalProps.value);
  }
});

exports.default = systemBlocked;
//# sourceMappingURL=system-blocked.js.map
